{"version":3,"sources":["@work/work.component.ts"],"names":[],"mappings":"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","file":"@work/work.component.js","sourcesContent":["import {Component, OnInit, AfterViewInit, AfterViewChecked, AfterContentChecked, AfterContentInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {NgForm} from '@angular/common';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\r\nimport {FILE_UPLOAD_DIRECTIVES, FileUploader} from 'ng2-file-upload';\r\nimport {ToasterContainerComponent, ToasterService, ToasterConfig} from 'angular2-toaster';\r\n\r\nimport {WorkService, Work, ClientService, JpaMdSelectComponent, JpaPanel, JpaPanelGroup, JpaPanelContent} from '../shared/index';\r\n\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    templateUrl: './work.component.html',\r\n    styleUrls: ['./work.component.css'],\r\n    directives: [FILE_UPLOAD_DIRECTIVES, MATERIAL_DIRECTIVES, JpaMdSelectComponent, JpaPanel, JpaPanelGroup, JpaPanelContent]\r\n})\r\nexport class WorkComponent implements OnInit {\r\n    public work: Work;\r\n    public clients: string[];\r\n    public uploader:FileUploader = new FileUploader({url: 'wtf'});\r\n    public hasBaseDropZoneOver: boolean = false;\r\n    public submitted = false;\r\n\r\n    //public toasterConfig: ToasterConfig;\r\n    private isNew: boolean = false;\r\n    private ready: boolean = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private service: WorkService,\r\n        private clientService: ClientService,\r\n        private toasterService: ToasterService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // console.log({\r\n        //     snapshot: this.route.snapshot,\r\n        //     params: this.route.snapshot.params,\r\n        //     id: this.route.snapshot.params['id']\r\n        // });\r\n\r\n        this.clientService.options().subscribe(res => {\r\n            this.clients = res;\r\n        });\r\n\r\n        this.isNew = this.route.snapshot.params['id'] === 'new';\r\n\r\n        if (this.isNew) {\r\n            this.work = {\r\n                title: '',\r\n                body: '',\r\n                image: '',\r\n                client: {\r\n                    id: ''\r\n                }\r\n            };\r\n            console.debug('WorkComponent#Create initialized.', this);\r\n        } else {\r\n            let id = +this.route.snapshot.params['id'];\r\n\r\n            this.service.find(id).subscribe(res => {\r\n                this.work = res;\r\n                console.debug('setting work model to ', res);\r\n                this.ready = true;\r\n            });\r\n\r\n            console.debug('WorkComponent#Edit initialized.', this);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.work);\r\n        // if (this.uploader.queue.length) {\r\n        //     window['_files'] = this.uploader.queue;\r\n        //     console.log('Working through gallery queue with ' + this.uploader.queue.length + ' files', {\r\n        //         queue: this.uploader.queue\r\n        //     });\r\n\r\n        //     if (this.work.gallery_new === undefined) this.work.gallery_new = [];\r\n\r\n        //     let i = 0;\r\n        //     const length = this.uploader.queue.length;\r\n\r\n        //     this.uploader.queue.forEach(item => {\r\n        //         item._isLast = ++i === length;\r\n\r\n        //         this.readFile(item._file)\r\n        //             .subscribe(file => {\r\n        //                 this.work.gallery_new.push(file);\r\n        //                 this.uploader.removeFromQueue(item);\r\n        //                 if (item._isLast) {\r\n        //                     this.save();\r\n        //                 }\r\n        //             });\r\n        //     });\r\n\r\n        //     return;\r\n        // }\r\n\r\n        // this.save();\r\n    }\r\n\r\n    save() {\r\n        console.log(this.work);\r\n        // this.submitted = true;\r\n        // if (this.isNew) {\r\n        //     console.log('Save NEW work. ', this.work);\r\n        //     this.service.create(this.work)\r\n        //         .subscribe(res => {\r\n        //             this.toasterService.pop('success', 'Success!', this.work.title + ' has been created.  Redirecting to its page.');\r\n        //             setTimeout(() => {\r\n        //                 this.isNew = false;\r\n        //                 this.work = res;\r\n        //                 this.router.navigate(['/work', res.id]);\r\n        //             }, 6000);\r\n        //         });\r\n        // } else {\r\n        //     console.log('Save UPDATED work. ', this.work);\r\n        //     this.service.update(this.work.id, this.work)\r\n        //         .subscribe(res => {\r\n        //             console.log('response from update: ', res);\r\n        //             this.work = res;\r\n        //             this.toasterService.pop('success', 'Success!', this.work.title + ' has been saved.');\r\n        //         });\r\n        // }\r\n    }\r\n\r\n    ceil(a) {\r\n        return Math.ceil(a);\r\n    }\r\n\r\n    imageFieldChanged(e) {\r\n        let file = e.target.files[0];\r\n        const filename = file.name;\r\n\r\n        console.log('imageFieldChanged to ' + filename);\r\n\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = readerEvt => {\r\n            let base64 = btoa(readerEvt.target['result']);\r\n\r\n            this.work.image_new = {\r\n                name: filename,\r\n                base64: base64\r\n            };\r\n        };\r\n\r\n        reader.readAsBinaryString(file);\r\n    }\r\n\r\n    readFile(file) : Observable<any> {\r\n        const filename = file.name;\r\n\r\n        return Observable.create(observer => {\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = readerEvt => {\r\n                let base64 = btoa(readerEvt.target['result']);\r\n\r\n                observer.next({\r\n                    name: filename,\r\n                    base64: base64\r\n                });\r\n            };\r\n\r\n            reader.readAsBinaryString(file);\r\n        });\r\n    }\r\n\r\n    private _once = {};\r\n\r\n    once(prop) {\r\n        if (this._once[prop]) {\r\n            return this._once[prop];\r\n        }\r\n\r\n        var val = prop.split('.').reduce((carry, next) => { return carry[next]; }, this)\r\n        this._once[prop] = val;\r\n        return val;\r\n    }\r\n\r\n    fileOverBase(e:any):void {\r\n      this.hasBaseDropZoneOver = e;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}