{"version":3,"sources":["@work/work.component.ts"],"names":[],"mappings":"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","file":"@work/work.component.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {NgForm} from '@angular/common';\r\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\r\n\r\nimport {FILE_UPLOAD_DIRECTIVES, FileUploader} from 'ng2-file-upload';\r\nimport {ToasterContainerComponent, ToasterService, ToasterConfig} from 'angular2-toaster';\r\n\r\nimport {WorkService, Work, ClientService} from '../shared/index';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    templateUrl: './work.component.html',\r\n    styleUrls: ['./work.component.css'],\r\n    directives: [FILE_UPLOAD_DIRECTIVES, MATERIAL_DIRECTIVES]\r\n})\r\nexport class WorkComponent implements OnInit {\r\n    public work: Work;\r\n    public clients: string[];\r\n    public uploader:FileUploader = new FileUploader({url: 'wtf'});\r\n    public hasBaseDropZoneOver: boolean = false;\r\n    public submitted = false;\r\n\r\n    //public toasterConfig: ToasterConfig;\r\n    private isNew: boolean = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private service: WorkService,\r\n        private clientService: ClientService,\r\n        private toasterService: ToasterService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        console.log({\r\n            snapshot: this.route.snapshot,\r\n            params: this.route.snapshot.params,\r\n            id: this.route.snapshot.params['id']\r\n        });\r\n\r\n        this.clientService.options().subscribe(res => {\r\n            this.clients = res;\r\n        });\r\n\r\n        this.isNew = this.route.snapshot.params['id'] === 'new';\r\n\r\n        if (this.isNew) {\r\n            console.log('NEW: WorkComponent initialized.', this);\r\n            this.work = {\r\n                title: '',\r\n                body: '',\r\n                image: '',\r\n                client: {\r\n                    id: ''\r\n                }\r\n            };\r\n        } else {\r\n            let id = +this.route.snapshot.params['id'];\r\n\r\n            this.service.find(id).subscribe(res => {\r\n                this.work = res;\r\n            });\r\n\r\n            console.log('EDIT: WorkComponent initialized.', this);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.uploader.queue.length) {\r\n            window['_files'] = this.uploader.queue;\r\n            console.log('Working through gallery queue with ' + this.uploader.queue.length + ' files', {\r\n                queue: this.uploader.queue\r\n            });\r\n\r\n            if (this.work.gallery_new === undefined) this.work.gallery_new = [];\r\n\r\n            let i = 0;\r\n            const length = this.uploader.queue.length;\r\n\r\n            this.uploader.queue.forEach(item => {\r\n                item._isLast = ++i === length;\r\n\r\n                this.readFile(item._file)\r\n                    .subscribe(file => {\r\n                        this.work.gallery_new.push(file);\r\n                        this.uploader.removeFromQueue(item);\r\n                        if (item._isLast) {\r\n                            this.save();\r\n                        }\r\n                    });\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.save();\r\n    }\r\n\r\n    save() {\r\n        this.submitted = true;\r\n        if (this.isNew) {\r\n            console.log('Save NEW work. ', this.work);\r\n            this.service.create(this.work)\r\n                .subscribe(res => {\r\n                    this.toasterService.pop('success', 'Success!', this.work.title + ' has been created.  Redirecting to its page.');\r\n                    setTimeout(() => {\r\n                        this.isNew = false;\r\n                        this.work = res;\r\n                        this.router.navigate(['/work', res.id]);\r\n                    }, 6000);\r\n                });\r\n        } else {\r\n            console.log('Save UPDATED work. ', this.work);\r\n            this.service.update(this.work.id, this.work)\r\n                .subscribe(res => {\r\n                    console.log('response from update: ', res);\r\n                    this.work = res;\r\n                    this.toasterService.pop('success', 'Success!', this.work.title + ' has been saved.');\r\n                });\r\n        }\r\n    }\r\n\r\n    ceil(a) {\r\n        return Math.ceil(a);\r\n    }\r\n\r\n    imageFieldChanged(e) {\r\n        let file = e.target.files[0];\r\n        const filename = file.name;\r\n\r\n        console.log('imageFieldChanged to ' + filename);\r\n\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = readerEvt => {\r\n            let base64 = btoa(readerEvt.target['result']);\r\n\r\n            this.work.image_new = {\r\n                name: filename,\r\n                base64: base64\r\n            };\r\n        };\r\n\r\n        reader.readAsBinaryString(file);\r\n    }\r\n\r\n    readFile(file) : Observable<any> {\r\n        const filename = file.name;\r\n\r\n        return Observable.create(observer => {\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = readerEvt => {\r\n                let base64 = btoa(readerEvt.target['result']);\r\n\r\n                observer.next({\r\n                    name: filename,\r\n                    base64: base64\r\n                });\r\n            };\r\n\r\n            reader.readAsBinaryString(file);\r\n        });\r\n    }\r\n\r\n    fileOverBase(e:any):void {\r\n      this.hasBaseDropZoneOver = e;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}