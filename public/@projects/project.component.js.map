{"version":3,"sources":["@projects/project.component.ts"],"names":[],"mappings":"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","file":"@projects/project.component.js","sourcesContent":["import { Component, HostBinding, OnInit, OnDestroy, ViewChild, QueryList } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { ToasterService } from 'angular2-toaster';\nimport { CKEditor } from 'ng2-ckeditor';\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\nimport {\n    ProjectService,\n    Project,\n    CacheService,\n    PANEL2_DIRECTIVES,\n    PanelFormComponent,\n    PanelFormControl,\n    PanelFormControlTextfield,\n    PanelFormControlSelect,\n    PanelFormControlTextarea,\n    PanelFormControlDragnDrop,\n    PanelFormControlFiles,\n    LoggerService\n} from '../shared/index';\n\n@Component({\n    moduleId: module.id,\n    templateUrl: './project.component.html',\n    styleUrls: ['./project.component.css'],\n    directives: [\n        MATERIAL_DIRECTIVES,\n        PANEL2_DIRECTIVES\n    ]\n})\nexport class ProjectComponent implements OnInit, OnDestroy {\n    public clients: { label: string, value: any }[];\n    public controls: PanelFormControl<any>[];\n\n    public isNew: boolean = false;\n    public ready: boolean = false;\n    public saving: boolean = false;\n\n    private _originalTitle: string;\n    private _project: Project = new Project();\n    private _subscriptions: Subscription[] = [];\n\n    @HostBinding('class.new') get isNewClass() { return this.isNew; }\n\n    @ViewChild(PanelFormComponent) public _formCmp: PanelFormComponent;\n    public ckEditors: QueryList<CKEditor>;\n\n    constructor(\n        private route: ActivatedRoute,\n        private service: ProjectService,\n        private toasterService: ToasterService,\n        private router: Router,\n        private cache: CacheService,\n        private log: LoggerService\n    ) { }\n\n    get project(): Project { return this._project; }\n    set project(v: Project) {\n        this._project = v;\n        this.setup();\n    }\n\n    ngOnInit() {\n        this.clients = this.cache.get('clients');\n\n        if (this.route.snapshot.params['id'] === 'new') {\n            this.ready = true;\n            this.isNew = true;\n            setTimeout(() => {\n              this.ckEditors = this._formCmp._ckEditors;\n            });\n        } else {\n            let sub = this.service.find(+this.route.snapshot.params['id']).subscribe(res => {\n                this.project = res;\n                this.ready = true;\n                setTimeout(() => {\n                  this.ckEditors = this._formCmp._ckEditors;\n                });\n            });\n\n            this._subscriptions.push(sub);\n        }\n\n        this.controls = [\n          new PanelFormControlTextfield({\n            name: 'title',\n            required: true,\n            order: 3\n          }),\n          new PanelFormControlSelect({\n              name: 'client_id',\n              label: 'Client',\n              required: true,\n              options: this.clients\n          }),\n          new PanelFormControlTextarea({\n              name: 'description',\n              required: true,\n              ckeditor: true\n          }),\n          new PanelFormControlFiles({\n              name: 'image',\n              label: 'Cover Image',\n              required: true,\n              multiple: false,\n              type: 'image'\n          }),\n          new PanelFormControlFiles({\n              name: 'images',\n              required: false,\n              multiple: true,\n              filesLabel: 'images in gallery',\n              type: 'image'\n          })\n        ];\n\n        this.log.info('ProjectComponent#'+(this.isNew?'create':'edit')+' initialized.', this);\n    }\n\n    onSubmit(model) {\n        this.saving = true;\n\n        if (this.isNew) {\n            this.log.log('Save NEW project. ', model);\n\n            let sub = this.service.create(model)\n                .subscribe(res => {\n                    this.toasterService.pop('success', 'Success!', res.title + ' has been created.  Redirecting to its page.');\n                    setTimeout(() => {\n                        this.project = res;\n                        this.log.log(\"Navigating to /projects/\" + res.id);\n                        this.router.navigate(['/projects', res.id]);\n                        this.reset();\n                    }, 1000);\n                },err => {\n                    this.log.log('Error when saving project: ', err);\n                    this.saving = false;\n                    this.toasterService.pop('error', 'Uh oh.', 'Something went wrong when saving this project.  Sorry.  Try again later and/or alert the developer!');\n                });\n\n            this._subscriptions.push(sub);\n        } else {\n            this.log.log('Save UPDATED project. ', model);\n\n            let sub = this.service.update(this.project.id, model)\n                .subscribe(res => {\n                    this.log.log('response from update: ', res);\n                    this.project = res;\n                    this.reset();\n                    this.toasterService.pop('success', 'Success!', res.title + ' has been saved.');\n                }, err => {\n                    this.log.log('Error when saving projet: ', err);\n                    this.saving = false;\n                    this.toasterService.pop('error', 'Uh oh.', 'Something went wrong when saving this project.  Sorry.  Try again later and/or alert the developer!');\n                });\n\n            this._subscriptions.push(sub);\n        }\n    }\n\n    private setup() {\n        this._originalTitle = this._project.title;\n        this.isNew = this.project.id === undefined;\n    }\n\n    private reset(e?:Event) {\n        if (e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        this.log.info('ProjectComponent.reset()', this);\n\n        this.saving = false;\n\n        // Temporary workaround until angular2 implements\n        // a proper form reset\n        this.ready = false;\n        if (this.ckEditors.length) {\n          this._formCmp._ckEditors.forEach(editor => editor.instance.destroy());\n        }\n\n        setTimeout(() => { \n          this.ready = true; \n          setTimeout(() => {\n            this.ckEditors = this._formCmp._ckEditors;\n          });\n        });\n    }\n\n    /**\n     * Cleanup just before Angular destroys the directive/component. Unsubscribe \n     * observables and detach event handlers to avoid memory leaks.\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach(sub => {\n            if (sub) sub.unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"/source/"}