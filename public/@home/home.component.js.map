{"version":3,"sources":["@home/home.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAmD,eAAe,CAAC,CAAA;AACnE,kCAAoC,kCAAkC,CAAC,CAAA;AACvE,sBAAuB,gBAAgB,CAAC,CAAA;AAExC,sBAAmD,iBAAiB,CAAC,CAAA;AAgBrE;IAAA;IAmCA,CAAC;IAhCG;QAAC,gBAAS,CAAC,4BAAoB,CAAC;;qDAAA;IAfpC;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,uBAAuB;YACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;YACnC,UAAU,EAAE;gBACR,uCAAmB;gBACnB,4BAAoB;gBACpB,cAAM;aACT;YACD,SAAS,EAAE,CAAC,oBAAY,CAAC;SAC5B,CAAC;;qBAAA;IAoCF,oBAAC;AAAD,CAnCA,AAmCC,IAAA;AAnCY,qBAAa,gBAmCzB,CAAA","file":"@home/home.component.js","sourcesContent":["import { Component, ContentChild, ViewChild } from '@angular/core';\r\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { FileUploader, ImageUploadComponent } from '../shared/index';\r\n/**\r\n * This class represents the lazy loaded HomeComponent.\r\n */\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css'],\r\n    directives: [\r\n        MATERIAL_DIRECTIVES,\r\n        ImageUploadComponent,\r\n        NgForm\r\n    ],\r\n    providers: [FileUploader]\r\n})\r\nexport class HomeComponent {\r\n    public model: any;\r\n\r\n    @ViewChild(ImageUploadComponent) _uploadCmp: ImageUploadComponent;\r\n\r\n    // ngAfterViewInit() {\r\n    //     console.log('HomeComponent view initialized.', this);\r\n    // }\r\n\r\n    // handleChange(e) {\r\n    //     console.log('HOME --- handleChange', e);\r\n    // }\r\n\r\n    // fileAdded(e) {\r\n    //     console.log('HOME --- fileAdded', e);\r\n    // }\r\n\r\n    // imageAdded(e) {\r\n    //     console.log('HOME --- IMAGE ADDED TO GRID ', e);\r\n    // }\r\n\r\n    // imageLoaded(e) {\r\n    //     console.log('HOME --- IMAGE LOADED ON GRID', e);\r\n    // }\r\n\r\n    // submit() {\r\n    //     console.log('this.model = ', this.model);\r\n\r\n    //     console.log(this._uploadCmp.uploader.queue);\r\n\r\n    //     this._uploadCmp.uploader.uploadAll()\r\n    //         .subscribe(e => {\r\n    //             console.log('upload all response: ', e);\r\n    //         });\r\n    // }\r\n}"],"sourceRoot":"/source/"}