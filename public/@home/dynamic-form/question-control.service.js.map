{"version":3,"sources":["@home/dynamic-form/question-control.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6B,eAAe,CAAC,CAAA;AAC7C,sBAAmD,gBAAgB,CAAC,CAAA;AAKpE;IACE;IAAgB,CAAC;IAEjB,4CAAW,GAAX,UAAY,SAA8B;QACxC,IAAI,KAAK,GAAQ,EAAE,CAAC;QAEpB,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;YACxB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,mBAAW,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;kBAC1D,IAAI,mBAAW,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,iBAAS,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAZH;QAAC,iBAAU,EAAE;;8BAAA;IAab,6BAAC;AAAD,CAZA,AAYC,IAAA;AAZY,8BAAsB,yBAYlC,CAAA","file":"@home/dynamic-form/question-control.service.js","sourcesContent":["import { Injectable }   from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { QuestionBase } from './question-base';\r\n\r\n@Injectable()\r\nexport class QuestionControlService {\r\n  constructor() { }\r\n\r\n  toFormGroup(questions: QuestionBase<any>[] ) {\r\n    let group: any = {};\r\n\r\n    questions.forEach(question => {\r\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\r\n                                              : new FormControl(question.value || '');\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}