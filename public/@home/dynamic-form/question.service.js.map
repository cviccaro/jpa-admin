{"version":3,"sources":["@home/dynamic-form/question.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiC,eAAe,CAAC,CAAA;AACjD,kCAAiC,qBAAqB,CAAC,CAAA;AAEvD,iCAAiC,oBAAoB,CAAC,CAAA;AAEtD;IAAA;IAgCA,CAAC;IA7BC,sCAAY,GAAZ;QACE,IAAI,SAAS,GAAwB;YACnC,IAAI,oCAAgB,CAAC;gBACnB,GAAG,EAAE,OAAO;gBACZ,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE;oBACP,EAAC,GAAG,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,EAAC;oBAC/B,EAAC,GAAG,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,EAAC;oBAC/B,EAAC,GAAG,EAAE,MAAM,EAAI,KAAK,EAAE,MAAM,EAAC;oBAC9B,EAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;iBACrC;gBACD,KAAK,EAAE,CAAC;aACT,CAAC;YACF,IAAI,kCAAe,CAAC;gBAClB,GAAG,EAAE,WAAW;gBAChB,KAAK,EAAE,YAAY;gBACnB,KAAK,EAAE,UAAU;gBACjB,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,CAAC;aACT,CAAC;YACF,IAAI,kCAAe,CAAC;gBAClB,GAAG,EAAE,cAAc;gBACnB,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,CAAC;aACT,CAAC;SACH,CAAC;QACF,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAjB,CAAiB,CAAC,CAAC;IACrD,CAAC;IAhCH;QAAC,iBAAU,EAAE;;uBAAA;IAiCb,sBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,uBAAe,kBAgC3B,CAAA","file":"@home/dynamic-form/question.service.js","sourcesContent":["import { Injectable }       from '@angular/core';\nimport { DropdownQuestion } from './question-dropdown';\nimport { QuestionBase }     from './question-base';\nimport { TextboxQuestion }  from './question-textbox';\n@Injectable()\nexport class QuestionService {\n  // Todo: get from a remote source of question metadata\n  // Todo: make asynchronous\n  getQuestions() {\n    let questions: QuestionBase<any>[] = [\n      new DropdownQuestion({\n        key: 'brave',\n        label: 'Bravery Rating',\n        options: [\n          {key: 'solid',  value: 'Solid'},\n          {key: 'great',  value: 'Great'},\n          {key: 'good',   value: 'Good'},\n          {key: 'unproven', value: 'Unproven'}\n        ],\n        order: 3\n      }),\n      new TextboxQuestion({\n        key: 'firstName',\n        label: 'First name',\n        value: 'Bombasto',\n        required: true,\n        order: 1\n      }),\n      new TextboxQuestion({\n        key: 'emailAddress',\n        label: 'Email',\n        type: 'email',\n        order: 2\n      })\n    ];\n    return questions.sort((a, b) => a.order - b.order);\n  }\n}\n"],"sourceRoot":"/source/"}