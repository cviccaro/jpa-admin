{"version":3,"sources":["shared/middleware/blog.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAC9D,uBAAoD,iBAAiB,CAAC,CAAA;AACtE,mBAAmD,SAAS,CAAC,CAAA;AAE7D,sBAAmE,mBAAmB,CAAC,CAAA;AAIvF;IAIE,mBACU,KAAe,EACf,UAAsB,EACtB,eAAgC,EAChC,KAAqB;QAHrB,UAAK,GAAL,KAAK,CAAU;QACf,eAAU,GAAV,UAAU,CAAY;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;IAC3B,CAAC;IAEL,+BAAW,GAAX;QAAA,iBAkBC;QAjBC,MAAM,CAAC,eAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC/B,IAAI,YAAY,GAAG,KAAK,CAAC;YACzB,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAA,GAAG;gBAC9D,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;gBACnC,YAAY,GAAG,IAAI,CAAC;gBACpB,EAAE,CAAC,CAAC,OAAO,CAAC;oBAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAA,GAAG;gBACpD,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBAC9B,OAAO,GAAG,IAAI,CAAC;gBACf,EAAE,CAAC,CAAC,YAAY,CAAC;oBAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;YAAC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACvD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC/C,CAAC;IAnCH;QAAC,iBAAU,EAAE;;iBAAA;IAoCb,gBAAC;AAAD,CAnCA,AAmCC,IAAA;AAnCY,iBAAS,YAmCrB,CAAA","file":"shared/middleware/blog.guard.js","sourcesContent":["import { Injectable, OnDestroy, OnInit } from '@angular/core';\r\nimport { CanActivate, ActivatedRoute, Params } from '@angular/router';\r\nimport { Observable, Observer, Subscription } from 'rxjs/Rx';\r\n\r\nimport { BlogService, TagService, DivisionService, JpaCache } from '../services/index';\r\n\r\n\r\n@Injectable()\r\nexport class BlogGuard implements CanActivate, OnDestroy {\r\n  private divisionsSub: Subscription;\r\n  private tagsSub: Subscription;\r\n\r\n  constructor(\r\n    private cache: JpaCache,\r\n    private tagService: TagService,\r\n    private divisionService: DivisionService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  canActivate() {\r\n    return Observable.create(observer => {\r\n      let gotDivisions = false;\r\n      let gotTags = false;\r\n\r\n      this.divisionsSub = this.divisionService.options().subscribe(res => {\r\n        this.cache.store('divisions', res);\r\n        gotDivisions = true;\r\n        if (gotTags) observer.complete(true);\r\n      });\r\n\r\n      this.tagsSub = this.tagService.options().subscribe(res => {\r\n        this.cache.store('tags', res);\r\n        gotTags = true;\r\n        if (gotDivisions) observer.complete(true);\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.divisionsSub) this.divisionsSub.unsubscribe();\r\n    if (this.tagsSub) this.tagsSub.unsubscribe();\r\n  }\r\n}"],"sourceRoot":"/source/"}