{"version":3,"sources":["shared/middleware/blog.guard.ts"],"names":[],"mappings":"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","file":"shared/middleware/blog.guard.js","sourcesContent":["import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { CanActivate, ActivatedRoute, Params } from '@angular/router';\n\nimport { BlogService, TagService, DivisionService } from '../services/index';\n\nimport { Observable, Observer, Subscription } from 'rxjs/Rx';\n\n@Injectable()\nexport class BlogGuard implements CanActivate, OnDestroy {\n    private subs: Subscription[] = [];\n    private params: Params;\n\n    constructor(\n      private blogService: BlogService, \n      private tagService: TagService, \n      private divisionService: DivisionService, \n      private route: ActivatedRoute\n    ) { }\n\n    canActivate() {\n      return Observable.create(observer => {\n        let gotTags = false;\n        let gotBlog = false;\n        let gotDivisions = false;\n\n        let _sub = this.tagService.options().subscribe(res => {\n          console.log('got tag options!', res);\n            this.tagService.cache(res);\n            gotTags = true;\n            if (gotBlog && gotDivisions) observer.complete(true);\n        });\n\n        let _sub2 = this.divisionService.options().subscribe(res => {\n          this.divisionService.cache(res);\n          gotDivisions = true;\n          if (gotTags && gotBlog) observer.complete(true);\n        })\n\n        this.subs.push(_sub2);\n\n        let _sub3 = this.route.params.subscribe(params => {\n            let id = params['id'];\n            if (id === undefined || id === 'new') {\n              gotBlog = true;\n            } else {\n              id = +id;\n              let _sub3 = this.blogService.find(id).subscribe(res => {\n                  this.blogService.cache(res);\n                  gotBlog = true;\n                  if (gotTags && gotDivisions) observer.complete(true);\n              });\n              this.subs.push(_sub3);\n            }\n        });\n\n        this.subs.push(_sub3);\n      });\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(sub => sub.unsubscribe());\n    }\n}"],"sourceRoot":"/source/"}