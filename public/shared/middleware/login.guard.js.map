{"version":3,"sources":["shared/middleware/login.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,uBAAoC,iBAAiB,CAAC,CAAA;AAEtD,6BAA4B,0BAA0B,CAAC,CAAA;AAGvD;IACI,oBAAoB,OAAoB,EAAU,MAAc;QAA5C,YAAO,GAAP,OAAO,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAErE,gCAAW,GAAX,UAAY,IAAI,EAAE,KAAK;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAXL;QAAC,iBAAU,EAAE;;kBAAA;IAYb,iBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,kBAAU,aAWtB,CAAA","file":"shared/middleware/login.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n    constructor(private service: AuthService, private router: Router) { }\n\n    canActivate(next, state) {\n        if (this.service.authorized) {\n            this.router.navigate(next);\n            return false;\n        }\n\n        return true;\n    }\n}\n"],"sourceRoot":"/source/"}