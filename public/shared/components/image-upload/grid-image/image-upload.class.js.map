{"version":3,"sources":["shared/components/image-upload/grid-image/image-upload.class.ts"],"names":[],"mappings":";AAEA,2BAAyB,iBAAiB,CAAC,CAAA;AAE3C;IAoBI,qBAAY,IAAU,EAAE,GAAY;QAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAE7E,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,yBAAG,GAAH,UAAI,KAAqC;QAAzC,iBAIC;QAHG,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,KAAI,EAAE,CAAC,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;IAC7D,CAAC;IAED,0BAAI,GAAJ;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QAEtB,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;QACrD,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3B,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC7B,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;YACxD,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM,CAAC,MAAM,GAAG,UAAA,SAAS;gBACrB,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBAEnD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC,CAAC;YAEF,UAAU,CAAC,cAAM,OAAA,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAA1B,CAA0B,EAAE,EAAE,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IACL,kBAAC;AAAD,CA5DA,AA4DC,IAAA;AA5DY,mBAAW,cA4DvB,CAAA","file":"shared/components/image-upload/grid-image/image-upload.class.js","sourcesContent":["import { JpFile } from '../../../index';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nexport class ImageUpload implements JpFile {\r\n    alias: string;\r\n    alt: string;\r\n    created_at: any;\r\n    extension: string;\r\n    filename: string;\r\n    id: any;\r\n    idx: number;\r\n    isNew: boolean;\r\n    last_modified: any;\r\n    mimetype: string;\r\n    path: string;\r\n    size: number;\r\n    updated_at: any;\r\n    title: string;\r\n    url: string;\r\n\r\n    _file: File;\r\n    webkitRelativePath: any;\r\n\r\n    constructor(file: File, idx?: number) {\r\n        this._file = file;\r\n        this.idx = idx;\r\n        this.filename = this.alias = file.name;\r\n        this.mimetype = file.type;\r\n        this.size = file.size;\r\n        this.last_modified = file['lastModified'] || file.lastModifiedDate.getTime();\r\n\r\n        if (file['webkitRelativePath']) {\r\n            this.webkitRelativePath = file['webkitRelativePath'];\r\n        }\r\n\r\n        console.debug('ImageUpload constructed ...', this);\r\n    }\r\n\r\n    map(mapFn: (key: string, val: any) => any) {\r\n        let keys = Object.keys(this);\r\n\r\n        keys.forEach(key => mapFn.apply(this, [key, this[key]]));\r\n    }\r\n\r\n    load() : Observable<any> {\r\n        let file = this._file;\r\n\r\n        console.info('ImageUpload # read file: start', file);\r\n        const filename = file.name;\r\n\r\n        return Observable.create(observer => {\r\n            console.debug('ImageUpload # read file: working', file);\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = readerEvt => {\r\n                console.debug('ImageUpload # read file: complete');\r\n\r\n                observer.next(reader.result);\r\n            };\r\n\r\n            setTimeout(() => reader.readAsDataURL(file), 50);\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}