{"version":3,"sources":["shared/components/image-upload/grid-image/grid-image.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2G,eAAe,CAAC,CAAA;AAE3H,qBAAqB,yBAAyB,CAAC,CAAA;AAW/C;IAAA;QACW,aAAQ,GAAG,KAAK,CAAC;QAad,kBAAa,GAAG,IAAI,mBAAY,EAAE,CAAC;QACnC,gBAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;IAqB/C,CAAC;IAlBG,gCAAY,GAAZ,UAAa,CAAC;QACV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,gCAAY,GAAZ,UAAa,CAAC;QACV,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,4BAAQ,GAAR;QAAA,iBAKC;QAJsB,IAAI,CAAC,QAAQ,CAAC,aAAc,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAA,CAAC;YACtE,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAI,CAAC,CAAC;YACvC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,KAAI,CAAC,WAAW,EAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0BAAM,GAAN;QACI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7E,CAAC;IAhCD;QAAC,gBAAS,CAAC,OAAO,CAAC;;+CAAA;IAEnB;QAAC,YAAK,EAAE;;kDAAA;IAOR;QAAC,YAAK,EAAE;;4CAAA;IAER;QAAC,aAAM,EAAE;;oDAAA;IACT;QAAC,aAAM,EAAE;;kDAAA;IAET;QAAC,mBAAY,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,CAAC;;;;iDAAA;IAI9C;QAAC,mBAAY,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,CAAC;;;;iDAAA;IA9BlD;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,gBAAgB;YAC1B,WAAW,EAAE,mBAAmB;YAChC,SAAS,EAAE,CAAC,kBAAkB,CAAC;YAC/B,UAAU,EAAE;gBACR,aAAM;aACT;SACJ,CAAC;;iBAAA;IAqCF,gBAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,iBAAS,YAoCrB,CAAA","file":"shared/components/image-upload/grid-image/grid-image.js","sourcesContent":["import { Component, Input, Output, AfterViewInit, ViewChild, ElementRef, EventEmitter, HostListener } from '@angular/core';\r\n\r\nimport {MdIcon} from '@angular2-material/icon';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-grid-image',\r\n    templateUrl: './grid-image.html',\r\n    styleUrls: ['./grid-image.css'],\r\n    directives: [\r\n        MdIcon\r\n    ]\r\n})\r\nexport class GridImage {\r\n    public hovering = false;\r\n\r\n    @ViewChild('image') public _imageEl: ElementRef;\r\n\r\n    @Input() imageConfig: {\r\n        id?: any,\r\n        isNew?: boolean,\r\n        alt?: string,\r\n        title?: string,\r\n        image_url: string\r\n    }\r\n    @Input() index: number;\r\n\r\n    @Output() clickedRemove = new EventEmitter();\r\n    @Output() imageLoaded = new EventEmitter();\r\n\r\n    @HostListener('mouseenter', ['$event.target'])\r\n    onMouseEnter(e) {\r\n        this.hovering = true;\r\n    }\r\n    @HostListener('mouseleave', ['$event.target'])\r\n    onMouseLeave(e) {\r\n        this.hovering = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        (<HTMLImageElement>this._imageEl.nativeElement).addEventListener('load', e => {\r\n            console.log('GridImage Loaded.', this);\r\n            this.imageLoaded.emit({event: e, config: this.imageConfig});\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        this.clickedRemove.emit({ config: this.imageConfig, index: this.index });\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}