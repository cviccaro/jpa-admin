{"version":3,"sources":["shared/components/image-upload/image-upload.component.ts"],"names":[],"mappings":"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","file":"shared/components/image-upload/image-upload.component.js","sourcesContent":["import {\n    forwardRef,\n    Component,\n    AfterViewInit,\n    AfterContentInit,\n    SimpleChange,\n    OnChanges,\n    Input,\n    Output,\n    HostListener,\n    EventEmitter,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    Provider,\n    QueryList\n} from '@angular/core';\n\nimport { NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BooleanFieldValue } from '@angular2-material/core/annotations/field-value';\nimport { MD_GRID_LIST_DIRECTIVES, MdGridList } from '@angular2-material/grid-list';\n\nimport { MD_PROGRESS_BAR_DIRECTIVES } from '@angular2-material/progress-bar';\nimport { MD_ICON_DIRECTIVES } from '@angular2-material/icon';\nimport { Observable } from 'rxjs/Rx';\n\nimport { GridImage, ImageUpload } from './grid-image/index';\nimport { JpImage } from '../../models/jp-image';\n\nimport { DND_DIRECTIVES } from 'ng2-dnd/ng2-dnd';\n\nimport { AuthService } from '../../services/auth.service';\n\nconst noop = () => { };\nlet nextUniqueId = 0;\n\nexport const IMAGE_UPLOAD_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\n    useExisting: forwardRef(() => ImageUploadComponent),\n    multi: true\n});\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-image-upload',\n    templateUrl: './image-upload.component.html',\n    styleUrls: ['./image-upload.component.css'],\n    directives: [\n        MD_GRID_LIST_DIRECTIVES,\n        MD_PROGRESS_BAR_DIRECTIVES,\n        MD_ICON_DIRECTIVES,\n        NgModel,\n        GridImage,\n        DND_DIRECTIVES\n    ],\n    providers: [IMAGE_UPLOAD_VALUE_ACCESSOR]\n})\nexport class ImageUploadComponent implements OnChanges, ControlValueAccessor {\n    public isDragOver: boolean = false;\n    public isLoading: boolean = false;\n\n    private _imagesLoaded:number = 0;\n    private _value: File[] = [];\n\n    private _rows: any[] = [];\n    private _cols: any[] = [];\n    private _draggingImage: boolean = false;\n    private _dragImage: any;\n    private _dropZoneStart: number;\n    private _droppedImage: any;\n\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_: any) => void = noop;\n\n\n    /**\n     * Content directives\n     */\n    @ViewChildren(GridImage) private _gridImages: QueryList<GridImage>;\n    @ViewChild(MdGridList) private _gridList: MdGridList;\n\n    /**\n     * Inputs\n     */\n    @Input() @BooleanFieldValue() multiple: boolean = false;\n    @Input() images: any[] = [];\n\n    // MdGridList\n    @Input() gutterSize: string = \"8px\";\n    @Input() cols: number = 4;\n    @Input() rowHeight: any = '16:9';\n\n    // form-related\n    @Input() name: string = null;\n    @Input() @BooleanFieldValue() required: boolean = false;\n    @Input() id: string = `jpa-panel-${nextUniqueId++}`;\n    @Input() step: number = null;\n    @Input() tabIndex: number = null;\n\n    /**\n     * Outputs\n     */\n    @Output() fileAdded: EventEmitter<File[]> = new EventEmitter<File[]>();\n    @Output() imageLoaded = new EventEmitter();\n    @Output() imageAdded = new EventEmitter();\n    @Output() imageRemoved = new EventEmitter();\n    @Output() change = new EventEmitter();\n\n    /** element  outputs **/\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @Output('blur')\n    get onBlur(): Observable<FocusEvent> {\n        return this._blurEmitter.asObservable();\n    }\n\n    @Output('focus')\n    get onFocus(): Observable<FocusEvent> {\n        return this._focusEmitter.asObservable();\n    }\n\n    /** @internal */\n    handleFocus(event: FocusEvent) {\n        console.log('ImageUploadComponent#handleFocus', event);\n    }\n\n    /** @internal */\n    handleBlur(event: FocusEvent) {\n        console.log('ImageUploadComponent#handleBlur', event);\n    }\n\n    /**\n     * Lifecycle\n     */\n    constructor(authService: AuthService) { }\n\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\n        console.debug('ImageUploadComponent#OnChanges ---', changes);\n    }\n\n    /**\n     * Grid interaction events\n     */\n    onDragOver(e: any) {\n        if (this._draggingImage) {\n            return;\n        }\n\n        let transfer = this._getTransfer(e);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._stopEvent(e);\n        this.isDragOver = true;\n    }\n\n    onDragLeave(e: any) {\n        if (this._draggingImage) {\n            return;\n        }\n\n        this._stopEvent(e);\n        this.isDragOver = false;\n    }\n\n    onFileDrop(e: any) {\n        if (this._draggingImage) {\n            console.log('onFileDrop cancelling because we are dragging image.');\n            this._draggingImage = false;\n            return;\n        } else {\n            console.log('onFileDrop ', e);\n            let files = e.target.files || e.dataTransfer.files;\n\n            this._stopEvent(e);\n            this.fileAdded.emit(files);\n\n            this.isDragOver = false;\n            this.isLoading = true;\n\n            this.readFiles(files);\n        }\n        console.log('ImageUploadComponent#FileDrop', {\n            e: e,\n            this: this\n        });\n    }\n\n    readFiles(files) {\n        let count = this.value.length;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n\n            let image = new ImageUpload(file);\n            let reader = new FileReader();\n\n            this.isLoading = true;\n\n            reader.addEventListener('load', e => {\n                image.url = reader.result;\n                this.addImageToGrid(image);\n                this.isLoading = false;\n            });\n\n            setTimeout(() => { reader.readAsDataURL(file); });\n        }\n    }\n\n    addImageToGrid(image) {\n        console.log('Loaded new image: ', image);\n\n        let value = this.value;\n        value.push(image);\n        this.value = value;\n\n        this.imageAdded.emit(image);\n    }\n\n    /**\n     * NgControl value\n     */\n\n     get value(): any { return this._value; };\n     @Input() set value(v: any) {\n         console.debug('ImageUploadComponent# set value(): ', {\n             v: v,\n             _value: this._value\n         });\n         if (v !== this._value) {\n             this._value = v;\n             console.warn('emitting change', v);\n             //this.change.emit(v);\n             this._onChangeCallback(v);\n             //this.setCounts();\n         }\n\n         this._onChangeCallback(v);\n     }\n\n    /**\n     * ControlValueAccessor implementation\n     */\n    writeValue(value: any) {\n        this._value = value || [];\n        console.debug('ImageUpload#writeValue: ', {value: this._value});\n    }\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /** internal */\n    private _stopEvent(e: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /** internal */\n    private _getTransfer(event: any): any {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    }\n\n    /** internal */\n    private _haveFiles(types: any): any {\n        if (!types) {\n            return false;\n        }\n\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        } else if (types.contains) {\n            return types.contains('Files');\n        } else {\n            return false;\n        }\n    }\n\n    handleImageLoaded(e: any) {\n        e._hasNew = false;\n\n        if (!e.config.hasOwnProperty('id')) {\n            this.isLoading = false;\n\n            e._hasNew = true;\n        } else {\n            let id = e.config.id;\n\n            if (++this._imagesLoaded === this.value.length) {\n                this.isLoading = false;\n            }\n        }\n\n        this.imageLoaded.emit(e);\n    }\n\n    handleClickedRemove(e: any) {\n        console.debug('ImageUpload.handleClickedRemove', {\n            e: e,\n            value: this.value\n        });\n\n        let value = this.value;\n        value.splice(e.index, 1);\n        this.value = value;\n\n        this.imageRemoved.emit(e);\n    }\n\n    /**\n     * Drag and drop grid images to reorder\n     */\n\n    private _dragData(image: JpImage, idx: number): JpImage {\n        return Object.assign(image, {idx: idx})\n    }\n\n    imageDragStart(e: any): void {\n        this._dropZoneStart = e.dragData.idx;\n        this._draggingImage = true;\n        this._dragImage = e.dragData;\n        console.debug('ImageUpload imageDragStart  from zone ' + this._dropZoneStart + ': ', e);\n    }\n\n    imageDropped(event: any, image: JpImage, zone: number): void {\n        console.info('ImageUpload image dropped', {\n            event: event,\n            image: image,\n            zone: zone\n        });\n        this._draggingImage = false;\n        this._dragImage = null;\n\n        let data = event.dragData;\n\n        if (this._dropZoneStart !== zone) {\n            this.moveImage(this._dropZoneStart, zone);\n        }\n    }\n\n    onDragEnd(e: any) {\n        console.debug('onDragEnd');\n        this._draggingImage = false;\n    }\n\n    moveImage(old_index, new_index): void {\n        let images = this.value;\n\n        const source = images[old_index];\n        const target = images[new_index];\n\n        images[new_index] = source;\n        images[old_index] = target;\n\n        this.value = images;\n\n        this.change.emit(this.value);\n        this._onChangeCallback(this.value);\n\n        console.log('Just dropped image from drop zone ' + this._dropZoneStart + ' to drop zone ' + new_index);\n    };\n\n    /**\n     * Form reset\n     */\n    reset() {\n\n    }\n}\n"],"sourceRoot":"/source/"}