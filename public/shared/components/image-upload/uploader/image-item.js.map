{"version":3,"sources":["shared/components/image-upload/uploader/image-item.ts"],"names":[],"mappings":";AAAA;IAkBI,mBAAY,IAAU;QARtB,UAAK,GAAW,KAAK,CAAC,CAAC;QAEvB,aAAQ,GAAW,CAAC,CAAC;QACrB,gBAAW,GAAY,KAAK,CAAC;QAC7B,eAAU,GAAY,KAAK,CAAC;QAKxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,uBAAG,GAAH,UAAI,KAAqC;QAAzC,iBAgBC;QAfG,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;YACZ,MAAM,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,KAAK,UAAU,CAAC;gBAChB,KAAK,aAAa,CAAC;gBACnB,KAAK,YAAY,CAAC;gBAElB,KAAK,MAAM;oBACP,KAAK,CAAC;gBACV;oBACI,IAAI,KAAK,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC;oBACtB,KAAK,CAAC,KAAK,CAAC,KAAI,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YACxC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,gBAAC;AAAD,CAlDA,AAkDC,IAAA;AAlDY,iBAAS,YAkDrB,CAAA","file":"shared/components/image-upload/uploader/image-item.js","sourcesContent":["export class ImageItem {\n    id: any;\n    path: any;\n    name: any;\n    alias: any;\n    type: any;\n    size: any;\n    last_modified: any;\n    webkitRelativePath: any;\n\n    index: number = void 0;\n\n    progress: number = 0;\n    isUploading: boolean = false;\n    isUploaded: boolean = false;\n    _file: File;\n    _xhr: any;\n\n    constructor(file: File) {\n        this._file = file;\n\n        this.name = file.name;\n        this.type = file.type;\n        this.size = file.size;\n        this.last_modified = file.lastModifiedDate;\n\n        if (file['webkitRelativePath']) {\n            this.webkitRelativePath = file['webkitRelativePath'];\n        }\n\n        console.info('ImageItem constructed ...', this);\n    }\n\n    map(mapFn: (key: string, val: any) => any) {\n        let keys = Object.keys(this);\n\n        keys.forEach(key => {\n            switch(key) {\n                case 'progress':\n                case 'isUploading':\n                case 'isUploaded':\n                // case '_file':\n                case '_xhr':\n                    break;\n                default:\n                    let value = this[key];\n                    mapFn.apply(this, [key, value]);\n            }\n        });\n    }\n}\n"],"sourceRoot":"/source/"}