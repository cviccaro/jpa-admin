{"version":3,"sources":["shared/components/image-upload/uploader/uploader.ts"],"names":[],"mappings":"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","file":"shared/components/image-upload/uploader/uploader.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ImageItem } from './image-item';\nimport { Observable } from 'rxjs/Rx';\n\nlet nextUniqueId = 0;\n\n@Injectable()\nexport class FileUploader {\n    public queue: any[] = [];\n    public isUploading: boolean = false;\n    public progress: number = 0;\n\n    private _url: string;\n    private _authToken: string;\n\n    constructor() {\n        console.log('Wow Im a file uploader');\n    }\n\n    get url() {\n        return this._url;\n    }\n\n    public setUrl(url: string) {\n        console.log('ImageUploader set URL to ' + url);\n        this._url = url;\n    }\n\n    get authToken() {\n        return this._authToken;\n    }\n    public setAuthToken(token: string) {\n        console.warn('ImageUploader set authtoken to ' + token);\n        this._authToken = token;\n    }\n\n    public addToQueue(items: ImageItem[]): void {\n        console.debug('Uploader.addToQueue() # ', items);\n        let list: any[] = [];\n        let count = this.queue.length;\n\n        for (let file of items) {\n            this.queue.push(file);\n        }\n\n        if (this.queue.length !== count) {\n            this.progress = this._getTotalProgress();\n        }\n        console.debug('ImageUploader added ' + (this.queue.length - count) + ' images.');\n    }\n\n    private _getTotalProgress(value: number = 0): number {\n        let notUploaded = this.getNotUploadedItems().length;\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        let ratio = 100 / this.queue.length;\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n\n\n    public getNotUploadedItems(): ImageItem[] {\n        return this.queue.filter((item: any) => !item.isUploaded);\n    }\n\n    public uploadAll(): Observable<any> {\n        let items = this.queue;\n\n        console.log('ImageUploader.uploadAll() #', items);\n\n        if (!items.length) {\n            return Observable.of(false).delay(5000).do(val => val);\n        }\n\n        return Observable.create(observer => {\n            let items = this.getNotUploadedItems().filter((item: any) => !item.isUploading);\n\n            items.forEach(item => {\n                this.prepareItem(item);\n                this.uploadItem(item);\n            });\n        });\n    }\n\n    public uploadItem(image: ImageItem): void {\n        console.log('ImageUploader.uploadItem()  # ', image);\n        if (this.isUploading) {\n            return;\n        }\n\n        this.isUploading = true;\n        this._upload(image);\n    }\n\n    public prepareItem(item: ImageItem): void {\n        item.index = item.index || nextUniqueId++;\n    }\n\n    public isFile(value: any): boolean {\n        return (File && value instanceof File);\n    }\n\n    private getCookie(name: string): any {\n        let value = \"; \" + document.cookie;\n        let parts = value.split(\"; \" + name + \"=\");\n        if (parts.length == 2) {\n            return parts.pop().split(\";\").shift();\n        }\n\n        return false;\n    }\n\n    /**\n     * Upload internal\n     */\n    private _upload(image: ImageItem) {\n        //let xhr = image._xhr = new XMLHttpRequestUpload()\n        console.log('ImageUploader._upload() #', image);\n\n        let xhr = image._xhr = new XMLHttpRequest();\n        let form = new FormData();\n\n        // let xsrf = this.getCookie('XSRF-TOKEN');\n        // if (xsrf) {\n        //   console.log('appending xsrf', xsrf);\n        //   form.append('_token', xsrf);\n        // }\n\n        image.map((key, val) => {\n            console.log('appending to form ', { key: key, val: val });\n            form.append(key, val);\n        });\n\n        console.log('going to upload this here image: ', {\n            image: image,\n            form: form,\n            xhr: xhr\n        });\n\n        image.isUploading = true;\n\n        xhr.upload.onprogress = (event: any) => {\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            let total = this._getTotalProgress(progress);\n            this.progress = total;\n\n            console.log('progress!!!!!!', {event: event, progress: progress, total: total, xhr: xhr});\n            // this.onProgressItem(item, progress);\n            // this.onProgressAll(total);\n        };\n        xhr.onerror = e => { console.log('xhr on error', {e: e, xhr: xhr}); }\n        xhr.onload = e => { console.log('xhr on load ', {e: e, xhr: xhr}); }\n        xhr.onabort = e => { console.log('xhr on abort', {e: e, xhr: xhr}); }\n        xhr.open('POST', this.url, true);\n\n        //xhr.withCredentials = true;\n\n        // if (xsrf) {\n        //   console.log('Setting Request Header \"X-XSRF-TOKEN\" to ', xsrf);\n        //   xhr.setRequestHeader('X-XSRF-TOKEN', xsrf);\n        // }\n        if (this.authToken) {\n          console.log('Setting Request Header \"Authorization\" to ', 'Bearer ' + this.authToken);\n          xhr.setRequestHeader('Authorization', 'Bearer ' + this.authToken);\n        }\n\n        xhr.send(form);\n\n        console.log('just sent xhr!', xhr);\n    }\n}\n"],"sourceRoot":"/source/"}