{"version":3,"sources":["shared/components/dragdrop/draggable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAAsF,eAAe,CAAC,CAAA;AAEtG,mCAA0C,sBAAsB,CAAC,CAAA;AACjE,iCAA8C,oBAAoB,CAAC,CAAA;AAGnE;IAA+B,6BAAyB;IAMvD,mBAAY,EAAc,EAAE,OAAwB,EAAE,GAAsB;QAC3E,kBAAM,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QANf,gBAAW,GAA+B,IAAI,mBAAY,EAAgB,CAAC;QAC3E,cAAS,GAA+B,IAAI,mBAAY,EAAgB,CAAC;QAMlF,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IACrD,CAAC;IAEE,wCAAoB,GAApB,UAAqB,KAAiB;IAOnC,CAAC;IAED,sCAAkB,GAAlB,UAAmB,KAAiB;IAOpC,CAAC;IA5BP;QAAC,aAAM,EAAE;;kDAAA;IACT;QAAC,aAAM,EAAE;;gDAAA;IAEN;QAAC,YAAK,EAAE;;+CAAA;IALZ;QAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC;;iBAAA;IA+B3C,gBAAC;AAAD,CA9BA,AA8BC,CA9B8B,8CAAyB,GA8BvD;AA9BY,iBAAS,YA8BrB,CAAA","file":"shared/components/dragdrop/draggable.js","sourcesContent":["import { Directive, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { DragDropAbstractComponent } from './dragdrop.component';\r\nimport { DragDropData, DragDropService } from './dragdrop.service';\r\n\r\n@Directive({ selector: '[jpa-draggable]' })\r\nexport class Draggable extends DragDropAbstractComponent {\r\n\t@Output() onDragStart: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n\t@Output() onDragEnd: EventEmitter<DragDropData> = new EventEmitter<DragDropData>();\r\n\r\n    @Input() dragData: any;\r\n\r\n\tconstructor(el: ElementRef, service: DragDropService, cdr: ChangeDetectorRef) {\r\n\t\tsuper(el, service, cdr);\r\n\t\tconsole.log('Draggable constructed', this);\r\n\r\n        this._defaultCursor = this._elem.style.cursor;\r\n\t}\r\n\r\n    _onDragStartCallback(event: MouseEvent) {\r\n           // this.service.isDragged = true;\r\n           // this.service.dragData = this.dragData;\r\n           // this.service.onDragSuccessCallback = this.onDragSuccessCallback;\r\n           // this._elem.classList.add(this._config.onDragStartClass);\r\n           // //\r\n           // this.onDragStart.emit({dragData: this.dragData, mouseEvent: event});\r\n       }\r\n\r\n       _onDragEndCallback(event: MouseEvent) {\r\n           // this.service.isDragged = false;\r\n           // this.service.dragData = null;\r\n           // this.service.onDragSuccessCallback = null;\r\n           // this._elem.classList.remove(this._config.onDragStartClass);\r\n           // //\r\n           // this.onDragEnd.emit({dragData: this.dragData, mouseEvent: event});\r\n       }\r\n}\r\n"],"sourceRoot":"/source/"}