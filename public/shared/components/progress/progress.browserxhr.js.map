{"version":3,"sources":["shared/components/progress/progress.browserxhr.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA2B,eAAe,CAAC,CAAA;AAE3C,sBAAgC,SAAS,CAAC,CAAA;AAG1C;IAAwC,sCAAU;IAC9C,4BAAmB,OAAwB;QACvC,iBAAO,CAAC;QADO,YAAO,GAAP,OAAO,CAAiB;QAEvC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IACD,kCAAK,GAAL;QAAA,iBAwBC;QAvBG,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,GAAG,GAAG,gBAAK,CAAC,KAAK,WAAE,CAAC;QAExB,GAAG,CAAC,UAAU,GAAG,UAAC,KAAK;YACnB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACrC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,GAAG,CAAC,kBAAkB,GAAG;YACrB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE;gBAClC,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,QAAQ,EAAE,GAAG,CAAC,QAAQ;aACzB,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBAErB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACrC,CAAC;YACL,CAAC;QACL,CAAC,CAAC;IACN,CAAC;IA/BL;QAAC,iBAAU,EAAE;;0BAAA;IAgCb,yBAAC;AAAD,CA/BA,AA+BC,CA/BuC,iBAAU,GA+BjD;AA/BY,0BAAkB,qBA+B9B,CAAA","file":"shared/components/progress/progress.browserxhr.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BrowserXhr } from '@angular/http';\r\n\r\nimport { ProgressService } from './index';\r\n\r\n@Injectable()\r\nexport class ProgressBrowserXhr extends BrowserXhr {\r\n    constructor(public service: ProgressService) {\r\n        super();\r\n        this.build();\r\n        console.log('ProgressBrowserXhr constructed.', this);\r\n    }\r\n    build(): any {\r\n        console.log('ProgressBrowserXhr build called ', this);\r\n        let xhr = super.build();\r\n\r\n        xhr.onprogress = (event) => {\r\n            console.log('xhr.onprogress', event);\r\n            this.service.update(event);\r\n        };\r\n\r\n        xhr.onreadystatechange = () => {\r\n            console.log('xhr.onreadystatechange', {\r\n                readyState: xhr.readyState,\r\n                status: xhr.status,\r\n                response: xhr.response\r\n            });\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    //observer.next(JSON.parse(xhr.response));\r\n                    this.service.complete(xhr.response);\r\n                } else {\r\n                    this.service.error(xhr.response);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}"],"sourceRoot":"/source/"}