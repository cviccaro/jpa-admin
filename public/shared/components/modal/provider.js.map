{"version":3,"sources":["shared/components/modal/provider.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwG,eAAe,CAAC,CAAA;AAExH,mBAA+C,SAAS,CAAC,CAAA;AACzD,QAAO,yBAAyB,CAAC,CAAA;AAQjC;IA4BI,kBAAoB,GAAsB;QA5B9C,iBAuDC;QA3BuB,QAAG,GAAH,GAAG,CAAmB;QAtBlC,WAAM,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAuB/B,IAAI,CAAC,SAAS,GAAG,IAAI,eAAU,CAAc,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,UAAU,GAAG,QAAQ,EAA1B,CAA0B,CAAC,CAAC,KAAK,EAAE,CAAC;IAEjG,CAAC;IAtBD,sBAAY,8BAAQ;aAApB;YACI,MAAM,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBACvB,KAAK,MAAM;oBACP,MAAM,CAAC;wBACH,MAAM,EAAE,MAAM;wBACd,UAAU,EAAE,QAAQ;wBACpB,MAAM,EAAE,EAAE;wBACV,SAAS,EAAE,IAAI;qBAClB,CAAC;gBACN;oBACI,MAAM,CAAC;wBACH,MAAM,EAAE,SAAS;wBACjB,UAAU,EAAE,QAAQ;wBACpB,OAAO,EAAE,eAAe;wBACxB,SAAS,EAAE,KAAK;qBACnB,CAAC;YACV,CAAC;QACL,CAAC;;;OAAA;;IAOD,uBAAI,GAAJ,UAAK,MAAmB;QAAxB,iBAqBC;QApBG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAEvC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;QAC1B,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACnE,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;QACpF,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEnC,MAAM,CAAC,eAAU,CAAC,MAAM,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,aAAa,GAAG,QAAQ,EAA7B,CAA6B,CAAC,CAAC;IACxE,CAAC;IAvDL;QAAC,iBAAU,EAAE;;gBAAA;IAwDb,eAAC;AAAD,CAvDA,AAuDC,IAAA;AAvDY,gBAAQ,WAuDpB,CAAA","file":"shared/components/modal/provider.js","sourcesContent":["import { Injectable, Inject, ComponentResolver, ComponentRef, ComponentFactory, ViewContainerRef } from '@angular/core';\r\n\r\nimport {Observable, Observer, Subscriber} from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/share';\r\n\r\nimport { ModalConfig } from './modal.interface';\r\nimport { ModalContainerComponent } from './container';\r\nimport { ModalBackdropComponent } from './backdrop';\r\nimport { ModalComponent } from './modal';\r\n\r\n@Injectable()\r\nexport class JpaModal {\r\n    public openModal: Observable<ModalConfig>;\r\n    private _openModal: Observer<ModalConfig>;\r\n\r\n    public buttonClicked: Observer<any>;\r\n\r\n    private _modes = ['alert', 'form'];\r\n    private _config: ModalConfig;\r\n\r\n    private get defaults(): ModalConfig {\r\n        switch(this._config.mode) {\r\n            case 'form':\r\n                return {\r\n                    okText: 'Save',\r\n                    cancelText: 'Cancel',\r\n                    inputs: [],\r\n                    showTitle: true\r\n                };\r\n            default:\r\n                return {\r\n                    okText: 'GOT IT!',\r\n                    cancelText: 'Cancel',\r\n                    message: 'Are you sure?',\r\n                    showTitle: false\r\n                };\r\n        }\r\n    };\r\n\r\n    constructor(private _cr: ComponentResolver) {\r\n        this.openModal = new Observable<ModalConfig>(observer => this._openModal = observer).share();\r\n\r\n    }\r\n\r\n    open(config: ModalConfig) {\r\n        this._config = config;\r\n\r\n        if (this._modes.indexOf(config.mode) < 0) {\r\n            // Assign a default if no mode is provided\r\n            config.mode = 'alert';\r\n        }\r\n\r\n        this._config = Object.assign(this.defaults, config);\r\n\r\n        if (this._config.mode === 'form' && this._config.inputs.length === 0) {\r\n            throw new Error('Modal with type \\'form\\' needs some inputs.');\r\n        }\r\n\r\n        if (!this._openModal) {\r\n            throw new Error(\"No Modal Containers have been initialized to receive modals.\");\r\n        }\r\n\r\n        this._openModal.next(this._config);\r\n\r\n        return Observable.create(observer => this.buttonClicked = observer);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}