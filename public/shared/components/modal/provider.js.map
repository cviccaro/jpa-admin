{"version":3,"sources":["shared/components/modal/provider.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAwG,eAAe,CAAC,CAAA;AAExH,mBAA+C,SAAS,CAAC,CAAA;AACzD,QAAO,yBAAyB,CAAC,CAAA;AAQjC;IAaI,kBAAoB,GAAsB;QAb9C,iBA6BC;QAhBuB,QAAG,GAAH,GAAG,CAAmB;QAPlC,aAAQ,GAAgB;YAC5B,MAAM,EAAE,SAAS;YACjB,UAAU,EAAE,QAAQ;YACpB,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,eAAe;SAC3B,CAAC;QAGE,IAAI,CAAC,SAAS,GAAG,IAAI,eAAU,CAAc,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,UAAU,GAAG,QAAQ,EAA1B,CAA0B,CAAC,CAAC,KAAK,EAAE,CAAC;IAEjG,CAAC;IAED,uBAAI,GAAJ,UAAK,MAAmB;QAAxB,iBAUC;QATG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;QACpF,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,MAAM,CAAC,CAAC;QAEhD,MAAM,CAAC,eAAU,CAAC,MAAM,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,aAAa,GAAG,QAAQ,EAA7B,CAA6B,CAAC,CAAC;IACxE,CAAC;IA7BL;QAAC,iBAAU,EAAE;;gBAAA;IA8Bb,eAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,gBAAQ,WA6BpB,CAAA","file":"shared/components/modal/provider.js","sourcesContent":["import { Injectable, Inject, ComponentResolver, ComponentRef, ComponentFactory, ViewContainerRef } from '@angular/core';\n\nimport {Observable, Observer, Subscriber} from 'rxjs/Rx';\nimport 'rxjs/add/operator/share';\n\nimport { ModalConfig } from './modal.interface';\nimport { ModalContainerComponent } from './container';\nimport { ModalBackdropComponent } from './backdrop';\nimport { ModalComponent } from './modal';\n\n@Injectable()\nexport class JpaModal {\n    public openModal: Observable<ModalConfig>;\n    private _openModal: Observer<ModalConfig>;\n\n    public buttonClicked: Observer<any>;\n\n    private defaults: ModalConfig = {\n        okText: 'GOT IT!',\n        cancelText: 'Cancel',\n        mode: 'alert',\n        message: 'Are you sure?'\n    };\n\n    constructor(private _cr: ComponentResolver) {\n        this.openModal = new Observable<ModalConfig>(observer => this._openModal = observer).share();\n\n    }\n\n    open(config: ModalConfig) {\n        config = Object.assign(this.defaults, config);\n        if (!this._openModal) {\n            throw new Error(\"No Modal Containers have been initialized to receive modals.\");\n        }\n\n        this._openModal.next(config);\n        console.log('Opened modal with config', config);\n\n        return Observable.create(observer => this.buttonClicked = observer);\n    }\n}\n"],"sourceRoot":"/source/"}