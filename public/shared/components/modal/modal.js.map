{"version":3,"sources":["shared/components/modal/modal.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAgG,eAAe,CAAC,CAAA;AAChH,kCAAqC,8BAA8B,CAAC,CAAA;AACpE,uBAAwD,iBAAiB,CAAC,CAAA;AAC1E,mBAA2B,SAAS,CAAC,CAAA;AACrC,gCAAsE,mBAAmB,CAAC,CAAA;AAS1F;IAAA;QACY,mBAAc,GAA8B,IAAI,mBAAY,EAAe,CAAC;QAE5E,WAAM,GAAiC,EAAE,CAAC;IAuCtD,CAAC;IAnCqB,sBAAI,oCAAQ;aAAZ;YACd,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC9C,CAAC;;;OAAA;IAED,wCAAe,GAAf;QACI,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,+BAAM,GAAN,UAAO,IAAI,EAAE,MAAM,EAAE,KAAK;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,kBAAkB,EAAE,KAAK,CAAC,CAAC;QAE9C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,wCAAe,GAAf;QACI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,qCAAY,GAAZ,UAAa,GAAoB,EAAE,CAAQ;QACvC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,oCAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,YAAY,GAAgB,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;YAE/D,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAK,MAAM;wBACP,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,IAAI,iCAAe,CAAC,KAAK,CAAC,EAA1B,CAA0B,CAAC,CAAC;wBACjF,KAAK,CAAC;gBACd,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IApCD;QAAC,YAAK,EAAE;;kDAAA;IAER;QAAC,aAAM,CAAC,QAAQ,CAAC;;kDAAA;IAdrB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,cAAc;YAC3B,SAAS,EAAE,CAAC,aAAa,CAAC;YAC1B,UAAU,EAAE,CAAC,uCAAmB,EAAE,iBAAQ,EAAE,qBAAY,EAAE,wBAAe,CAAC;SAC7E,CAAC;;sBAAA;IA2CF,qBAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CY,sBAAc,iBA0C1B,CAAA","file":"shared/components/modal/modal.js","sourcesContent":["import { Component, AfterViewInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { MATERIAL_DIRECTIVES }  from '../../libs/angular2-material';\r\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { ModalConfig, ModalInput, ModalFormColumn, ModalAction } from './modal.interface';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-modal',\r\n    templateUrl: './modal.html',\r\n    styleUrls: ['./modal.css'],\r\n    directives: [MATERIAL_DIRECTIVES, NgSwitch, NgSwitchCase, NgSwitchDefault]\r\n})\r\nexport class ModalComponent implements AfterViewInit, OnChanges {\r\n    private _actionEmitter: EventEmitter<ModalAction> = new EventEmitter<ModalAction>();\r\n\r\n    private _files: { [key: string] : FileList } = {};\r\n\r\n    @Input() config: ModalConfig;\r\n\r\n    @Output('action') get onAction(): Observable<ModalAction> {\r\n        return this._actionEmitter.asObservable();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        console.log('ModalComponent View Initialized.', this);\r\n    }\r\n\r\n    action(type, config, event) {\r\n        console.log(type + ' button clicked.', event);\r\n\r\n        this._actionEmitter.emit({ type: type, config: config, event: event });\r\n    }\r\n\r\n    modalFormSubmit() {\r\n        this._actionEmitter.emit({ type: 'submit', config: this.config, event: null });\r\n    }\r\n\r\n    handleChange(col: ModalFormColumn, e: Event) {\r\n        col.value = e.target['files'];\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.hasOwnProperty('config')) {\r\n            let currentValue: ModalConfig = changes['config'].currentValue;\r\n\r\n            if (currentValue) {\r\n                switch (currentValue.mode) {\r\n                    case \"form\":\r\n                        this.config.inputs = this.config.inputs.map(input => new ModalFormColumn(input));\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}