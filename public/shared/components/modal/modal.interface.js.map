{"version":3,"sources":["shared/components/modal/modal.interface.ts"],"names":[],"mappings":";;;;;;AAoCA;IAAA;QAGI,SAAI,GAAW,MAAM,CAAC;QACtB,aAAQ,GAAY,KAAK,CAAC;QAK1B,WAAM,GAAY,KAAK,CAAC;IAC5B,CAAC;IAAD,uBAAC;AAAD,CAVA,AAUC,IAAA;AAVY,wBAAgB,mBAU5B,CAAA;AAED;IAAoC,kCAAgB;IAChD,wBAAY,MAAW;QACnB,iBAAO,CAAC;QAER,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAEhB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;YAClG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,2CAAkB,GAAlB,UAAmB,MAAwB;QAA3C,iBAyBC;QAxBG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,SAA8B;gBACnD,IAAI,MAAM,GAAO,KAAK,CAAC;gBAEvB,MAAM,CAAC,OAAO,CAAC,UAAC,KAAqB;oBACjC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,CAAC;wBAAC,MAAM,GAAG,KAAK,CAAC;gBACxD,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,IAAI,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,EAAE,CAAC,KAAI,EAAE,MAAM,CAAC,CAAC,CAAC;oBAE7D,MAAM,CAAA,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;wBACtB,KAAK,QAAQ;4BACT,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;4BACrB,KAAK,CAAC;wBACV,KAAK,UAAU;4BACX,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;4BACvB,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,IAAI,CAAC,uBAAoB,SAAS,CAAC,MAAM,+DAAyD,KAAI,CAAC,IAAM,CAAC,CAAC;gBAC3H,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IACL,qBAAC;AAAD,CAtCA,AAsCC,CAtCmC,gBAAgB,GAsCnD;AAtCY,sBAAc,iBAsC1B,CAAA","file":"shared/components/modal/modal.interface.js","sourcesContent":["export interface ModalConfig {\r\n    mode?: string;\r\n    title?: string;\r\n    message?: string;\r\n    buttons?: any[];\r\n    cancelText?: string;\r\n    okText?: string;\r\n    inputs?: ModalInput[];\r\n    formClass?: any;\r\n    showTitle?: boolean;\r\n}\r\n\r\nexport interface ModalAction {\r\n    type: string;\r\n    config?: any;\r\n    event: MouseEvent;\r\n}\r\n\r\nexport interface ModalInputCondition {\r\n    target: string;\r\n    condition: (source: ModalInput, target: ModalInput) => boolean;\r\n    action: string;\r\n}\r\n\r\nexport interface ModalInput {\r\n    label?: string;\r\n    name: string;\r\n    type?: string;\r\n    required?: boolean;\r\n    placeholder?: string;\r\n    value?: any;\r\n    hint?: any;\r\n    hidden?: boolean;\r\n    conditions?: ModalInputCondition[];\r\n}\r\n\r\nexport class GenericFormField implements ModalInput {\r\n    label: string;\r\n    name: string;\r\n    type: string = 'text';\r\n    required: boolean = false;\r\n    placeholder: string;\r\n    value: any;\r\n    hint: any;\r\n    conditions: ModalInputCondition[];\r\n    hidden: boolean = false;\r\n}\r\n\r\nexport class ModalFormField extends GenericFormField {\r\n    constructor(column: any) {\r\n        super();\r\n\r\n        if (!column.label) {\r\n            // @todo: drop label property?\r\n            column.label = column.name.substr(0,1).toUpperCase() + column.name.substr(1,column.name.length-1);\r\n            column.placeholder = column.label;\r\n        }\r\n        Object.assign(this, column);\r\n    }\r\n\r\n    evaluateConditions(inputs: ModalFormField[]) {\r\n        if (this.conditions) {\r\n            this.conditions.forEach((condition: ModalInputCondition) => {\r\n                let target:any = false;\r\n\r\n                inputs.forEach((input: ModalFormField) => {\r\n                    if (input.name === condition.target) target = input;\r\n                });\r\n\r\n                if (target) {\r\n                    let result = condition.condition.apply(this, [this, target]);\r\n\r\n                    switch(condition.action) {\r\n                        case 'hidden':\r\n                            this.hidden = result;\r\n                            break;\r\n                        case 'required':\r\n                            this.required = result;\r\n                            break;\r\n                    }\r\n                } else {\r\n                    console.warn(`No target field \"${condition.target}\" was found while checking condition for source field ${this.name}`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}