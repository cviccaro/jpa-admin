{"version":3,"sources":["shared/components/modal/container.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBASO,eAAe,CAAC,CAAA;AAIvB,yBAAuC,YAAY,CAAC,CAAA;AACpD,sBAA+B,SAAS,CAAC,CAAA;AACzC,yBAAyB,YAAY,CAAC,CAAA;AAUtC;IAuBI,iCAAmB,EAAc,EAAU,OAAiB,EAAU,GAAuB;QAA1E,OAAE,GAAF,EAAE,CAAY;QAAU,YAAO,GAAP,OAAO,CAAU;QAAU,QAAG,GAAH,GAAG,CAAoB;QApBrF,WAAM,GAAG,KAAK,CAAC;IAsBvB,CAAC;IAhBD,sBAAW,8CAAS;aAApB;YACI,IAAI,EAAE,GAAG,mBAAmB,CAAC;YAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACjC,CAAC;YAED,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;;;OAAA;IAE2B,sBAAI,+CAAU;aAAd,cAAmB,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;;;OAAA;IASlF,0CAAQ,GAAR;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,iDAAe,GAAf;QACI,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IAEO,qDAAmB,GAA3B;QAAA,iBAWC;QAVG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,MAAmB;YAC5E,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACnC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;YACvC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACrE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;YAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACrE,CAAC;IAlCD;QAAC,kBAAW,CAAC,aAAa,CAAC;;6DAAA;IAE3B;QAAC,gBAAS,CAAC,UAAU,CAAC;;6DAAA;IACtB;QAAC,gBAAS,CAAC,OAAO,CAAC;;0DAAA;IA5BvB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,yHAAyH;YACnI,SAAS,EAAE,CAAC,iBAAiB,CAAC;YAC9B,UAAU,EAAE,CAAE,iCAAsB,EAAE,sBAAc,CAAE;SACzD,CAAC;;+BAAA;IAsDF,8BAAC;AAAD,CArDA,AAqDC,IAAA;AArDY,+BAAuB,0BAqDnC,CAAA","file":"shared/components/modal/container.js","sourcesContent":["import {\n    Component,\n    ElementRef,\n    ViewChild,\n    AfterViewInit,\n    ChangeDetectorRef,\n    OnInit,\n    OnDestroy,\n    HostBinding\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs/Rx';\n\nimport { ModalBackdropComponent } from './backdrop';\nimport { ModalComponent } from './modal';\nimport { JpaModal } from './provider';\nimport { ModalConfig } from './modal.interface';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-modal-container',\n    template: '<jpa-modal #modal [config]=\"config\" [class]=\"classList\"></jpa-modal><jpa-modal-backdrop #backdrop></jpa-modal-backdrop>',\n    styleUrls: ['./container.css'],\n    directives: [ ModalBackdropComponent, ModalComponent ]\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n\n    public config: ModalConfig;\n    private opened = false;\n\n    private openModalSubscriber: Subscription;\n    private actionSubscriber: Subscription;\n    private okModalSubscriber: Subscription;\n\n    public get classList() {\n        let cl = 'jpa-modal-wrapper';\n        if (this.config) {\n            cl += ' ' + this.config.mode;\n        }\n\n        return cl;\n    }\n\n    @HostBinding('attr.hidden') get hiddenAttr() { return this.opened ? null : true; }\n\n    @ViewChild('backdrop') private backdrop: ModalBackdropComponent;\n    @ViewChild('modal') private modal: ModalComponent;\n\n    constructor(public el: ElementRef, private service: JpaModal, private ref : ChangeDetectorRef) {\n\n    }\n\n    ngOnInit() {\n        this.registerSubscribers();\n        console.log('ModalContainerComponent initialized.', this);\n    }\n\n    ngAfterViewInit() {\n        console.log('ModalContainerComponent View Initialized', this);\n    }\n\n    private registerSubscribers() {\n        this.openModalSubscriber = this.service.openModal.subscribe((config: ModalConfig) => {\n            console.log('open modal!', config);\n            this.config = config;\n            this.opened = true;\n        });\n        this.actionSubscriber = this.modal.onAction.subscribe((e) => {\n            console.log('modal button clicked', e);\n            this.opened = false;\n            this.service.buttonClicked.next(e);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.openModalSubscriber) this.openModalSubscriber.unsubscribe();\n        if (this.okModalSubscriber) this.okModalSubscriber.unsubscribe();\n    }\n}\n"],"sourceRoot":"/source/"}