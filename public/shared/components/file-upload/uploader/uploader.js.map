{"version":3,"sources":["shared/components/file-upload/uploader/uploader.ts"],"names":[],"mappings":"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","file":"shared/components/file-upload/uploader/uploader.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { FileItem } from './file-item';\r\nimport { FileLikeObject } from './file-like-object';\r\n\r\nlet nextUniqueId = 0;\r\n\r\n@Injectable()\r\nexport class FileUploader {\r\n    public queue: any[] = [];\r\n    public isUploading: boolean = false;\r\n    public progress: number = 0;\r\n\r\n\r\n    constructor() {\r\n        console.log('Wow Im a file uploader');\r\n    }\r\n\r\n    public addToQueue(files: any[]): void {\r\n        let list: any[] = [];\r\n        let count = this.queue.length;\r\n\r\n        for (let file of files) {\r\n            this.queue.push(file);\r\n        }\r\n\r\n        if (this.queue.length !== count) {\r\n            this.progress = this._getTotalProgress();\r\n        }\r\n    }\r\n\r\n    private _getTotalProgress(value: number = 0): number {\r\n        let notUploaded = this.getNotUploadedItems().length;\r\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\r\n        let ratio = 100 / this.queue.length;\r\n        let current = value * ratio / 100;\r\n        return Math.round(uploaded * ratio + current);\r\n    }\r\n\r\n\r\n    public getNotUploadedItems(): Array<any> {\r\n        return this.queue.filter((item: any) => !item.isUploaded);\r\n    }\r\n\r\n    public uploadAll():void {\r\n      let items = this.getNotUploadedItems().filter((item:any) => !item.isUploading);\r\n      if (!items.length) {\r\n        return;\r\n      }\r\n      items.forEach(item => {\r\n          this.prepareItem(item);\r\n          this.uploadItem(item);\r\n      });\r\n    }\r\n\r\n    public uploadItem(file: FileItem): void {\r\n        if (this.isUploading) {\r\n           return;\r\n         }\r\n\r\n         this.isUploading = true;\r\n         this._upload(file);\r\n    }\r\n\r\n    public prepareItem(item: FileItem): void {\r\n        item.index = item.index || nextUniqueId++;\r\n    }\r\n\r\n    public isFile(value:any):boolean {\r\n      return (File && value instanceof File);\r\n    }\r\n\r\n    public isFileLikeObject(value:any):boolean {\r\n      return value instanceof FileLikeObject;\r\n    }\r\n\r\n\r\n    /**\r\n     * Upload internal\r\n     */\r\n    private _upload(file: FileItem) {\r\n        //let xhr = file._xhr = new XMLHttpRequestUpload()\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}