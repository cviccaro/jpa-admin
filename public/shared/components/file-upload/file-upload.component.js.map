{"version":3,"sources":["shared/components/file-upload/file-upload.component.ts"],"names":[],"mappings":"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","file":"shared/components/file-upload/file-upload.component.js","sourcesContent":["import {\n    forwardRef,\n    Component,\n    OnInit,\n    AfterViewInit,\n    AfterContentInit,\n    SimpleChange,\n    OnChanges,\n    OnDestroy,\n    Input,\n    Output,\n    HostListener,\n    HostBinding,\n    EventEmitter,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    Provider,\n    QueryList,\n    ElementRef\n} from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\nimport { NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs/Rx';\n\nimport { BooleanFieldValue } from '@angular2-material/core/annotations/field-value';\nimport { MD_GRID_LIST_DIRECTIVES, MdGridList } from '@angular2-material/grid-list';\nimport { MD_PROGRESS_BAR_DIRECTIVES } from '@angular2-material/progress-bar';\nimport { MD_ICON_DIRECTIVES } from '@angular2-material/icon';\n\nimport { DND_DIRECTIVES } from 'ng2-dnd/ng2-dnd';\n\nimport { LoggerService } from '../../services/logger.service';\nimport { GridImage } from './grid-image/index';\nimport { ManagedFile, ManagedImage } from '../../models/file';\nimport { FileUploadToolbar } from './toolbar/index';\nimport { FileCardComponent } from './file-card/index';\nimport { FileIconComponent } from './file-icon/index';\n\nconst noop = () => { };\nlet nextUniqueId = 0;\n\nexport const IMAGE_UPLOAD_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\n    useExisting: forwardRef(() => FileUploadComponent),\n    multi: true\n});\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-file-upload',\n    templateUrl: './file-upload.component.html',\n    styleUrls: ['./file-upload.component.css'],\n    directives: [\n        MD_GRID_LIST_DIRECTIVES,\n        MD_PROGRESS_BAR_DIRECTIVES,\n        MD_ICON_DIRECTIVES,\n        NgModel,\n        GridImage,\n        DND_DIRECTIVES,\n        FileUploadToolbar,\n        FileCardComponent,\n        FileIconComponent,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault\n    ],\n    providers: [IMAGE_UPLOAD_VALUE_ACCESSOR]\n})\nexport class FileUploadComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {\n    constructor(private log: LoggerService) { }\n\n    public isDragOver: boolean = false;\n    public isLoading: boolean = false;\n    private listener: EventListener;\n    private _imagesLoaded: number = 0;\n    private _value: any;\n    private _rows: any[] = [];\n    private _cols: any[] = [];\n    private _dragging: boolean = false;\n    private _dragImage: any;\n    private _dropZoneStart: number;\n    private _droppedImage: any;\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_: any) => void = noop;\n    private _subscriptions: Subscription[] = [];\n\n    public new_file: File;\n\n    public get empty() {\n        return this.value === undefined || this.value === null || Array.isArray(this.value) && this.value.length === 0 || Object.keys(this.value).length === 0;\n    }\n\n    @ViewChildren(GridImage) private _gridImages: QueryList<GridImage>;\n    @ViewChild('currentImage') private _currentImageEl: ElementRef;\n\n    @HostBinding('class') get typeClass() {\n        return `file-upload-${this.type} file-upload-${this.multiple ? 'multiple' : 'single'}`;\n    }\n\n    /**\n     * Inputs\n     */\n    @Input() multiple: boolean = false;\n    @Input() type: string = 'file';\n    @Input() icon: string = 'panorama';\n    @Input() control: any;\n\n    @Input() name: string = null;\n    @Input() accept: string = '*';\n    @Input() @BooleanFieldValue() required: boolean = false;\n    @Input() id: string = `jpa-panel-${nextUniqueId++}`;\n    @Input() step: number = null;\n    @Input() tabIndex: number = null;\n\n    // MdGridList\n    @Input() gutterSize: string = \"8px\";\n    @Input() cols: number = 4;\n    @Input() rowHeight: any = '16:9';\n\n    /**\n     * Outputs\n     */\n    @Output() imageLoaded = new EventEmitter<ManagedImage>();\n    @Output() fileRemoved = new EventEmitter<ManagedFile|ManagedImage>();\n    @Output() fileAdded = new EventEmitter<ManagedFile|ManagedImage>();\n    @Output() change = new EventEmitter();\n\n    /** element  outputs **/\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @Output('blur')\n    get onBlur(): Observable<FocusEvent> {\n        return this._blurEmitter.asObservable();\n    }\n\n    @Output('focus')\n    get onFocus(): Observable<FocusEvent> {\n        return this._focusEmitter.asObservable();\n    }\n\n    /** @internal */\n    handleFocus(event: FocusEvent) {\n        this.log.log('FileUploadComponent#handleFocus', event);\n    }\n\n    /** @internal */\n    handleBlur(event: FocusEvent) {\n        this.log.log('FileUploadComponent#handleBlur', event);\n    }\n\n    get value(): any { return this._value; };\n    @Input() set value(v: any) {\n        v = this.convertValueForInputType(v);\n\n        if (v !== this._value) {\n            this._value = v;\n\n            this.change.emit(v);\n\n            if (this.multiple) {\n                let ngModelValue = (Array.isArray(v) && v.length === 0) ? '' : v;\n                this._onChangeCallback(ngModelValue);\n            } else {\n                this._onChangeCallback(v);\n            }\n            this._onTouchedCallback();\n        }\n    }\n\n    ngOnInit() {\n        if (this.type === 'image' && this.accept === '*') {\n            this.accept = 'image/jpeg, image/jpg, image/gif, image/png';\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.type === 'image' && !this.multiple) {\n            if (this._currentImageEl) {\n                 let imageEl = (<HTMLImageElement>this._currentImageEl.nativeElement);\n\n                 this.registerImageWatcher(imageEl);\n\n                 if (this.value.url) setTimeout(() => { imageEl.src = this._value.url; });\n            }\n        }\n    }\n\n    registerImageWatcher(imageEl: HTMLImageElement) {\n        this.listener = (event: Event) => {\n            let val = this.value;\n\n            val.width = imageEl.naturalWidth;\n            val.height = imageEl.naturalHeight;\n\n            this.value = val;\n\n            if (this.control) {\n                this.control.value = this.value;\n            }\n        };\n        imageEl.addEventListener('load', this.listener);\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * ControlValueAccessor protocol\n     *\n     * Runs when value is first set\n     */\n    writeValue(value: any) {\n        this._value = this.convertValueForInputType(value);\n    }\n\n    /**\n     * Convert the value to the appropriate\n     * type based on properties multiple and type\n     *\n     * @param {any} value [description]\n     */\n    private convertValueForInputType(value: any): any {\n        if (!this.multiple) {\n            if ( !value ) return '';\n\n            return this.managedFile(this.type, value);\n        } else {\n            if ( !value ) return [];\n\n            return value.map((item, i) => this.managedFile(this.type, item, i));\n        }\n    }\n\n    private managedFile(type: string, value: any, idx: number = 0) {\n        switch(type) {\n            case 'image': if (!(value instanceof ManagedImage)) return new ManagedImage(value, idx);\n            case 'file': if (!(value instanceof ManagedFile)) return new ManagedFile(value, idx);\n        }\n\n        return value;\n    }\n\n    private _stopEvent(e: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private _getTransfer(event: any): any {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n    }\n\n    private _haveFiles(types: any): any {\n        if (!types) {\n            return false;\n        }\n\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        } else if (types.contains) {\n            return types.contains('Files');\n        } else {\n            return false;\n        }\n    }\n\n    gridImageLoaded(e: any) {\n        e._hasNew = false;\n\n        if (!e.config.hasOwnProperty('id')) {\n            this.isLoading = false;\n\n            e._hasNew = true;\n        } else if (++this._imagesLoaded === this.value.length) {\n            this.isLoading = false;\n        }\n\n        this.imageLoaded.emit(e);\n    }\n\n    handleClickedRemove(e: any) {\n        let value = this.value.slice(0);\n        value.splice(e.index, 1);\n        this.value = value;\n\n        this.fileRemoved.emit(e);\n    }\n\n    onDragOver(e: any) {\n        if (this._dragging) {\n            this._stopEvent(e);\n            return;\n        }\n\n        let transfer = this._getTransfer(e);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n\n        transfer.dropEffect = 'copy';\n\n        this._stopEvent(e);\n        this.isDragOver = true;\n    }\n\n    onDragLeave(e: any) {\n        if (this._dragging) {\n            return;\n        }\n\n        this._stopEvent(e);\n        this.isDragOver = false;\n    }\n\n    fileDragStart(e: any): void {\n        this._dragging = true;\n    }\n\n    onDragEnd(e: any) {\n        this._stopEvent(e);\n        this._dragging = false;\n    }\n\n    add(event: Event) {\n        if (this._dragging) {\n            this._dragging = false;\n            this.isDragOver = false;\n\n            return;\n        }\n\n        let files = event.target['files'] || event['dataTransfer']['files'];\n\n        this._stopEvent(event);\n        this.isDragOver = false;\n\n        this.readFiles(files);\n    }\n\n    readFiles(files: any[] = []) {\n        if (!files.length) {\n            return;\n        }\n\n        this.isLoading = true;\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n\n            switch(this.type) {\n                case 'image':\n                    let managedImage = new ManagedImage({_file: file}, i);\n\n                    let sub = managedImage.read().subscribe(e => {\n                        managedImage.url = e;\n\n                        this.addToGrid(managedImage);\n\n                        this.isLoading = false;\n                    });\n\n                    this._subscriptions.push(sub);\n\n                    break;\n                default:\n                    let managedFile = new ManagedFile({_file: file}, i);\n\n                    this.addToGrid(managedFile);\n\n                    this.isLoading = false;\n                    break;\n            }\n\n        }\n    }\n\n    addToGrid(file: ManagedFile|ManagedImage) {\n        this.pushValue(file);\n        this.fileAdded.emit(file);\n    }\n\n    pushValue(file: ManagedFile|ManagedImage) {\n        let value = this.value.slice(0);\n\n        value.push(file);\n\n        this.value = value;\n    }\n\n    reorder(event: { dragData: number, mouseEvent: DragEvent }, new_index: number): void {\n        let old_index = event.dragData;\n\n        this._stopEvent(event.mouseEvent);\n        this._dragging = false;\n\n        if (old_index !== new_index) {\n            this.moveFile(old_index, new_index);\n        }\n    }\n\n    /**\n     * Move file within array\n     */\n    moveFile(old_index, new_index): void {\n        let files = this.value;\n\n        const source = files[old_index];\n        const target = files[new_index];\n\n        files[new_index] = source;\n        files[old_index] = target;\n\n        this.value = files;\n    };\n\n    /**\n     * Form reset\n     */\n    reset() {\n        this.log.log('FileUploadComponent.reset()', this);\n    }\n\n    /**\n     * Attach a single file\n     */\n    handleSingleFileAttach(e) {\n        this._stopEvent(e);\n\n        let file: File;\n\n        if (e instanceof File) {\n            file = e;\n        } else {\n            let files = e.target.files || e.dataTransfer.files;\n            file = files[0];\n        }\n\n        switch(this.type) {\n            case 'image':\n                this.attachSingleImage(file);\n                break;\n            case 'file':\n                this.attachSingleFile(file);\n                break;\n\n        }\n    }\n\n    attachSingleFile(file: File) {\n        let managedFile = new ManagedFile({_file: file}, 0);\n\n        this.value = managedFile;\n    }\n\n    attachSingleImage(file: File) {\n        let image = new ManagedImage({_file: file}, 0);\n\n        this.isLoading = true;\n\n        let sub = image.read().subscribe(e => {\n            image.url = e;\n\n            this.value = image;\n\n            let imageEl = (<HTMLImageElement>this._currentImageEl.nativeElement);\n            imageEl.src = e;\n\n            this.isLoading = false;\n        });\n\n        this._subscriptions.push(sub);\n    }\n\n    /**\n     * Remove single file\n     */\n    removeFile(e: any) {\n        this.value = '';\n    }\n\n    /**\n     * Cleanup just before Angular destroys the directive/component. Unsubscribe \n     * observables and detach event handlers to avoid memory leaks.\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach(sub => {\n            if (sub) sub.unsubscribe();\n        });\n\n        if (this._currentImageEl && this.listener) {\n            (<HTMLImageElement>this._currentImageEl.nativeElement).removeEventListener('load', this.listener);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}