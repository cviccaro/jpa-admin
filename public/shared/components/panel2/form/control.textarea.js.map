{"version":3,"sources":["shared/components/panel2/form/control.textarea.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAyD,WAAW,CAAC,CAAA;AASrE;IAA8C,4CAAwB;IASlE,kCAAY,MAAsB;QAChC,kBAAM,MAAM,CAAC,CAAC;QAThB,gBAAW,GAAG,UAAU,CAAC;QAWvB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,EAAE,CAAC;IACpD,CAAC;IATD,sBAAI,2CAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;QAC7B,CAAC;;;OAAA;IASD,0CAAO,GAAP,UAAQ,aAAsB;QAC5B,EAAE,CAAC,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAWL,+BAAC;AAAD,CAjCA,AAiCC,CAjC6C,0BAAgB,GAiC7D;AAjCY,gCAAwB,2BAiCpC,CAAA","file":"shared/components/panel2/form/control.textarea.js","sourcesContent":["import { PanelFormControl, PanelFormControlConfig } from './control';\n\nimport { Observable } from 'rxjs/Rx';\n\nexport interface TextareaConfig extends PanelFormControlConfig {\n  ckeditor?: boolean;\n  ckeditorConfig?: { [key: string] : any };\n}\n\nexport class PanelFormControlTextarea extends PanelFormControl<string> {\n    controlType = 'textarea';\n    ckeditor: boolean;\n    ckeditorConfig: { [key: string] : any };\n\n    get empty(): boolean {\n        return this.value === '';\n    }\n\n    constructor(config: TextareaConfig) {\n      super(config);\n\n      this.ckeditor = config.ckeditor || false;\n      this.ckeditorConfig = config.ckeditorConfig || {};\n    }\n\n    summary(panelExpanded: boolean) {\n      if (panelExpanded || this.empty) {\n        return { text: this.editText, icon: this.editIcon };\n      } else {\n        return { text: this.value.length + ' characters', icon: false};\n      }\n    }\n\n    // summary(panelExpanded: boolean): Observable<{ text: any, icon: string|boolean }> {\n    //     return Observable.create(observer => {\n    //       if (panelExpanded || this.empty) {\n    //         observer.next({ text: this.editText, icon: this.editIcon });\n    //       } else {\n    //         observer.next({ text: this.value.length + ' characters', icon: false});\n    //       }\n    //     });\n    // }\n}\n"],"sourceRoot":"/source/"}