{"version":3,"sources":["shared/components/panel2/form/control.files.ts"],"names":[],"mappings":"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","file":"shared/components/panel2/form/control.files.js","sourcesContent":["import { PanelFormControl, PanelFormControlConfig } from './control';\n\nexport interface PanelFormControlFilesConfig extends PanelFormControlConfig {\n    multiple?: boolean;\n    filesLabel?: string;\n    type?: string;\n    accept?: string;\n}\n\nexport class PanelFormControlFiles extends PanelFormControl<Array<any>> {\n    controlType = 'files';\n    multiple: boolean;\n    editIcon: string|boolean = 'panorama';\n    filesLabel: string;\n    type: string;\n    accept: string;\n\n    get empty(): boolean {\n        if (typeof this.value === 'undefined') return true;\n\n        return !this.value || this.value.length === 0;\n    }\n\n    constructor(config: PanelFormControlFilesConfig) {\n      super(config);\n\n      this.multiple = config.multiple === undefined ? true : config.multiple;\n      this.filesLabel = config.filesLabel || 'files';\n      this.type = config.type || 'file';\n      this.accept = config.accept || '*';\n\n      if (this.type === 'file' && this.editIcon === 'panorama') {\n          this.editIcon = 'attachment';\n      }\n    }\n\n    summary(panelExpanded: boolean): { text: any, icon: string|boolean } {\n        let val: any = this.value;\n\n        if (this.multiple) {\n            let arr = val === '' ? [] : this.value;\n\n            let map = arr.reduce((carry, item) => {\n                if (item['id'] !== undefined) {\n                    carry.current++;\n                } else {\n                    carry.queue++;\n                }\n\n                return carry;\n            }, { queue: 0, current: 0 });\n\n            let text = `${map.current} ${this.filesLabel} | ${map.queue} in queue`;\n\n            return { text: text, icon: this.editIcon };\n        } else {\n            if (val) {\n                let text = '';\n                if (this.type === 'image') {\n                    text = `${val.filename} | ${Math.round(val.size/10)/100}kb`;\n                    if (val.width && val.height) {\n                        text += ` | ${val.width} x ${val.height} px`;\n                    }\n                } else {\n                    text = `${val.filename} | ${Math.round(val.size/10)/100}kb | ${val.mimetype}`;\n                }\n\n                return { text: text, icon: this.editIcon };\n            } else {\n                return { text: this.editableText, icon: this.editIcon };\n            }\n        }\n    }\n}\n"],"sourceRoot":"/source/"}