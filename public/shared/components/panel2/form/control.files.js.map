{"version":3,"sources":["shared/components/panel2/form/control.files.ts"],"names":[],"mappings":"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","file":"shared/components/panel2/form/control.files.js","sourcesContent":["import { PanelFormControl, PanelFormControlConfig } from './control';\r\n\r\nexport interface PanelFormControlFilesConfig extends PanelFormControlConfig {\r\n    multiple?: boolean;\r\n    filesLabel?: string;\r\n    type?: string;\r\n    accept?: string;\r\n}\r\n\r\nexport class PanelFormControlFiles extends PanelFormControl<Array<any>> {\r\n    controlType = 'files';\r\n    multiple: boolean;\r\n    editIcon: string|boolean = 'panorama';\r\n    filesLabel: string;\r\n    type: string;\r\n    accept: string;\r\n\r\n    get empty(): boolean {\r\n        return !this.value || this.value.length === 0;\r\n    }\r\n\r\n    constructor(config: PanelFormControlFilesConfig) {\r\n      super(config);\r\n\r\n      this.multiple = config.multiple === undefined ? true : config.multiple;\r\n      this.filesLabel = config.filesLabel || 'files';\r\n      this.type = config.type || 'file';\r\n      this.accept = config.accept || '*';\r\n\r\n      if (this.type === 'file' && this.editIcon === 'panorama') {\r\n          this.editIcon = 'attachment';\r\n      }\r\n\r\n      console.warn('PanelFormControlFiles constructed', {\r\n          this: this,\r\n          config: config\r\n      });\r\n    }\r\n\r\n    summary(panelExpanded: boolean): { text: any, icon: string|boolean } {\r\n        let val: any = this.value;\r\n\r\n        //@todo: make observable so can use distinctuntilchanged\r\n\r\n        // console.log('get summary for files ', {\r\n        //     this: this,\r\n        //     panelExpanded: panelExpanded,\r\n        //     val: val,\r\n        // });\r\n\r\n        if (this.multiple) {\r\n            let arr = val === '' ? [] : this.value;\r\n\r\n            let map = arr.reduce((carry, item) => {\r\n                if (item['id'] !== undefined) {\r\n                    carry.current++;\r\n                } else {\r\n                    carry.queue++;\r\n                }\r\n\r\n                return carry;\r\n            }, { queue: 0, current: 0 });\r\n\r\n            let text = `${map.current} ${this.filesLabel} | ${map.queue} in queue`;\r\n\r\n            return { text: text, icon: this.editIcon };\r\n        } else {\r\n            if (val) {\r\n                let text = '';\r\n                if (this.type === 'image') {\r\n                    text = `${val.filename} | ${Math.round(val.size/10)/100}kb | ${val.width} x ${val.height} px`;\r\n                } else {\r\n                    text = `${val.filename} | ${Math.round(val.size/10)/100}kb | ${val.mimetype}`;\r\n                }\r\n\r\n                return { text: text, icon: this.editIcon };\r\n            } else {\r\n                return { text: this.editableText, icon: this.editIcon };\r\n            }\r\n        }\r\n    }\r\n\r\n    // summary(panelExpanded: boolean): Observable<{ text: any, icon: string|boolean }> {\r\n    //     return Observable.create(observer => {\r\n    //         let val: any = this.value;\r\n\r\n    //         console.log('PanelFormControlFiles# get summary for files ', {\r\n    //             this: this,\r\n    //             panelExpanded: panelExpanded,\r\n    //             val: val,\r\n    //         });\r\n\r\n    //         let summary = {};\r\n\r\n    //         if (this.multiple) {\r\n    //             let arr = val === '' ? [] : this.value;\r\n\r\n    //             let map = arr.reduce((carry, item) => {\r\n    //                 if (item['id'] !== undefined) {\r\n    //                     carry.current++;\r\n    //                 } else {\r\n    //                     carry.queue++;\r\n    //                 }\r\n\r\n    //                 return carry;\r\n    //             }, { queue: 0, current: 0 });\r\n\r\n    //             let text = `${map.current} ${this.filesLabel} | ${map.queue} in queue`;\r\n\r\n    //             summary = { text: text, icon: this.editIcon };\r\n    //         } else {\r\n    //             let text = `${val.filename} | ${Math.round(val.size/10)/100}kb | ${val.width} x ${val.height} px`;\r\n\r\n    //             summary = { text: text, icon: this.editIcon };\r\n    //         }\r\n\r\n    //         console.log('PanelFormControlFiles# summary() returning ', summary);\r\n\r\n    //         observer.next(summary);\r\n    //     });\r\n    // }\r\n}\r\n"],"sourceRoot":"/source/"}