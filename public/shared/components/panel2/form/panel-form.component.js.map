{"version":3,"sources":["shared/components/panel2/form/panel-form.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel2/form/panel-form.component.js","sourcesContent":["import { Input, Component, OnInit, OnDestroy, AfterViewInit, QueryList, ViewChildren, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\nimport { NgModel, REACTIVE_FORM_DIRECTIVES, NgControl, FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CKEditor } from 'ng2-ckeditor';\n\nimport { MATERIAL_DIRECTIVES } from '../../../libs/angular2-material';\n\nimport { PanelComponent } from '../panel2.component';\nimport { PanelBarComponent, PanelBarTitleComponent, PanelBarSubtitleComponent } from '../bar/index';\nimport { PanelContentComponent } from '../content/index';\nimport { PanelGroupComponent } from '../group/index';\nimport { PanelFormControl } from './control';\nimport { DragnDropFormControl } from './dnd/dnd-form-control.component';\nimport { FileUploadComponent } from '../../file-upload/file-upload.component';\nimport { PanelFormControlSummary } from './summary/summary.component';\n\ndeclare var CKEDITOR: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel2-form',\n    templateUrl: './panel-form.component.html',\n    styleUrls: ['./panel-form.component.css'],\n    directives: [\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        PanelComponent,\n        PanelBarComponent,\n        PanelBarSubtitleComponent,\n        PanelContentComponent,\n        PanelGroupComponent,\n        MATERIAL_DIRECTIVES,\n        CKEditor,\n        DragnDropFormControl,\n        FileUploadComponent,\n        PanelFormControlSummary,\n        REACTIVE_FORM_DIRECTIVES\n    ],\n    viewProviders: [NgControl]\n})\nexport class PanelFormComponent implements OnInit, AfterViewInit, OnDestroy {\n    constructor(public builder: FormBuilder) { }\n\n    panelForm: FormGroup;\n    ready: boolean = true;\n    panelToggleStates: { [key: string] : boolean } = {};\n    private _controlPanels: { [key: string]: PanelComponent } = {};\n\n    @Output() formSubmit = new EventEmitter();\n\n    @Input() controls: PanelFormControl<any>[];\n    @Input() model: any;\n    @Input() formClass: string;\n    @Input() saving: boolean = false;\n    @Input() savingText: string = 'Saving...';\n    @Input() submitText: string = 'Submit';\n\n    @ViewChildren(PanelComponent) panels: QueryList<PanelComponent>;\n    @ViewChildren(NgModel) _models: QueryList<NgModel>;\n    @ViewChildren(NgControl) _formControls: QueryList<NgControl>;\n    @ContentChildren(FormControl) _formControlsContent: QueryList<FormControl>;\n    @ViewChildren(CKEditor) _ckEditors: QueryList<CKEditor>;\n\n    ngOnInit() {\n        let group = {};\n\n        this.formClass = 'panel-form' + (this.formClass ? ' ' + this.formClass : '');\n        this.controls = this.controls.sort((a, b) => a.order - b.order);\n        this.controls.forEach(control => {\n            control.value = this.model[control.name];\n\n            let validators = [];\n\n            if (control.required) {\n                validators.push(Validators.required);\n            }\n\n            group[control.name] = [control.value, validators];\n\n            this.panelToggleStates[control.name] = false;\n        });\n\n        this.panelForm = this.builder.group(group);\n    }\n\n    ngAfterViewInit() {\n        this.controls.forEach(control => {\n            let panel = this.getPanel(control);\n\n            panel.onToggle.subscribe((expanded: boolean) => {\n                this.panelToggleStates[control.name] = expanded;\n            });\n\n            this._controlPanels[control.name] = panel;\n        });\n\n        if (this.controls.length !== this._formControls.length) {\n            console.warn(`${this.controls.length} PanelFormControlsControls passed\n                in but could only find ${this._formControls.length} ngFormControls`);\n        }\n\n        this._formControls.forEach(formControl => {\n            formControl.valueChanges.debounceTime(250).subscribe(e => {\n               let panel = this._controlPanels[formControl.name];\n\n               let el: HTMLElement = panel.el.nativeElement;\n\n                if (formControl.valid) {\n                    el.classList.remove('ng-invalid');\n                    el.classList.add('ng-valid');\n                } else {\n                    el.classList.add('ng-invalid');\n                    el.classList.remove('ng-valid');\n                }\n\n                if (formControl.dirty) {\n                    el.classList.remove('ng-pristine');\n                    el.classList.add('ng-dirty');\n                } else {\n                    el.classList.add('ng-pristine');\n                    el.classList.remove('ng-dirty');\n                }\n            });\n        });\n\n        console.log('PanelFormComponent afterViewInit', this);\n    }\n\n    getPanel(control: PanelFormControl<any>): PanelComponent {\n        let panels = this.panels.filter(panel => {\n            return panel.el.nativeElement.classList.contains(`control-${control.name}`);\n        });\n\n        if (panels.length === 0) throw new Error('Could not get panel for control ' + control.name);\n\n        return panels[0];\n    }\n\n    handleChange(control: PanelFormControl<any>, e: any) {\n        setTimeout(() => { this.model[control.name] = control.value = this.panelForm.value[control.name]; });\n\n    }\n\n    submit() {\n        this.formSubmit.emit(this.panelForm.value);\n    }\n\n    ngOnDestroy() {\n        if (this._ckEditors.length) {\n            console.log({\n                instances: CKEDITOR.instances,\n                CKEDITOR: CKEDITOR,\n                instance1: this._ckEditors.first\n            })\n            for(name in CKEDITOR.instances)\n            {\n                CKEDITOR.instances[name].destroy()\n            }\n            // this._ckEditors.forEach((ckeditor: CKEditor) => {\n            //     console.log({\n            //         ckeditor: ckeditor,\n            //         instnace: ckeditor.instance\n            //     });\n            //     ckeditor.instance.destroy();\n            // });\n        }\n    }\n}\n"],"sourceRoot":"/source/"}