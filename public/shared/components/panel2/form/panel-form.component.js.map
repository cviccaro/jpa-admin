{"version":3,"sources":["shared/components/panel2/form/panel-form.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel2/form/panel-form.component.js","sourcesContent":["import { Input, Component, OnInit, AfterViewInit, QueryList, ViewChildren, AfterContentInit } from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\nimport { NgModel } from '@angular/forms';\nimport { CKEditor } from 'ng2-ckeditor';\n\nimport { MATERIAL_DIRECTIVES } from '../../../libs/angular2-material';\n\nimport { PanelComponent } from '../panel2.component';\nimport { PanelBarComponent, PanelBarTitleComponent, PanelBarSubtitleComponent } from '../bar/index';\nimport { PanelContentComponent } from '../content/index';\nimport { PanelGroupComponent } from '../group/index';\nimport { PanelFormControl } from './control';\nimport { DragnDropFormControl } from './dnd/dnd-form-control.component';\nimport { ImageUploadComponent } from '../../image-upload/image-upload.component';\nimport { PanelFormControlSummary } from './summary/summary.component';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel2-form',\n    templateUrl: './panel-form.component.html',\n    styleUrls: ['./panel-form.component.css'],\n    directives: [\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        PanelComponent,\n        PanelBarComponent,\n        PanelBarSubtitleComponent,\n        PanelContentComponent,\n        PanelGroupComponent,\n        MATERIAL_DIRECTIVES,\n        CKEditor,\n        DragnDropFormControl,\n        ImageUploadComponent,\n        PanelFormControlSummary\n    ]\n})\nexport class PanelFormComponent implements OnInit, AfterContentInit, AfterViewInit {\n    ready: boolean = true;\n    panelToggleStates: { [key: string] : boolean } = {};\n\n    @Input() controls: PanelFormControl<any>[];\n    @Input() model: any;\n    @Input() formClass: string;\n    @Input() submitText: string = 'Submit';\n\n    @ViewChildren(PanelComponent) panels: QueryList<PanelComponent>;\n    @ViewChildren(NgModel) _models: QueryList<NgModel>;\n\n    private _controlPanels: { [key: string]: PanelComponent } = {};\n\n    ngOnInit() {\n        this.formClass = 'panel-form' + (this.formClass ? ' ' + this.formClass : '');\n        this.controls = this.controls.sort((a, b) => a.order - b.order);\n        this.controls.forEach(control => {\n            control.value = this.model[control.name];\n            this.panelToggleStates[control.name] = false;\n            console.log('Just set value for control ' + control.name + ' to ' + control.value, {\n                model: this.model,\n                control: control\n            });\n        });\n    }\n\n    ngAfterContentInit() {\n        console.log('PanelFormComponent AfterContentInit', this);\n    }\n\n    ngAfterViewInit() {\n        console.log('PanelFormComponent AfterViewInit', this);\n\n        this.controls.forEach(control => {\n            let panel = this.getPanel(control);\n\n            panel.onToggle.subscribe((expanded: boolean) => {\n                this.panelToggleStates[control.name] = expanded;\n            });\n\n            this._controlPanels[control.name] = panel;\n        });\n\n        // Sync validation classes with the model\n        this._models.forEach(model => {\n            let control = this.controls.find(control => control.name === model.name);\n\n            let panel = this._controlPanels[control.name];\n\n            let el: HTMLElement = panel.el.nativeElement;\n            model.valueChanges.debounceTime(500).subscribe(e => {\n                // Handle CKEditor's lack of proper validation\n                // @todo: remove when CKEditor patches this\n                if (control.required && control.controlType === 'textarea' && control['ckeditor']) {\n                    if (model.value === '') {\n                        model['_control']['_status'] = 'INVALID';\n                        model['_value'] = model['_control']['_value'] = model['viewModel'] = model['model'] = null;\n                    }\n                }\n\n                if (model.valid) {\n                    el.classList.remove('ng-invalid');\n                    el.classList.add('ng-valid');\n                } else {\n                    el.classList.add('ng-invalid');\n                    el.classList.remove('ng-valid');\n                }\n\n                if (model.dirty) {\n                    el.classList.remove('ng-pristine');\n                    el.classList.add('ng-dirty');\n                } else {\n                    el.classList.add('ng-pristine');\n                    el.classList.remove('ng-dirty');\n                }\n            });\n        });\n    }\n\n    getPanel(control: PanelFormControl<any>): PanelComponent {\n        console.debug(\"Get Panel for control: \", control);\n        let panels = this.panels.filter(panel => {\n            return panel.el.nativeElement.classList.contains(`control-${control.name}`);\n        });\n\n        if (panels.length === 0) throw new Error('Could not get panel for control ' + control.name);\n\n        return panels[0];\n    }\n\n    handleChange(control: PanelFormControl<any>, e: any, value?: any) {\n        console.warn('PanelFormComponent.handleChange : ', {\n            control: control,\n            e: e,\n            value: value,\n        });\n        if (control.controlType === 'files' && control['type'] === 'image' && !control['multiple']) {\n            console.debug('Handle change for single image file please!');\n            this.model[control.name] = value;\n        } else {\n            if (value !== undefined) {\n                console.debug('Setting ' + control.name + ' in model to passed in value:', value);\n                this.model[control.name] = control.value = value;\n            } else {\n                console.debug('Setting ' + control.name + ' in model to control\\'s value:', control.value);\n                this.model[control.name] = control.value;\n            }\n        }\n    }\n\n    submit() {\n        console.log('submit!', this.model);\n    }\n}\n"],"sourceRoot":"/source/"}