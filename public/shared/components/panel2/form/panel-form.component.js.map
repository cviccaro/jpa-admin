{"version":3,"sources":["shared/components/panel2/form/panel-form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyH,eAAe,CAAC,CAAA;AACzI,uBAAwD,iBAAiB,CAAC,CAAA;AAC1E,sBAAwB,gBAAgB,CAAC,CAAA;AACzC,6BAAyB,cAAc,CAAC,CAAA;AAExC,kCAAoC,iCAAiC,CAAC,CAAA;AAEtE,iCAA+B,qBAAqB,CAAC,CAAA;AACrD,sBAAqF,cAAc,CAAC,CAAA;AACpG,sBAAsC,kBAAkB,CAAC,CAAA;AACzD,sBAAoC,gBAAgB,CAAC,CAAA;AAErD,2CAAqC,kCAAkC,CAAC,CAAA;AACxE,sCAAoC,yCAAyC,CAAC,CAAA;AAC9E,kCAAwC,6BAA6B,CAAC,CAAA;AAuBtE;IAAA;QACI,UAAK,GAAY,IAAI,CAAC;QACtB,sBAAiB,GAAgC,EAAE,CAAC;QAE1C,eAAU,GAAG,IAAI,mBAAY,EAAE,CAAC;QAKjC,eAAU,GAAW,QAAQ,CAAC;QAK/B,mBAAc,GAAsC,EAAE,CAAC;IAuGnE,CAAC;IArGG,qCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,SAAS,GAAG,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAjB,CAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;YACzB,OAAO,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzC,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,OAAO,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE;gBAC/E,KAAK,EAAE,KAAI,CAAC,KAAK;gBACjB,OAAO,EAAE,OAAO;aACnB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAkB,GAAlB;QACI,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,4CAAe,GAAf;QAAA,iBA+CC;QA9CG,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;QAEtD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;YACzB,IAAI,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEnC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,QAAiB;gBACvC,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YACpD,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAC9C,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK;YACtB,IAAI,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAA3B,CAA2B,CAAC,CAAC;YAEzE,IAAI,KAAK,GAAG,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAE9C,IAAI,EAAE,GAAgB,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC;YAC7C,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAA,CAAC;gBAG5C,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,WAAW,KAAK,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAChF,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;wBACrB,KAAK,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;wBACzC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;oBAC/F,CAAC;gBACL,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBACd,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAClC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC/B,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBACd,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;oBACnC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAChC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAQ,GAAR,UAAS,OAA8B;QACnC,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,KAAK;YACjC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAW,OAAO,CAAC,IAAM,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAE5F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,yCAAY,GAAZ,UAAa,OAA8B,EAAE,CAAM,EAAE,KAAW;QAC5D,OAAO,CAAC,IAAI,CAAC,oCAAoC,EAAE;YAC/C,OAAO,EAAE,OAAO;YAChB,CAAC,EAAE,CAAC;YACJ,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,KAAK,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACzF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACtB,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,GAAG,+BAA+B,EAAE,KAAK,CAAC,CAAC;gBAClF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,GAAG,gCAAgC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;gBAC3F,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;YAC7C,CAAC;QACL,CAAC;IACL,CAAC;IAED,mCAAM,GAAN;QACI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAhHD;QAAC,aAAM,EAAE;;0DAAA;IAET;QAAC,YAAK,EAAE;;wDAAA;IACR;QAAC,YAAK,EAAE;;qDAAA;IACR;QAAC,YAAK,EAAE;;yDAAA;IACR;QAAC,YAAK,EAAE;;0DAAA;IAER;QAAC,mBAAY,CAAC,iCAAc,CAAC;;sDAAA;IAC7B;QAAC,mBAAY,CAAC,eAAO,CAAC;;uDAAA;IAjC1B;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,6BAA6B;YAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;YACzC,UAAU,EAAE;gBACR,iBAAQ;gBACR,qBAAY;gBACZ,wBAAe;gBACf,iCAAc;gBACd,yBAAiB;gBACjB,iCAAyB;gBACzB,6BAAqB;gBACrB,2BAAmB;gBACnB,uCAAmB;gBACnB,uBAAQ;gBACR,iDAAoB;gBACpB,2CAAmB;gBACnB,2CAAuB;aAC1B;SACJ,CAAC;;0BAAA;IAsHF,yBAAC;AAAD,CArHA,AAqHC,IAAA;AArHY,0BAAkB,qBAqH9B,CAAA","file":"shared/components/panel2/form/panel-form.component.js","sourcesContent":["import { Input, Component, OnInit, AfterViewInit, QueryList, ViewChildren, AfterContentInit, Output, EventEmitter } from '@angular/core';\r\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\r\nimport { NgModel } from '@angular/forms';\r\nimport { CKEditor } from 'ng2-ckeditor';\r\n\r\nimport { MATERIAL_DIRECTIVES } from '../../../libs/angular2-material';\r\n\r\nimport { PanelComponent } from '../panel2.component';\r\nimport { PanelBarComponent, PanelBarTitleComponent, PanelBarSubtitleComponent } from '../bar/index';\r\nimport { PanelContentComponent } from '../content/index';\r\nimport { PanelGroupComponent } from '../group/index';\r\nimport { PanelFormControl } from './control';\r\nimport { DragnDropFormControl } from './dnd/dnd-form-control.component';\r\nimport { FileUploadComponent } from '../../file-upload/file-upload.component';\r\nimport { PanelFormControlSummary } from './summary/summary.component';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-panel2-form',\r\n    templateUrl: './panel-form.component.html',\r\n    styleUrls: ['./panel-form.component.css'],\r\n    directives: [\r\n        NgSwitch,\r\n        NgSwitchCase,\r\n        NgSwitchDefault,\r\n        PanelComponent,\r\n        PanelBarComponent,\r\n        PanelBarSubtitleComponent,\r\n        PanelContentComponent,\r\n        PanelGroupComponent,\r\n        MATERIAL_DIRECTIVES,\r\n        CKEditor,\r\n        DragnDropFormControl,\r\n        FileUploadComponent,\r\n        PanelFormControlSummary\r\n    ]\r\n})\r\nexport class PanelFormComponent implements OnInit, AfterContentInit, AfterViewInit {\r\n    ready: boolean = true;\r\n    panelToggleStates: { [key: string] : boolean } = {};\r\n\r\n    @Output() formSubmit = new EventEmitter();\r\n\r\n    @Input() controls: PanelFormControl<any>[];\r\n    @Input() model: any;\r\n    @Input() formClass: string;\r\n    @Input() submitText: string = 'Submit';\r\n\r\n    @ViewChildren(PanelComponent) panels: QueryList<PanelComponent>;\r\n    @ViewChildren(NgModel) _models: QueryList<NgModel>;\r\n\r\n    private _controlPanels: { [key: string]: PanelComponent } = {};\r\n\r\n    ngOnInit() {\r\n        this.formClass = 'panel-form' + (this.formClass ? ' ' + this.formClass : '');\r\n        this.controls = this.controls.sort((a, b) => a.order - b.order);\r\n        this.controls.forEach(control => {\r\n            control.value = this.model[control.name];\r\n            this.panelToggleStates[control.name] = false;\r\n            console.log('Just set value for control ' + control.name + ' to ' + control.value, {\r\n                model: this.model,\r\n                control: control\r\n            });\r\n        });\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        console.log('PanelFormComponent AfterContentInit', this);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        console.log('PanelFormComponent AfterViewInit', this);\r\n\r\n        this.controls.forEach(control => {\r\n            let panel = this.getPanel(control);\r\n\r\n            panel.onToggle.subscribe((expanded: boolean) => {\r\n                this.panelToggleStates[control.name] = expanded;\r\n            });\r\n\r\n            this._controlPanels[control.name] = panel;\r\n        });\r\n\r\n        // Sync validation classes with the model\r\n        this._models.forEach(model => {\r\n            let control = this.controls.find(control => control.name === model.name);\r\n\r\n            let panel = this._controlPanels[control.name];\r\n\r\n            let el: HTMLElement = panel.el.nativeElement;\r\n            model.valueChanges.debounceTime(500).subscribe(e => {\r\n                // Handle CKEditor's lack of proper validation\r\n                // @todo: remove when CKEditor patches this\r\n                if (control.required && control.controlType === 'textarea' && control['ckeditor']) {\r\n                    if (model.value === '') {\r\n                        model['_control']['_status'] = 'INVALID';\r\n                        model['_value'] = model['_control']['_value'] = model['viewModel'] = model['model'] = null;\r\n                    }\r\n                }\r\n\r\n                if (model.valid) {\r\n                    el.classList.remove('ng-invalid');\r\n                    el.classList.add('ng-valid');\r\n                } else {\r\n                    el.classList.add('ng-invalid');\r\n                    el.classList.remove('ng-valid');\r\n                }\r\n\r\n                if (model.dirty) {\r\n                    el.classList.remove('ng-pristine');\r\n                    el.classList.add('ng-dirty');\r\n                } else {\r\n                    el.classList.add('ng-pristine');\r\n                    el.classList.remove('ng-dirty');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getPanel(control: PanelFormControl<any>): PanelComponent {\r\n        console.debug(\"Get Panel for control: \", control);\r\n        let panels = this.panels.filter(panel => {\r\n            return panel.el.nativeElement.classList.contains(`control-${control.name}`);\r\n        });\r\n\r\n        if (panels.length === 0) throw new Error('Could not get panel for control ' + control.name);\r\n\r\n        return panels[0];\r\n    }\r\n\r\n    handleChange(control: PanelFormControl<any>, e: any, value?: any) {\r\n        console.warn('PanelFormComponent.handleChange : ', {\r\n            control: control,\r\n            e: e,\r\n            value: value,\r\n        });\r\n        if (control.controlType === 'files' && control['type'] === 'image' && !control['multiple']) {\r\n            this.model[control.name] = value;\r\n        } else {\r\n            if (value !== undefined) {\r\n                console.debug('Setting ' + control.name + ' in model to passed in value:', value);\r\n                this.model[control.name] = control.value = value;\r\n            } else {\r\n                console.debug('Setting ' + control.name + ' in model to control\\'s value:', control.value);\r\n                this.model[control.name] = control.value;\r\n            }\r\n        }\r\n    }\r\n\r\n    submit() {\r\n        console.log('submit!', this.model);\r\n\r\n        this.formSubmit.emit(this.model);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}