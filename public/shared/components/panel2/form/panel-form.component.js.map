{"version":3,"sources":["shared/components/panel2/form/panel-form.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel2/form/panel-form.component.js","sourcesContent":["import { \n    Input,\n    Component,\n    OnInit,\n    OnDestroy,\n    AfterViewInit,\n    QueryList,\n    ViewChildren,\n    Output,\n    EventEmitter \n} from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\nimport { REACTIVE_FORM_DIRECTIVES, NgControl, FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { CKEditor } from 'ng2-ckeditor';\n\nimport { MATERIAL_DIRECTIVES } from '../../../libs/angular2-material';\n\nimport { LoggerService } from '../../../services/logger.service';\nimport { PanelComponent } from '../panel2.component';\nimport { PanelBarComponent, PanelBarTitleComponent, PanelBarSubtitleComponent } from '../bar/index';\nimport { PanelContentComponent } from '../content/index';\nimport { PanelGroupComponent } from '../group/index';\nimport { PanelFormControl } from './control';\nimport { DragnDropFormControl } from './dnd/dnd-form-control.component';\nimport { FileUploadComponent } from '../../file-upload/file-upload.component';\nimport { PanelFormControlSummary } from './summary/summary.component';\n\ndeclare var CKEDITOR: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel2-form',\n    templateUrl: './panel-form.component.html',\n    styleUrls: ['./panel-form.component.css'],\n    directives: [\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        PanelComponent,\n        PanelBarComponent,\n        PanelBarSubtitleComponent,\n        PanelContentComponent,\n        PanelGroupComponent,\n        MATERIAL_DIRECTIVES,\n        CKEditor,\n        DragnDropFormControl,\n        FileUploadComponent,\n        PanelFormControlSummary,\n        REACTIVE_FORM_DIRECTIVES\n    ],\n    viewProviders: [NgControl]\n})\nexport class PanelFormComponent implements OnInit, AfterViewInit, OnDestroy {\n    constructor(public builder: FormBuilder, private log: LoggerService) { }\n\n    panelForm: FormGroup;\n    ready: boolean = true;\n    panelToggleStates: { [key: string] : boolean } = {};\n    private _controlPanels: { [key: string]: PanelComponent } = {};\n    private _subscriptions: Subscription[] = [];\n\n    @Input() controls: PanelFormControl<any>[];\n    @Input() model: any;\n    @Input() formClass: string;\n    @Input() saving: boolean = false;\n    @Input() savingText: string = 'Saving...';\n    @Input() submitText: string = 'Submit';\n    \n    @Output() formSubmit = new EventEmitter();\n\n    @ViewChildren(PanelComponent) _panels: QueryList<PanelComponent>;\n    @ViewChildren(NgControl) _formControls: QueryList<NgControl>;\n    @ViewChildren(CKEditor) _ckEditors: QueryList<CKEditor>;\n\n    /**\n     * Initialize the directive/component after Angular initializes \n     * the data-bound input properties.\n     */\n    ngOnInit() {\n        let group = {};\n\n        this.formClass = 'panel-form' + (this.formClass ? ' ' + this.formClass : '');\n        this.controls = this.controls.sort((a, b) => a.order - b.order);\n        this.controls.forEach(control => {\n            control.value = this.model[control.name];\n\n            let validators = [];\n\n            if (control.required) {\n                validators.push(Validators.required);\n            }\n\n            group[control.name] = [control.value, validators];\n\n            this.panelToggleStates[control.name] = false;\n        });\n\n        this.panelForm = this.builder.group(group);\n    }\n\n    /**\n     * After Angular creates the component's view(s).\n     */\n    ngAfterViewInit() {\n        this.controls.forEach(control => {\n            let panel = this.getPanel(control);\n\n            let sub = panel.onToggle.subscribe((expanded: boolean) => {\n                this.panelToggleStates[control.name] = expanded;\n            });\n\n            this._subscriptions.push(sub);\n\n            this._controlPanels[control.name] = panel;\n        });\n\n        if (this.controls.length !== this._formControls.length) {\n            this.log.warn(`${this.controls.length} PanelFormControlsControls passed\n                in but could only find ${this._formControls.length} ngFormControls`);\n        }\n\n        this._formControls.forEach(formControl => {\n            let sub = formControl.valueChanges.debounceTime(250).subscribe(e => {\n               let panel = this._controlPanels[formControl.name];\n\n               let el: HTMLElement = panel.el.nativeElement;\n\n                if (formControl.valid) {\n                    el.classList.remove('ng-invalid');\n                    el.classList.add('ng-valid');\n                } else {\n                    el.classList.add('ng-invalid');\n                    el.classList.remove('ng-valid');\n                }\n\n                if (formControl.dirty) {\n                    el.classList.remove('ng-pristine');\n                    el.classList.add('ng-dirty');\n                } else {\n                    el.classList.add('ng-pristine');\n                    el.classList.remove('ng-dirty');\n                }\n            });\n\n            this._subscriptions.push(sub);\n        });\n\n        this.log.log('PanelFormComponent afterViewInit', this);\n    }\n\n    /**\n     * Get the PanelComponent housing a PanelFormControl\n     * \n     * @param  {PanelFormControl<any>}\n     * @return {PanelComponent}\n     */\n    getPanel(control: PanelFormControl<any>): PanelComponent {\n        let panels = this._panels.filter(panel => {\n            return panel.el.nativeElement.classList.contains(`control-${control.name}`);\n        });\n\n        if (panels.length === 0) throw new Error('Could not get panel for control ' + control.name);\n\n        return panels[0];\n    }\n\n    /**\n     * Handle change events from elements housing PanelFormControls\n     * \n     * @param {PanelFormControl<any>}\n     * @param {Event}\n     * @return void\n     */\n    handleChange(control: PanelFormControl<any>, e: any): void {\n        setTimeout(() => { this.model[control.name] = control.value = this.panelForm.value[control.name]; });\n    }\n\n    /**\n     * Callback to form ngSubmit()\n     */\n    submit(): void {\n        this.formSubmit.emit(this.panelForm.value);\n    }\n\n    /**\n     * Cleanup just before Angular destroys the directive/component. Unsubscribe \n     * observables and detach event handlers to avoid memory leaks.\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach(sub => {\n            if (sub) sub.unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"/source/"}