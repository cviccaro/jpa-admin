{"version":3,"sources":["shared/components/panel2/form/control.text.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAyD,WAAW,CAAC,CAAA;AAMrE;IAA+C,6CAAwB;IAUnE,mCAAY,MAAuB;QACjC,kBAAM,MAAM,CAAC,CAAC;QAVhB,gBAAW,GAAG,MAAM,CAAC;QAYnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IAChC,CAAC;IAVD,sBAAI,4CAAK;aAAT;YACI,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;YAEnD,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;QAChF,CAAC;;;OAAA;IAOL,gCAAC;AAAD,CAfA,AAeC,CAf8C,0BAAgB,GAe9D;AAfY,iCAAyB,4BAerC,CAAA","file":"shared/components/panel2/form/control.text.js","sourcesContent":["import { PanelFormControl, PanelFormControlConfig } from './control';\n\nexport interface TextfieldConfig extends PanelFormControlConfig {\n    type?: string;\n}\n\nexport class PanelFormControlTextfield extends PanelFormControl<string> {\n    controlType = 'text';\n    type: string;\n\n    get empty(): boolean {\n        if (typeof this.value === 'undefined') return true;\n\n        return this.value === null || this.value === undefined || this.value === '';\n    }\n\n    constructor(config: TextfieldConfig) {\n      super(config);\n\n      this.type = config.type || '';\n    }\n}"],"sourceRoot":"/source/"}