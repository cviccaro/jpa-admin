{"version":3,"sources":["shared/components/panel2/form/control.dnd.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAyD,WAAW,CAAC,CAAA;AAQrE;IAA+C,6CAA4B;IAQvE,mCAAY,MAAuB;QACjC,kBAAM,MAAM,CAAC,CAAC;QARhB,gBAAW,GAAG,KAAK,CAAC;QAUlB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;IACtC,CAAC;IARD,sBAAI,4CAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;QACnC,CAAC;;;OAAA;IAQD,2CAAO,GAAP,UAAQ,aAAsB;QAC1B,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,IAAI,GAAW,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YAEpC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACb,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,IAAI,IAAO,MAAM,CAAC,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACnF,CAAC;YAED,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAWL,gCAAC;AAAD,CA1CA,AA0CC,CA1C8C,0BAAgB,GA0C9D;AA1CY,iCAAyB,4BA0CrC,CAAA","file":"shared/components/panel2/form/control.dnd.js","sourcesContent":["import { PanelFormControl, PanelFormControlConfig } from './control';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nexport interface DragnDropConfig extends PanelFormControlConfig {\r\n    options: {id: number, name: string}[];\r\n}\r\n\r\nexport class PanelFormControlDragnDrop extends PanelFormControl<Array<any>> {\r\n    controlType = 'dnd';\r\n    options: {id: number, name: string}[];\r\n\r\n    get empty(): boolean {\r\n        return this.value.length === 0;\r\n    }\r\n\r\n    constructor(config: DragnDropConfig) {\r\n      super(config);\r\n\r\n      this.options = config.options || [];\r\n    }\r\n\r\n    summary(panelExpanded: boolean) {\r\n        if (panelExpanded) {\r\n            return { text: this.editableText, icon: this.editIcon };\r\n        }\r\n\r\n        if (this.value.length > 5) {\r\n            return { text: this.value.length + ' selected', icon: false};\r\n        } else {\r\n            let val = this.value.slice(0);\r\n            let text: string = val.shift().name;\r\n\r\n            if (val.length) {\r\n                text = val.reduce((carry, item) => { return carry += ', ' + item.name }, text);\r\n            }\r\n\r\n            return { text: text, icon: false};\r\n        }\r\n    }\r\n\r\n    // summary(panelExpanded: boolean): Observable<{ text: any, icon: string|boolean }> {\r\n    //     return Observable.create(observer => {\r\n    //         let summary = panelExpanded ?\r\n    //             { text: this.editableText, icon: this.editIcon }\r\n    //             : {text: this.value.length + ' selected', icon: false};\r\n\r\n    //         observer.next(summary);\r\n    //     });\r\n    // }\r\n}\r\n"],"sourceRoot":"/source/"}