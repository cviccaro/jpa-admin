{"version":3,"sources":["shared/components/panel2/form/control.dnd.ts"],"names":[],"mappings":";;;;;;AAAA,wBAAyD,WAAW,CAAC,CAAA;AAQrE;IAA+C,6CAA4B;IAUvE,mCAAY,MAAuB;QACjC,kBAAM,MAAM,CAAC,CAAC;QAVhB,gBAAW,GAAG,KAAK,CAAC;QAYlB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;IACtC,CAAC;IAVD,sBAAI,4CAAK;aAAT;YACI,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;YAEnD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;QACnC,CAAC;;;OAAA;IAQD,2CAAO,GAAP,UAAQ,aAAsB;QAC1B,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,IAAI,GAAW,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YAEpC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACb,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,IAAI,IAAO,MAAM,CAAC,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACnF,CAAC;YAED,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;QACtC,CAAC;IACL,CAAC;IACL,gCAAC;AAAD,CAlCA,AAkCC,CAlC8C,0BAAgB,GAkC9D;AAlCY,iCAAyB,4BAkCrC,CAAA","file":"shared/components/panel2/form/control.dnd.js","sourcesContent":["import { PanelFormControl, PanelFormControlConfig } from './control';\n\nimport { Observable } from 'rxjs/Rx';\n\nexport interface DragnDropConfig extends PanelFormControlConfig {\n    options: {id: number, name: string}[];\n}\n\nexport class PanelFormControlDragnDrop extends PanelFormControl<Array<any>> {\n    controlType = 'dnd';\n    options: {id: number, name: string}[];\n\n    get empty(): boolean {\n        if (typeof this.value === 'undefined') return true;\n\n        return this.value.length === 0;\n    }\n\n    constructor(config: DragnDropConfig) {\n      super(config);\n\n      this.options = config.options || [];\n    }\n\n    summary(panelExpanded: boolean) {\n        if (panelExpanded) {\n            return { text: this.editableText, icon: this.editIcon };\n        }\n\n        if (this.value.length > 5) {\n            return { text: this.value.length + ' selected', icon: false};\n        } else {\n            let val = this.value.slice(0);\n            let text: string = val.shift().name;\n\n            if (val.length) {\n                text = val.reduce((carry, item) => { return carry += ', ' + item.name }, text);\n            }\n\n            return { text: text, icon: false};\n        }\n    }\n}\n"],"sourceRoot":"/source/"}