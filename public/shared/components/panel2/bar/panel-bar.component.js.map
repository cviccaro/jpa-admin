{"version":3,"sources":["shared/components/panel2/bar/panel-bar.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAWO,eAAe,CAAC,CAAA;AACvB,kCAAoC,iCAAiC,CAAC,CAAA;AAQtE;IAAA;QACc,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAC;IAM3C,CAAC;IAHG,yCAAQ,GAAR,UAAS,GAAU;QACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IALD;QAAC,aAAM,EAAE;;2DAAA;IAET;QAAC,mBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;0DAAA;IARtC;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,sBAAsB;YAChC,QAAQ,EAAE,2BAA2B;SACxC,CAAC;;8BAAA;IAQF,6BAAC;AAAD,CAPA,AAOC,IAAA;AAPY,8BAAsB,yBAOlC,CAAA;AAOD;IAA+C,6CAAsB;IAArE;QAA+C,8BAAsB;IAAG,CAAC;IALzE;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,yBAAyB;YACnC,QAAQ,EAAE,2BAA2B;SACxC,CAAC;;iCAAA;IACsE,gCAAC;AAAD,CAAxE,AAAyE,CAA1B,sBAAsB,GAAI;AAA5D,iCAAyB,4BAAmC,CAAA;AASzE;IAAA;QACY,mBAAc,GAAmB,EAAE,CAAC;QAElC,aAAQ,GAAG,IAAI,mBAAY,EAAE,CAAC;IAgC5C,CAAC;IA3BG,8CAAkB,GAAlB;QAAA,iBAUC;QATG,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;QAE1E,MAAM,CAAC,OAAO,CAAC,UAAA,QAAQ;YACnB,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,UAAA,GAAG;gBACpC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,kCAAM,GAAN,UAAO,GAAU;QACb,GAAG,CAAC,cAAc,EAAE,CAAC;QACrB,GAAG,CAAC,eAAe,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAMD,uCAAW,GAAX;QACI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAA,GAAG;YAC3B,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IA/BD;QAAC,aAAM,EAAE;;uDAAA;IAET;QAAC,sBAAe,CAAC,sBAAsB,CAAC;;wDAAA;IACxC;QAAC,sBAAe,CAAC,yBAAyB,CAAC;;2DAAA;IAb/C;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,gBAAgB;YAC1B,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;YACxC,UAAU,EAAE,CAAE,uCAAmB,EAAE,sBAAsB,EAAE,yBAAyB,CAAE;SACzF,CAAC;;yBAAA;IAoCF,wBAAC;AAAD,CAnCA,AAmCC,IAAA;AAnCY,yBAAiB,oBAmC7B,CAAA","file":"shared/components/panel2/bar/panel-bar.component.js","sourcesContent":["import {\n    Component,\n    ContentChildren,\n    ViewChildren,\n    Output,\n    EventEmitter,\n    ElementRef,\n    QueryList,\n    AfterContentInit,\n    HostListener,\n    OnDestroy\n} from '@angular/core';\nimport { MATERIAL_DIRECTIVES } from '../../../libs/angular2-material';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel2-bar-title',\n    template: '<ng-content></ng-content>'\n})\nexport class PanelBarTitleComponent {\n    @Output() onClick = new EventEmitter();\n\n    @HostListener('click', ['$event'])\n    _onClick(evt: Event) {\n        this.onClick.emit(evt);\n    }\n}\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel2-bar-subtitle',\n    template: '<ng-content></ng-content>'\n})\nexport class PanelBarSubtitleComponent extends PanelBarTitleComponent { }\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel2-bar',\n    templateUrl: './panel-bar.component.html',\n    styleUrls: ['./panel-bar.component.css'],\n    directives: [ MATERIAL_DIRECTIVES, PanelBarTitleComponent, PanelBarSubtitleComponent ]\n})\nexport class PanelBarComponent implements AfterContentInit, OnDestroy {\n    private _subscriptions: Subscription[] = [];\n\n    @Output() onToggle = new EventEmitter();\n\n    @ContentChildren(PanelBarTitleComponent) titleCmps : QueryList<PanelBarTitleComponent>;\n    @ContentChildren(PanelBarSubtitleComponent) subTitleCmps : QueryList<PanelBarSubtitleComponent>;\n\n    ngAfterContentInit() {\n        let titles = this.titleCmps.toArray().concat(this.subTitleCmps.toArray());\n\n        titles.forEach(titleCmp => {\n            let sub = titleCmp.onClick.subscribe(evt => {\n                this.toggle(evt);\n            });\n\n            this._subscriptions.push(sub);\n        })\n    }\n\n    toggle(evt: Event) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        this.onToggle.emit(evt);\n    }\n    \n    /**\n     * Cleanup just before Angular destroys the directive/component. Unsubscribe \n     * observables and detach event handlers to avoid memory leaks.\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach(sub => {\n            if (sub) sub.unsubscribe();\n        });\n    }\n}"],"sourceRoot":"/source/"}