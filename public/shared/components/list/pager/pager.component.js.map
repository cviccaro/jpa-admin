{"version":3,"sources":["shared/components/list/pager/pager.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyF,eAAe,CAAC,CAAA;AAEzG,kCAAoC,iCAAiC,CAAC,CAAA;AAWtE;IAAA;QAKc,gBAAW,GAAG,IAAI,mBAAY,EAAE,CAAC;IA2B/C,CAAC;IAzBG,iCAAQ,GAAR;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,6BAAI,GAAJ;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,mCAAU,GAAV,UAAW,IAAY;QACnB,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,oCAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IA5BD;QAAC,YAAK,EAAE;;qDAAA;IAER;QAAC,aAAM,EAAE;;uDAAA;IAZb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,wBAAwB;YACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,UAAU,EAAE,CAAE,uCAAmB,CAAE;SACtC,CAAC;;sBAAA;IAiCF,qBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,sBAAc,iBAgC1B,CAAA","file":"shared/components/list/pager/pager.component.js","sourcesContent":["import { Component, Input, Output, OnInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { MATERIAL_DIRECTIVES } from '../../../libs/angular2-material';\r\n\r\nimport { PagerData } from './pager-data';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-pager',\r\n    templateUrl: './pager.component.html',\r\n    styleUrls: ['./pager.component.css'],\r\n    directives: [ MATERIAL_DIRECTIVES ]\r\n})\r\nexport class PagerComponent implements OnInit, OnChanges {\r\n    pages: any[];\r\n\r\n    @Input() pagerData: PagerData;\r\n\r\n    @Output() pageChanged = new EventEmitter();\r\n\r\n    ngOnInit() {\r\n        this.pages = new Array(this.pagerData.lastPage);\r\n    }\r\n\r\n    previous() {\r\n        this.changePage(this.pagerData.currentPage - 1);\r\n    }\r\n\r\n    next() {\r\n        this.changePage(this.pagerData.currentPage + 1);\r\n    }\r\n\r\n    changePage(page: number) {\r\n        if (page === this.pagerData.currentPage) {\r\n            return;\r\n        }\r\n\r\n        this.pageChanged.emit(page);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.hasOwnProperty('pagerData')) {\r\n            this.pages = new Array(this.pagerData.lastPage);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}