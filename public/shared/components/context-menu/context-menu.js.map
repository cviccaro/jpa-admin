{"version":3,"sources":["shared/components/context-menu/context-menu.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAQO,eAAe,CAAC,CAAA;AACvB,mBAA2B,SAAS,CAAC,CAAA;AAErC,2BAAqC,cAAc,CAAC,CAAA;AAGpD;IAOC,wBAAoB,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;QAJlC,kBAAa,GAAsB,IAAI,mBAAY,EAAO,CAAC;IAIrB,CAAC;IAFrC,sBAAI,mCAAO;aAAX,cAAiC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAItF,qCAAY,GAAZ,UAAa,EAAoB;QAGhC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,wCAAe,GAAf,UAAgB,SAA+B;QAA/C,iBA8BC;QA7BA,MAAM,CAAC,eAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAGhC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAG3D,KAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,iCAAoB,CAAC,CAAC,IAAI,CAAC,UAAC,UAAiC;gBAEtF,IAAI,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC;gBAGjD,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,UAAU,EAAE,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,MAA0C;gBAElD,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;gBAGL,KAAI,CAAC,aAAa,CAAC,QAAS,CAAC,cAAc,CAAC,SAAS,CAAC,UAAA,CAAC;oBAC7E,KAAI,CAAC,KAAK,EAAE,CAAC;gBACd,CAAC,CAAC,CAAA;gBAGF,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAGpF,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;gBAClC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,8BAAK,GAAL;QACC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,oCAAW,GAAX;QAAA,iBAMC;QALA,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,IAAI,CAAG,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAA5B,CAA4B,CAAE,CAAC;QACvF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;IACF,CAAC;IApDD;QAAC,aAAM,EAAE;;iDAAA;IANV;QAAC,iBAAU,EAAE;;sBAAA;IA2Db,qBAAC;AAAD,CA1DA,AA0DC,IAAA;AA1DY,sBAAc,iBA0D1B,CAAA","file":"shared/components/context-menu/context-menu.js","sourcesContent":["import {\r\n\tInjectable,\r\n\tComponentResolver,\r\n\tComponentFactory,\r\n\tComponentRef,\r\n\tViewContainerRef,\r\n\tOutput,\r\n\tEventEmitter\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { ContextMenuComponent } from './context-menu.component';\r\nimport { ContextMenuFocusTrap } from './focus-trap';\r\n\r\n@Injectable()\r\nexport class JpaContextMenu {\r\n\tprivate viewContainer: ViewContainerRef;\r\n\tprivate _focusTrapRef: ComponentRef<any>;\r\n\tprivate _closeEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\t@Output() get onClose(): Observable<any> { return this._closeEmitter.asObservable(); }\r\n\r\n\tconstructor(private _cr: ComponentResolver) { }\r\n\r\n\tsetContainer(vc: ViewContainerRef) {\r\n\t\t// @todo: there must be a better way to get the container than\r\n\t\t// having to register it in a \"root\" component\r\n\t\tthis.viewContainer = vc;\r\n\t}\r\n\r\n\tresolveBackdrop(component: ContextMenuComponent) {\r\n\t\treturn Observable.create(observer => {\r\n\t\t\t// Avoid z-index issues by moving menu to body.\r\n\t\t\t// @todo: avoid messing with DOM..\r\n\t\t\tdocument.body.appendChild(component.element.nativeElement);\r\n\r\n\t\t\t// Resolve the ContextMenuComponent, and build it\r\n\t\t\tthis._cr.resolveComponent(ContextMenuFocusTrap).then((cmpFactory: ComponentFactory<any>) => {\r\n\t\t\t\t// Just use the injector of the viewContainer that was registered\r\n\t\t\t\tlet injector = this.viewContainer.parentInjector;\r\n\r\n\t\t\t\t// Create the component, outputs a promise...\r\n\t\t\t\treturn this.viewContainer.createComponent(cmpFactory, this.viewContainer.length, injector);\r\n\t\t\t}).then((cmpRef: ComponentRef<ContextMenuFocusTrap>) => {\r\n\t\t\t\t// Store reference to FocusTrap component\r\n\t\t\t\tthis._focusTrapRef = cmpRef;\r\n\r\n\t\t\t\t// Subscribe to focus trap's event\r\n\t\t\t\t(<ContextMenuFocusTrap>this._focusTrapRef.instance).onClickOutside.subscribe(e => {\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// Append it to DOM\r\n\t\t\t\tthis.viewContainer.element.nativeElement.appendChild(cmpRef.location.nativeElement);\r\n\r\n\t\t\t\t// Resolve the FocusTrap\r\n\t\t\t\tobserver.next(this._focusTrapRef);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis._closeEmitter.emit(true);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (typeof this._focusTrapRef.instance.canDestroy === 'function') {\r\n\t\t  this._focusTrapRef.instance.canDestroy().then ( () => this._focusTrapRef.destroy() );\r\n\t\t} else {\r\n\t\t  this._focusTrapRef.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}