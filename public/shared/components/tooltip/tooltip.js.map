{"version":3,"sources":["shared/components/tooltip/tooltip.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyE,eAAe,CAAC,CAAA;AAEzF,sBAA6C,SAAS,CAAC,CAAA;AAKvD;IACC,0BAAmB,EAAc,EAAS,QAAoB;QAA3C,OAAE,GAAF,EAAE,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAY;QAItD,YAAO,GAAG,KAAK,CAAC;IAJ0C,CAAC;IAUnE,uCAAY,GAAZ,UAAa,CAAM;QAAnB,iBASC;QARA,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC5B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,YAAY,CAAC;iBAC1D,SAAS,CAAC,UAAC,CAAiC;gBAC5C,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;gBACjB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;IACT,CAAC;IAGD,uCAAY,GAAZ,UAAa,CAAM;QAClB,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;IACF,CAAC;IArBD;QAAC,YAAK,EAAE;;qDAAA;IACR;QAAC,YAAK,EAAE;;0DAAA;IAER;QAAC,mBAAY,CAAC,YAAY,CAAC;;;;wDAAA;IAY3B;QAAC,mBAAY,CAAC,YAAY,CAAC;;;;wDAAA;IAzB5B;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,eAAe;SACzB,CAAC;;wBAAA;IA8BF,uBAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,wBAAgB,mBA6B5B,CAAA","file":"shared/components/tooltip/tooltip.js","sourcesContent":["import { Directive, HostListener, Input, ElementRef, ComponentRef } from '@angular/core';\r\n\r\nimport { JpaTooltip, TooltipComponent } from './index';\r\n\r\n@Directive({\r\n\tselector: '[jpa-tooltip]'\r\n})\r\nexport class TooltipDirective {\r\n\tconstructor(public el: ElementRef, public provider: JpaTooltip) { }\r\n\r\n\tprivate _cmpRef: ComponentRef<TooltipComponent>;\r\n\tprivate _openTimer: any;\r\n\tprivate _hasRef = false;\r\n\r\n\t@Input() tooltip: string;\r\n\t@Input() tooltipAlign: string;\r\n\r\n\t@HostListener('mouseenter')\r\n\tonMouseEnter(e: any) {\r\n\t\tclearTimeout(this._openTimer);\r\n\t\tthis._openTimer = setTimeout(() => {\r\n\t\t\tthis.provider.open(this.el, this.tooltip, this.tooltipAlign)\r\n\t\t\t\t.subscribe((e: ComponentRef<TooltipComponent>) => {\r\n\t\t\t\t\tthis._cmpRef = e;\r\n\t\t\t\t\tthis._hasRef = true;\r\n\t\t\t\t});\r\n\t\t}, 500);\r\n\t}\r\n\r\n\t@HostListener('mouseleave')\r\n\tonMouseLeave(e: any) {\r\n\t\tclearTimeout(this._openTimer);\r\n\t\tif (this._hasRef) {\r\n\t\t\tthis._cmpRef.destroy();\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}