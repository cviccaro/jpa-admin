{"version":3,"sources":["shared/components/md-select/md-select.component.ts"],"names":[],"mappings":"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","file":"shared/components/md-select/md-select.component.js","sourcesContent":["/**\r\n * Mimic md-select from angular/material 1\r\n *\r\n */\r\nimport {\r\n    forwardRef,\r\n    Component,\r\n    HostBinding,\r\n    Input,\r\n    Provider,\r\n    Directive,\r\n    AfterContentInit,\r\n    ContentChild,\r\n    SimpleChange,\r\n    ContentChildren,\r\n    ViewChild,\r\n    ElementRef,\r\n    QueryList,\r\n    OnChanges,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\nimport {NgIf} from '@angular/common';\r\nimport {SelectControlValueAccessor, NgSelectOption, NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BooleanFieldValue} from '@angular2-material/core/annotations/field-value';\r\nimport {MdError} from '@angular2-material/core/errors/error';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport { MdPlaceholder, MdHint } from '@angular2-material/input';\r\n\r\nconst noop = () => { };\r\n\r\nexport const JPA_MD_SELECT_CONTROL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\r\n    useExisting: forwardRef(() => JpaMdSelectComponent),\r\n    multi: true\r\n});\r\n\r\nlet nextUniqueId = 0;\r\n\r\nexport class JpaMdSelectPlaceholderConflictError extends MdError {\r\n    constructor() {\r\n        super('Placeholder attribute and child element were both specified.');\r\n    }\r\n}\r\n\r\nexport class JpaMdSelectDuplicatedHintError extends MdError {\r\n    constructor(align: string) {\r\n        super(`A hint was already declared for 'align=\"${align}\"'.`);\r\n    }\r\n}\r\n\r\n/**\r\n * Component that represents a select. It encapsulates the <select> HTMLElement and\r\n * improves on its behaviour, along with styling it according to the Material Design.\r\n */\r\n@Component({\r\n    selector: 'jpa-md-select',\r\n    moduleId: module.id,\r\n    templateUrl: './md-select.component.html',\r\n    styleUrls: ['./md-select.component.css'],\r\n    providers: [SelectControlValueAccessor, JPA_MD_SELECT_CONTROL_VALUE_ACCESSOR],\r\n    directives: [NgIf, NgModel],\r\n    host: { '(click)': 'focus()' }\r\n})\r\nexport class JpaMdSelectComponent implements AfterContentInit, OnChanges, ControlValueAccessor {\r\n    private _focused: boolean = false;\r\n    private _value: any = '';\r\n\r\n    /** Callback registered via registerOnTouched (ControlValueAccessor) */\r\n    private _onTouchedCallback: () => void = noop;\r\n    /** Callback registered via registerOnChange (ControlValueAccessor) */\r\n    private _onChangeCallback: (_: any) => void = (...args) => {\r\n        console.log('JpaMdSelect#onChangeCallback:', args);\r\n    };\r\n\r\n    /**\r\n     * Aria related inputs.\r\n     */\r\n    @Input('aria-label') ariaLabel: string;\r\n    @Input('aria-labelledby') ariaLabelledBy: string;\r\n    @Input('aria-disabled') @BooleanFieldValue() ariaDisabled: boolean;\r\n    @Input('aria-required') @BooleanFieldValue() ariaRequired: boolean;\r\n    @Input('aria-invalid') @BooleanFieldValue() ariaInvalid: boolean;\r\n\r\n    /**\r\n     * Content directives.\r\n     */\r\n    @ContentChild(MdPlaceholder) private _placeholderChild: MdPlaceholder;\r\n    @ContentChildren(MdHint) private _hintChildren: QueryList<MdHint>;\r\n    @ContentChildren(NgSelectOption) private _optionChildren: QueryList<NgSelectOption>;\r\n\r\n    /** Readonly properties. */\r\n    get focused() { return this._focused; }\r\n    get empty() { return this._value == null || this._value === ''; }\r\n    get characterCount(): number {\r\n        return this.empty ? 0 : ('' + this._value).length;\r\n    }\r\n    get inputId(): string { return `${this.id}-select`; }\r\n\r\n    /**\r\n     * Bindings.\r\n     */\r\n    @Input() align: 'start' | 'end' = 'start';\r\n    @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\r\n    @Input() @BooleanFieldValue() floatingPlaceholder: boolean = true;\r\n    @Input() hintLabel: string = '';\r\n\r\n    @Input() @BooleanFieldValue() autoFocus: boolean = false;\r\n    @Input() @BooleanFieldValue() disabled: boolean = false;\r\n    @Input() id: string = `jpa-md-${nextUniqueId++}`;\r\n    @Input() list: string = null;\r\n    @Input() placeholder: string = null;\r\n    @Input() @BooleanFieldValue() required: boolean = false;\r\n    @Input() step: number = null;\r\n    @Input() tabIndex: number = null;\r\n    @Input() name: string = null;\r\n\r\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n\r\n    @Output('blur')\r\n    get onBlur(): Observable<FocusEvent> {\r\n        return this._blurEmitter.asObservable();\r\n    }\r\n\r\n    @Output('focus')\r\n    get onFocus(): Observable<FocusEvent> {\r\n        return this._focusEmitter.asObservable();\r\n    }\r\n\r\n    get value(): any { return this._value; };\r\n    @Input() set value(v: any) {\r\n        console.log('JpaMdSelect#set value(): ', { this: this, value: v });\r\n        this._value = v;\r\n        this._onChangeCallback(v);\r\n    }\r\n\r\n    // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\r\n    // might place it as RTL when we don't want to. We still want to use `align` as an\r\n    // Input though, so we use HostBinding.\r\n    @HostBinding('attr.align') private get _align(): any { return null; }\r\n    @ViewChild('select') private _selectElement: ElementRef;\r\n\r\n    /** Set focus on input */\r\n    focus() {\r\n        this._selectElement.nativeElement.focus();\r\n    }\r\n\r\n    /** @internal */\r\n    handleFocus(event: FocusEvent) {\r\n        this._focused = true;\r\n        this._focusEmitter.emit(event);\r\n    }\r\n\r\n    /** @internal */\r\n    handleBlur(event: FocusEvent) {\r\n        this._focused = false;\r\n        this._onTouchedCallback();\r\n        this._blurEmitter.emit(event);\r\n    }\r\n\r\n    /** @internal */\r\n    handleChange(event: Event) {\r\n        this.value = (<HTMLSelectElement>event.target).value;\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    /** @internal */\r\n    hasPlaceholder(): boolean {\r\n        return !!this.placeholder || this._placeholderChild != null;\r\n    }\r\n\r\n    /**\r\n       * Implemented as part of ControlValueAccessor.\r\n       * TODO: internal\r\n       */\r\n    writeValue(value: any) {\r\n        this._value = value;\r\n    }\r\n\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * TODO: internal\r\n     */\r\n    registerOnChange(fn: any) {\r\n        console.log('JpaMdSelect#registerOnChange', fn);\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * TODO: internal\r\n     */\r\n    registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /** TODO: internal */\r\n    ngAfterContentInit() {\r\n        this.value = this._selectElement.nativeElement.value;\r\n\r\n        this._validateConstraints();\r\n\r\n        // Trigger validation when the hint children change.\r\n        this._hintChildren.changes.subscribe(() => {\r\n            this._validateConstraints();\r\n        });\r\n\r\n        console.log('MdSelectComponent#afterContentInit', this);\r\n    }\r\n\r\n    /** TODO: internal */\r\n    ngOnChanges(changes: { [key: string]: SimpleChange }) {\r\n        this._validateConstraints();\r\n    }\r\n\r\n\r\n    /**\r\n     * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\r\n     * Constraints for now:\r\n     *   - placeholder attribute and <md-placeholder> are mutually exclusive.\r\n     *   - type attribute is not one of the forbidden types (see constant at the top).\r\n     *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\r\n     *     considered as align=\"start\".\r\n     * @private\r\n     */\r\n    private _validateConstraints() {\r\n        if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\r\n            throw new JpaMdSelectPlaceholderConflictError();\r\n        }\r\n\r\n        if (this._hintChildren) {\r\n            // Validate the hint labels.\r\n            let startHint: MdHint = null;\r\n            let endHint: MdHint = null;\r\n            this._hintChildren.forEach((hint: MdHint) => {\r\n                if (hint.align == 'start') {\r\n                    if (startHint || this.hintLabel) {\r\n                        throw new JpaMdSelectDuplicatedHintError('start');\r\n                    }\r\n                    startHint = hint;\r\n                } else if (hint.align == 'end') {\r\n                    if (endHint) {\r\n                        throw new JpaMdSelectDuplicatedHintError('end');\r\n                    }\r\n                    endHint = hint;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}