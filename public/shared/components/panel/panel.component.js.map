{"version":3,"sources":["shared/components/panel/panel.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel/panel.component.js","sourcesContent":["import {\n    forwardRef,\n    Component,\n    HostBinding,\n    Input,\n    Provider,\n    Directive,\n    OnInit,\n    AfterViewInit,\n    AfterContentInit,\n    AfterViewChecked,\n    ContentChild,\n    SimpleChange,\n    SimpleChanges,\n    ContentChildren,\n    ViewChild,\n    ViewChildren,\n    ElementRef,\n    QueryList,\n    OnChanges,\n    OnDestroy,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { SlicePipe, NgIf, NgSwitch } from '@angular/common';\nimport {NgModel, NgSelectOption, ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl} from '@angular/forms';\nimport {BooleanFieldValue} from '@angular2-material/core/annotations/field-value';\nimport {MdError} from '@angular2-material/core/errors/error';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { MdHint } from '@angular2-material/input';\nimport { MD_GRID_LIST_DIRECTIVES, MdGridList } from '@angular2-material/grid-list';\nimport { MATERIAL_DIRECTIVES } from '../../libs/angular2-material';\nimport { JpaPanelContent } from './content/index';\nimport { PanelSummaryComponent } from './summary/index';\nimport { ImageUploadComponent } from '../image-upload/index';\nimport { ChipComponent } from '../chip/index';\n\nimport {CKEditor} from 'ng2-ckeditor';\n\nimport { DND_DIRECTIVES } from 'ng2-dnd/ng2-dnd';\n\nexport const JPA_PANEL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\n    useExisting: forwardRef(() => JpaPanel),\n    multi: true\n});\n\nconst noop = () => { };\n\n// Invalid input type. Using one of these will throw an JpaPanelUnsupportedTypeError.\nconst JPA_PANEL_VALID_INPUT_TYPE = [\n    'text',\n    'select',\n    'textarea',\n    'image',\n    'images',\n    'multiselect'\n    // 'checkbox',\n    // 'number',\n    // 'date'\n];\n\nconst JPA_PANEL_UNDERLINE_HIDDEN = [\n    'textarea',\n    'image',\n    'images'\n];\n\nlet nextUniqueId = 0;\n\nexport class JpaPanelUnsupportedTypeError extends MdError {\n    constructor(type: string) {\n        super(`Input type \"${type}\" isn't supported by jpa-panel.`);\n    }\n}\n\nexport class JpaPanelDuplicatedHintError extends MdError {\n    constructor(align: string) {\n        super(`A hint was already declared for 'align=\"${align}\"'.`);\n    }\n}\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.css'],\n    directives: [\n        MATERIAL_DIRECTIVES,\n        NgIf,\n        NgModel,\n        NgSelectOption,\n        JpaPanelContent,\n        ImageUploadComponent,\n        PanelSummaryComponent,\n        ChipComponent,\n        DND_DIRECTIVES,\n        CKEditor\n        // FILE_UPLOAD_DIRECTIVES,\n        // MD_GRID_LIST_DIRECTIVES\n    ],\n    providers: [JPA_PANEL_VALUE_ACCESSOR],\n    pipes: [SlicePipe],\n    host: {\n        '(click)': 'focus()'\n    }\n})\nexport class JpaPanel implements OnInit, AfterViewInit, AfterContentInit, OnChanges, ControlValueAccessor, OnDestroy {\n    private _focused: boolean = false;\n    private _expanded: boolean = false;\n    private _value: any = '';\n    private _secureValue: any = '';\n    private _empty: boolean = false;\n    private _underlineHidden: boolean = false;\n    private _initialValue = null;\n    private _valueChanged = false;\n    private _isTextfield: boolean = false;\n    private _isTextarea: boolean = false;\n    private _isImage: boolean = false;\n    private _isGallery: boolean = false;\n    private _isSelect: boolean = false;\n    private _isMultiSelect: boolean = false;\n    private _hasContent: boolean = false;\n    private _hasContentRight: boolean = false;\n    private _hasContentBottom: boolean = false;\n    private _hasContentLeft: boolean = false;\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_: any) => void = noop;\n    private _originalOptions: any[];\n    private _multiselectDropZone: number = -1;\n\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Bindings.\n     */\n    @Input() @BooleanFieldValue() autoFocus: boolean = false;\n    @Input() currentImage: string = null;\n    @Input() @BooleanFieldValue() disabled: boolean = false;\n    @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\n    @Input() editText: string;\n    @Input() fullWidth: boolean = false;\n    @Input() hintLabel: string = '';\n    @Input() id: string = `jpa-panel-${nextUniqueId++}`;\n    @Input() label: string = null;\n    @Input() max: string = null;\n    @Input() maxLength: number = null;\n    @Input() min: string = null;\n    @Input() minLength: number = null;\n    @Input() name: string = null;\n    @Input() options: any[];\n    @Input() placeholder: string = null;\n    @Input() @BooleanFieldValue() readOnly: boolean = false;\n    @Input() @BooleanFieldValue() required: boolean = false;\n    @Input() @BooleanFieldValue() spellCheck: boolean = false;\n    @Input() step: number = null;\n    @Input() tabIndex: number = null;\n    @Input() type: string = 'text';\n\n    /** Readonly properties. */\n    get focused() { return this._focused; }\n    get empty() {\n        let v = this.value;\n        let x = !v || v === undefined || v === null || (Array.isArray(v) && v.length === 0) || v === '' || v === '__deleted';\n        // //console.warn('Panel'+this.type+' is checking empty of value: ', {\n        //     v: v,\n        //     x: x,\n        //     falsyCheck: (!v ? true : false)\n        // });\n        return x;\n    }\n    get characterCount(): number { return this.empty ? 0 : ('' + this._value).length; }\n    get inputId(): string { return `${this.id}-panel`; }\n\n    get value(): any { return this._value; }\n    @Input() set value(v: any) {\n        console.debug('JpaPanel'+this.type+'.'+this.name+'# set value(): ', v);\n\n        if (v !== this._value) {\n            //console.log('JpaPanel.'+this.type+'.'+this.name+'# value changed!', { v: v, _value: this._value});\n            this._value = v;\n            this._onChangeCallback(v);\n        } else {\n            if (this.type === 'multiselect' && this.empty) {\n                this._onChangeCallback(null);\n            } else if (this.type === 'images') {\n                this._onChangeCallback(v);\n                this._onTouchedCallback();\n                this._valueChanged = true;\n                this._summaryChild.setSummaryOf(v);\n            } else {\n                this._onChangeCallback(this._value);\n            }\n        }\n    }\n\n    set expanded(v: boolean) {\n        this._expanded = v;\n        this._toggleEmitter.emit(this._expanded);\n    }\n    get expanded(): boolean { return this._expanded; }\n\n    get nativeElement() {\n        switch(this.type) {\n            case 'select': return this._selectElement.nativeElement;\n            case 'textarea': return this._textareaElement.nativeElement;\n            default:\n                if (this._inputElement) {\n                    return this._inputElement.nativeElement;\n                }\n        }\n\n        return false;\n    }\n\n    /**\n     * Content directives.\n     */\n    @ContentChildren(MdHint) private _hintChildren: QueryList<MdHint>;\n    @ContentChildren(NgSelectOption) private _optionChildren: QueryList<NgSelectOption>;\n    @ContentChildren(JpaPanelContent) private _contentChildren: QueryList<JpaPanelContent>;\n    @ViewChild(ImageUploadComponent) private _imageUploadCmp: ImageUploadComponent;\n    @ViewChild(PanelSummaryComponent) private _summaryChild: PanelSummaryComponent;\n    @ViewChild('input') private _inputElement: ElementRef;\n    @ViewChild('select') private _selectElement: ElementRef;\n    @ViewChild('textarea') private _textareaElement: ElementRef;\n\n    @ViewChildren(NgModel) private _controls: QueryList<NgModel>;\n\n    /**\n     * Classes\n     */\n    @HostBinding('class.focused') get focusedClass () { return this._focused; }\n    @HostBinding('class.expanded') get expandedClass () { return this._expanded; }\n    @HostBinding('class.changed') get changedClass () { return this._valueChanged; }\n    @HostBinding('class.empty') get emptyClass () { return this.empty; }\n    @HostBinding('class.text') get textClass() { return this.type === 'text'; }\n    @HostBinding('class.select') get selectClass() { return this.type === 'select'; }\n    @HostBinding('class.textarea') get textareaClass() { return this.type === 'textarea'; }\n    @HostBinding('class.image') get imageClass() { return this.type === 'image'; }\n    @HostBinding('class.images') get imagesClass() { return this.type === 'images'; }\n    @HostBinding('class.multiselect') get multiSelectClass() { return this.type === 'multiselect'; }\n    /**\n     * Outputs\n     */\n    @Output() imageFieldChanged = new EventEmitter();\n\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n    private _toggleEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output('blur') get onBlur(): Observable<FocusEvent> { return this._blurEmitter.asObservable(); }\n    handleBlur(event: FocusEvent) {\n        if (this.expanded) {\n            this._focused = false;\n            this._onTouchedCallback();\n            this._blurEmitter.emit(event);\n        }\n    }\n\n    @Output('focus') get onFocus(): Observable<FocusEvent> { return this._focusEmitter.asObservable(); }\n    handleFocus(event: FocusEvent) {\n        if (this.expanded) {\n            this._focused = true;\n            this._focusEmitter.emit(event);\n        }\n    }\n    focus() {\n        if (!this.expanded) {\n            this.toggle();\n            if (this.nativeElement) {\n                setTimeout(() => { this.nativeElement.focus() });\n            }\n        } else if (this.nativeElement) {\n            this.nativeElement.focus();\n        }\n    }\n\n    @Output('toggle') get onToggle(): Observable<any> {\n        return this._toggleEmitter.asObservable();\n    }\n\n    /**\n     * Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        console.debug('JpaPanel.'+this.type+' ' + this.name + '#writeValue('+this.type+')', value);\n        this._value = value;\n        if (this.type === 'multiselect' && value !== null) this.setMultiOptions();\n        if (!this._initialValue) this._initialValue = value;\n    }\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * Handle child content change events\n     */\n    handleChange(event: any) {\n        //console.debug('JpaPanel.'+this.type+' ' + this.name + '#handleChange: ', event, this);\n        switch (this.type) {\n            case 'images':\n                this.value = event;\n                break;\n            case 'select':\n                this.value = (<HTMLSelectElement>event.target).value;\n                break;\n            case 'textarea':\n                // ckeditor handles this\n                break;\n            case 'image':\n                this.value = event.target.files[0];\n                // //console.log('bypassing setting value using ngmodel for image... ', {\n                //     'value': this.value,\n                //     '_value': this._value,\n                //     elValue: (<HTMLInputElement>event.target).value\n                // });\n                this.imageFieldChanged.emit(event.target.files[0]);\n                break;\n            default:\n                this.value = (<HTMLInputElement>event.target).value;\n                break;\n        }\n\n        this._valueChanged = true;\n        this._onTouchedCallback();\n    }\n\n    /**\n     * Run right after the data-bound properties have been checked for the first time,\n     * and before the children are.\n     */\n    ngOnInit() {\n        ////console.info('JpaPanel.'+this.type+' ' + this.name + '#onInit ', this.type);\n        switch(this.type) {\n            case 'text': this._isTextfield = true; break;\n            case 'select': this._isSelect = true; break;\n            case 'textarea': this._isTextarea = true; break;\n            case 'image': this._isImage = true; break;\n            case 'multiselect': this._isMultiSelect = true; this._hasContentRight = true; break;\n            case 'images':\n                this._isGallery = true;\n                this._hasContentBottom = true;\n                this.fullWidth = true;\n                break;\n        }\n    }\n\n    /**\n     * After content init\n     */\n    ngAfterContentInit(): void {\n        this._validateConstraints();\n\n        // Trigger validation when the hint children change.\n        this._hintChildren.changes.subscribe(() => {\n            this._validateConstraints();\n        });\n\n        if (JPA_PANEL_UNDERLINE_HIDDEN.indexOf(this.type) !== -1) {\n            this._underlineHidden = true;\n        }\n\n        this._hasContent = !!this._contentChildren.length;\n\n        if (this._hasContent) {\n            this._contentChildren.forEach(panel => {\n                switch(panel.align) {\n                    case 'right': this._hasContentRight = true; break;\n                    case 'left': this._hasContentLeft = true; break;\n                    case 'bottom': this._hasContentBottom = true; break;\n                }\n\n                if (this.type === 'image') {\n                    let sub = panel.onRemoveImage.subscribe(e => {\n                        this.value = '__deleted';\n                        this.currentImage = '';\n                    });\n\n                    this.subscriptions.push(sub);\n                }\n            })\n        }\n\n        if (this._summaryChild) {\n            switch(this.type) {\n                case 'select':\n                ////console.log('setting select options on children to ', this._optionChildren);\n                    this._summaryChild.setOptions(this._optionChildren);\n                    break;\n            }\n        }\n\n        //console.info('JpaPanel.'+this.type+' ' + this.name + '#AfterContentInit', {this: this, value: this.value, _value: this._value});\n    }\n\n    /**\n     * After View Init\n     */\n    ngAfterViewInit(): void {\n        switch(this.type) {\n            case 'multiselect':\n                this._originalOptions = this.options;\n                break;\n            default:\n                if (this.nativeElement) {\n                    this.value = this.nativeElement.value;\n                }\n        }\n\n        // if (this._controls.length) {\n        //     this._controls.forEach(control => {\n        //         console.log({control: control});\n        //         control.valueChanges.debounceTime(500).subscribe(val => control.value = val);\n        //     });\n        // }\n\n        console.info('PanelComponent.' + this.type + '.'+ this.name + ' # AfterViewInit: ' , this);\n    }\n\n    /**\n     * Handle changes on\n     * @param {SimpleChanges} changes\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        this._validateConstraints();\n    }\n\n    /**\n     * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\n     * Constraints for now:\n     *   - placeholder attribute and <md-placeholder> are mutually exclusive.\n     *   - type attribute is not one of the forbidden types (see constant at the top).\n     *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\n     *     considered as align=\"start\".\n     * @private\n     */\n    private _validateConstraints() {\n        if (JPA_PANEL_VALID_INPUT_TYPE.indexOf(this.type) === -1) {\n            throw new JpaPanelUnsupportedTypeError(this.type);\n        }\n\n        if (this._hintChildren) {\n            // Validate the hint labels.\n            let startHint: MdHint = null;\n            let endHint: MdHint = null;\n            this._hintChildren.forEach((hint: MdHint) => {\n                if (hint.align == 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw new JpaPanelDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                } else if (hint.align == 'end') {\n                    if (endHint) {\n                        throw new JpaPanelDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n\n\n    /**\n     * Internal\n     */\n\n    toggle($event?: Event) {\n        if ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n\n        this.expanded = !this.expanded;\n\n        if (this._hasContent) {\n            this._contentChildren.forEach(panelContent => {\n                panelContent.onToggle(this.expanded);\n            });\n        }\n    }\n\n    setMultiOptions() {\n        //console.warn('SetMultiOptions');\n        this._secureValue = this.value.length === 0 ? null : JSON.stringify(this.value);\n        // this._onChangeCallback(this.value);\n        // this._onTouchedCallback();\n        // //console.log('secure value!', {\n        //     secure: this._secureValue,\n        //     value: this.value,\n        //     _value: this._value\n        // });\n        if (this.options) {\n            let ids = this.value.map(item => item.id);\n            //console.log('value ids: ', ids);\n            this.options = this._originalOptions.filter(option => {\n                return ids.indexOf(option.id) === -1;\n            });\n        }\n    }\n\n    multiselectDrop(e) {\n        if (e.dragData.hasOwnProperty('preventAdd') && e.dragData.preventAdd === true) {\n            //console.log('preventing add from already added chip.');\n            return;\n        }\n\n        //console.log('Multiselect drop!!!!', e);\n\n        let data = e.dragData;\n        let val = this.value.slice(0);\n\n        val.push(data.option);\n        this.value = val;\n        this.setMultiOptions();\n        // this._onChangeCallback(this.value);\n        this._onTouchedCallback();\n        this._valueChanged = true;\n    }\n\n    multiselectReorder(e) {\n        let new_index = this._multiselectDropZone;\n        let old_index = e.dragData.index;\n\n        if (new_index !== old_index) {\n            let value = this.value.slice(0);\n\n            const source = value[old_index];\n            const target = value[new_index];\n\n            value[new_index] = source;\n            value[old_index] = target;\n\n            this.value = value;\n\n            //console.log('Multiselect reorder from ' + old_index + ' to ' + new_index);\n        }\n\n        this._onTouchedCallback();\n        this._valueChanged = true;\n    }\n\n    multiselectOnDragEnter(e, index) {\n        this._multiselectDropZone = index;\n        //console.log(\"multiselectdragenter on \" + index);\n    }\n\n    multiselectRemove(id) {\n        let filtered = this.value.filter(item => {\n            return item.id === id\n        })\n\n        if (filtered && filtered.length) {\n            let index = this.value.indexOf(filtered[0]);\n            let value = this.value;\n            value.splice(index, 1);\n            this.value = value;\n            //console.log('set value to ', value);\n            this.setMultiOptions();\n            // this._onChangeCallback(this.value);\n            // this._onTouchedCallback();\n        }\n\n        this._onTouchedCallback();\n        this._valueChanged = true;\n    }\n\n    /**\n     * ImageUpload events\n     */\n    fileAdded(e: any) {\n        //console.log('PanelComponent -- ImageUpload -- fileAdded', e);\n    }\n    imageAdded(e: any) {\n        //console.log('PanelComponent -- ImageUpload -- imageAdded', e);\n    }\n    imageLoaded(e: any) {\n        //console.log('PanelComponent -- ImageUpload -- imageLoaded', e);\n    }\n\n    /**\n     * Form reset\n     */\n\n    public reset() {\n        this._valueChanged = false;\n        this._secureValue = '';\n        if (this.type === 'image') {\n            this._inputElement.nativeElement.value = '';\n        }\n        this.expanded = false;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((sub: Subscription) => {\n            sub.unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"/source/"}