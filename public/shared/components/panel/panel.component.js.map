{"version":3,"sources":["shared/components/panel/panel.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel/panel.component.js","sourcesContent":["import {\r\n    forwardRef,\r\n    Component,\r\n    HostBinding,\r\n    Input,\r\n    Provider,\r\n    Directive,\r\n    OnInit,\r\n    AfterViewInit,\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    ContentChild,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ElementRef,\r\n    QueryList,\r\n    OnChanges,\r\n    EventEmitter,\r\n    Output,\r\n} from '@angular/core';\r\nimport { SlicePipe, NgIf, NgSwitch } from '@angular/common';\r\nimport {NgModel, NgSelectOption, ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {BooleanFieldValue} from '@angular2-material/core/annotations/field-value';\r\nimport {MdError} from '@angular2-material/core/errors/error';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { MdHint } from '@angular2-material/input';\r\nimport { MD_GRID_LIST_DIRECTIVES, MdGridList } from '@angular2-material/grid-list';\r\nimport { MATERIAL_DIRECTIVES } from '../../libs/angular2-material';\r\nimport { JpaPanelContent } from './content/index';\r\nimport { PanelSummaryComponent } from './summary/index';\r\nimport {ImageUploadComponent} from '../image-upload/index';\r\n\r\nexport const JPA_PANEL_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {\r\n    useExisting: forwardRef(() => JpaPanel),\r\n    multi: true\r\n});\r\n\r\nconst noop = () => { };\r\n\r\n// Invalid input type. Using one of these will throw an JpaPanelUnsupportedTypeError.\r\nconst JPA_PANEL_VALID_INPUT_TYPE = [\r\n    'text',\r\n    'select',\r\n    'textarea',\r\n    'image',\r\n    'images'\r\n    // 'checkbox',\r\n    // 'number',\r\n    // 'date'\r\n];\r\n\r\nconst JPA_PANEL_UNDERLINE_HIDDEN = [\r\n    'textarea',\r\n    'image',\r\n    'images'\r\n];\r\n\r\nlet nextUniqueId = 0;\r\n\r\nexport class JpaPanelUnsupportedTypeError extends MdError {\r\n    constructor(type: string) {\r\n        super(`Input type \"${type}\" isn't supported by jpa-panel.`);\r\n    }\r\n}\r\n\r\nexport class JpaPanelDuplicatedHintError extends MdError {\r\n    constructor(align: string) {\r\n        super(`A hint was already declared for 'align=\"${align}\"'.`);\r\n    }\r\n}\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-panel',\r\n    templateUrl: './panel.component.html',\r\n    styleUrls: ['./panel.component.css'],\r\n    directives: [\r\n        MATERIAL_DIRECTIVES,\r\n        NgIf,\r\n        NgModel,\r\n        NgSelectOption,\r\n        JpaPanelContent,\r\n        ImageUploadComponent,\r\n        PanelSummaryComponent,\r\n        // FILE_UPLOAD_DIRECTIVES,\r\n        // MD_GRID_LIST_DIRECTIVES\r\n    ],\r\n    providers: [JPA_PANEL_VALUE_ACCESSOR],\r\n    pipes: [SlicePipe],\r\n    host: {\r\n        '(click)': 'focus()'\r\n    }\r\n})\r\nexport class JpaPanel implements OnInit, AfterViewInit, AfterContentInit, OnChanges, ControlValueAccessor {\r\n    private _focused: boolean = false;\r\n    private _expanded: boolean = false;\r\n    private _value: any = '';\r\n    private _secureValue: any = '';\r\n    private _empty: boolean = false;\r\n    private _underlineHidden: boolean = false;\r\n    private _initialValue = null;\r\n    private _valueChanged = false;\r\n    private _isTextfield: boolean = false;\r\n    private _isTextarea: boolean = false;\r\n    private _isImage: boolean = false;\r\n    private _isGallery: boolean = false;\r\n    private _isSelect: boolean = false;\r\n    private _hasContent: boolean = false;\r\n    private _hasContentRight: boolean = false;\r\n    private _hasContentBottom: boolean = false;\r\n    private _hasContentLeft: boolean = false;\r\n    private _onTouchedCallback: () => void = noop;\r\n    private _onChangeCallback: (_: any) => void = noop;\r\n\r\n    /**\r\n     * Bindings.\r\n     */\r\n    @Input() @BooleanFieldValue() autoFocus: boolean = false;\r\n    @Input() currentImage: string = null;\r\n    @Input() @BooleanFieldValue() disabled: boolean = false;\r\n    @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\r\n    @Input() editText: string;\r\n    @Input() fullWidth: boolean = false;\r\n    @Input() hintLabel: string = '';\r\n    @Input() id: string = `jpa-panel-${nextUniqueId++}`;\r\n    @Input() label: string = null;\r\n    @Input() max: string = null;\r\n    @Input() maxLength: number = null;\r\n    @Input() min: string = null;\r\n    @Input() minLength: number = null;\r\n    @Input() name: string = null;\r\n    @Input() placeholder: string = null;\r\n    @Input() @BooleanFieldValue() readOnly: boolean = false;\r\n    @Input() @BooleanFieldValue() required: boolean = false;\r\n    @Input() @BooleanFieldValue() spellCheck: boolean = false;\r\n    @Input() step: number = null;\r\n    @Input() tabIndex: number = null;\r\n    @Input() type: string = 'text';\r\n\r\n    /** Readonly properties. */\r\n    get focused() { return this._focused; }\r\n    get empty() {\r\n        let v = this.value;\r\n        let x = !v || v === undefined || v === null || (Array.isArray(v) && v.length)\r\n        // console.warn('Panel'+this.type+' is checking empty of value: ', {\r\n        //     v: v,\r\n        //     x: x,\r\n        //     falsyCheck: (!v ? true : false)\r\n        // });\r\n        return x;\r\n    }\r\n    get characterCount(): number { return this.empty ? 0 : ('' + this._value).length; }\r\n    get inputId(): string { return `${this.id}-panel`; }\r\n\r\n    get value(): any { return this._value; }\r\n    @Input() set value(v: any) {\r\n        console.debug('JpaPanel'+this.type+'.'+this.name+'# set value(): ', v);\r\n\r\n        if (v !== this._value) {\r\n            this._value = v;\r\n            this._onChangeCallback(v);\r\n        }\r\n    }\r\n\r\n    set expanded(v: boolean) {\r\n        this._expanded = v;\r\n        this._toggleEmitter.emit(this._expanded);\r\n    }\r\n    get expanded(): boolean { return this._expanded; }\r\n\r\n    get nativeElement() {\r\n        switch(this.type) {\r\n            case 'select': return this._selectElement.nativeElement;\r\n            case 'textarea': return this._textareaElement.nativeElement;\r\n            default:\r\n                if (this._inputElement) {\r\n                    return this._inputElement.nativeElement;\r\n                }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Content directives.\r\n     */\r\n    @ContentChildren(MdHint) private _hintChildren: QueryList<MdHint>;\r\n    @ContentChildren(NgSelectOption) private _optionChildren: QueryList<NgSelectOption>;\r\n    @ContentChildren(JpaPanelContent) private _contentChildren: QueryList<JpaPanelContent>;\r\n    @ViewChild(ImageUploadComponent) private _imageUploadCmp: ImageUploadComponent;\r\n    @ViewChild(PanelSummaryComponent) private _summaryChild: PanelSummaryComponent;\r\n    @ViewChild('input') private _inputElement: ElementRef;\r\n    @ViewChild('select') private _selectElement: ElementRef;\r\n    @ViewChild('textarea') private _textareaElement: ElementRef;\r\n\r\n    /**\r\n     * Classes\r\n     */\r\n    @HostBinding('class.focused') get focusedClass () { return this._focused; }\r\n    @HostBinding('class.expanded') get expandedClass () { return this._expanded; }\r\n    @HostBinding('class.changed') get changedClass () { return this._valueChanged; }\r\n    @HostBinding('class.empty') get emptyClass () { return this.empty; }\r\n    @HostBinding('class.text') get textClass() { return this.type === 'text'; }\r\n    @HostBinding('class.select') get selectClass() { return this.type === 'select'; }\r\n    @HostBinding('class.textarea') get textareaClass() { return this.type === 'textarea'; }\r\n    @HostBinding('class.image') get imageClass() { return this.type === 'image'; }\r\n    @HostBinding('class.images') get imagesClass() { return this.type === 'images'; }\r\n    /**\r\n     * Outputs\r\n     */\r\n    @Output() imageFieldChanged = new EventEmitter();\r\n\r\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n    private _toggleEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('blur') get onBlur(): Observable<FocusEvent> { return this._blurEmitter.asObservable(); }\r\n    handleBlur(event: FocusEvent) {\r\n        if (this.expanded) {\r\n            this._focused = false;\r\n            this._onTouchedCallback();\r\n            this._blurEmitter.emit(event);\r\n        }\r\n    }\r\n\r\n    @Output('focus') get onFocus(): Observable<FocusEvent> { return this._focusEmitter.asObservable(); }\r\n    handleFocus(event: FocusEvent) {\r\n        if (this.expanded) {\r\n            this._focused = true;\r\n            this._focusEmitter.emit(event);\r\n        }\r\n    }\r\n    focus() {\r\n        if (!this.expanded) {\r\n            this.toggle();\r\n            if (this.nativeElement) {\r\n                setTimeout(() => { this.nativeElement.focus() });\r\n            }\r\n        } else if (this.nativeElement) {\r\n            this.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    @Output('toggle') get onToggle(): Observable<any> {\r\n        return this._toggleEmitter.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     */\r\n    writeValue(value: any) {\r\n        console.debug('JpaPanel.'+this.type+' ' + this.name + '#writeValue('+this.type+')', value);\r\n        this._value = value;\r\n        if (!this._initialValue) this._initialValue = value;\r\n    }\r\n    registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n    registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * Handle child content change events\r\n     */\r\n    handleChange(event: any) {\r\n        console.debug('JpaPanel.'+this.type+' ' + this.name + '#handleChange: ', event, this);\r\n        switch (this.type) {\r\n            case 'images':\r\n                this.value = event;\r\n                break;\r\n            case 'select':\r\n                this.value = (<HTMLSelectElement>event.target).value;\r\n                break;\r\n            case 'textarea':\r\n                this.value = (<HTMLTextAreaElement>event.target).value;\r\n                break;\r\n            case 'image':\r\n                this.value = event.target.files[0];\r\n                // console.log('bypassing setting value using ngmodel for image... ', {\r\n                //     'value': this.value,\r\n                //     '_value': this._value,\r\n                //     elValue: (<HTMLInputElement>event.target).value\r\n                // });\r\n                this.imageFieldChanged.emit(event.target.files[0]);\r\n                break;\r\n            default:\r\n                this.value = (<HTMLInputElement>event.target).value;\r\n                break;\r\n        }\r\n\r\n        this._valueChanged = true;\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    /**\r\n     * Run right after the data-bound properties have been checked for the first time,\r\n     * and before the children are.\r\n     */\r\n    ngOnInit() {\r\n        //console.info('JpaPanel.'+this.type+' ' + this.name + '#onInit ', this.type);\r\n        switch(this.type) {\r\n            case 'text': this._isTextfield = true; break;\r\n            case 'select': this._isSelect = true; break;\r\n            case 'textarea': this._isTextarea = true; break;\r\n            case 'image': this._isImage = true; break;\r\n            case 'images':\r\n                this._isGallery = true;\r\n                this._hasContentBottom = true;\r\n                this.fullWidth = true;\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After content init\r\n     */\r\n    ngAfterContentInit(): void {\r\n        this._validateConstraints();\r\n\r\n        // Trigger validation when the hint children change.\r\n        this._hintChildren.changes.subscribe(() => {\r\n            this._validateConstraints();\r\n        });\r\n\r\n        if (JPA_PANEL_UNDERLINE_HIDDEN.indexOf(this.type) !== -1) {\r\n            this._underlineHidden = true;\r\n        }\r\n\r\n        this._hasContent = !!this._contentChildren.length;\r\n\r\n        if (this._hasContent) {\r\n            this._contentChildren.forEach(panel => {\r\n                switch(panel.align) {\r\n                    case 'right': this._hasContentRight = true; break;\r\n                    case 'left': this._hasContentLeft = true; break;\r\n                    case 'bottom': this._hasContentBottom = true; break;\r\n                }\r\n            })\r\n        }\r\n\r\n        if (this._summaryChild) {\r\n            switch(this.type) {\r\n                case 'select':\r\n                console.log('setting select options on children to ', this._optionChildren);\r\n                    this._summaryChild.setOptions(this._optionChildren);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        console.info('JpaPanel.'+this.type+' ' + this.name + '#AfterContentInit', this);\r\n    }\r\n\r\n    /**\r\n     * After View Init\r\n     */\r\n    ngAfterViewInit(): void {\r\n        switch(this.type) {\r\n            case 'image':\r\n            console.log('Panel(image) setting value to ', {\r\n                from: this.value,\r\n                to: this.nativeElement.value\r\n            });\r\n                this.value = this.nativeElement.value;\r\n            break;\r\n            default:\r\n                if (this.nativeElement) {\r\n                    this.value = this.nativeElement.value;\r\n                }\r\n        }\r\n        console.info('PanelComponent.' + this.type + ' # AfterViewInit: ' , this._optionChildren);\r\n    }\r\n\r\n    /**\r\n     * Handle changes on\r\n     * @param {SimpleChanges} changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this._validateConstraints();\r\n    }\r\n\r\n    /**\r\n     * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\r\n     * Constraints for now:\r\n     *   - placeholder attribute and <md-placeholder> are mutually exclusive.\r\n     *   - type attribute is not one of the forbidden types (see constant at the top).\r\n     *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\r\n     *     considered as align=\"start\".\r\n     * @private\r\n     */\r\n    private _validateConstraints() {\r\n        if (JPA_PANEL_VALID_INPUT_TYPE.indexOf(this.type) === -1) {\r\n            throw new JpaPanelUnsupportedTypeError(this.type);\r\n        }\r\n\r\n        if (this._hintChildren) {\r\n            // Validate the hint labels.\r\n            let startHint: MdHint = null;\r\n            let endHint: MdHint = null;\r\n            this._hintChildren.forEach((hint: MdHint) => {\r\n                if (hint.align == 'start') {\r\n                    if (startHint || this.hintLabel) {\r\n                        throw new JpaPanelDuplicatedHintError('start');\r\n                    }\r\n                    startHint = hint;\r\n                } else if (hint.align == 'end') {\r\n                    if (endHint) {\r\n                        throw new JpaPanelDuplicatedHintError('end');\r\n                    }\r\n                    endHint = hint;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Internal\r\n     */\r\n\r\n    toggle($event?: Event) {\r\n        if ($event) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.expanded = !this.expanded;\r\n\r\n        if (this._hasContent) {\r\n            this._contentChildren.forEach(panelContent => {\r\n                panelContent.onToggle(this.expanded);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ImageUpload events\r\n     */\r\n    fileAdded(e: any) {\r\n        console.log('PanelComponent -- ImageUpload -- fileAdded', e);\r\n    }\r\n    imageAdded(e: any) {\r\n        console.log('PanelComponent -- ImageUpload -- imageAdded', e);\r\n    }\r\n    imageLoaded(e: any) {\r\n     //   console.log('PanelComponent -- ImageUpload -- imageLoaded', e);\r\n    }\r\n\r\n    /**\r\n     * Form reset\r\n     */\r\n\r\n    public reset() {\r\n        this._valueChanged = false;\r\n        this._secureValue = '';\r\n        if (this.type === 'image') {\r\n            this._inputElement.nativeElement.value = '';\r\n        }\r\n        this.expanded = false;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}