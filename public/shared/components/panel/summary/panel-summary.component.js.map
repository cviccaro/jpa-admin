{"version":3,"sources":["shared/components/panel/summary/panel-summary.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAsE,eAAe,CAAC,CAAA;AAEtF,kCAAoC,2CAA2C,CAAC,CAAA;AAShF;IAAA;QACS,gBAAW,GAAG,KAAK,CAAC;QACpB,sBAAiB,GAAG,IAAI,CAAC;QACzB,sBAAiB,GAAG,KAAK,CAAC;QACzB,YAAO,GAAW,EAAE,CAAC;QACrB,aAAQ,GAAY,KAAK,CAAC;QAC1B,UAAK,GAAY,IAAI,CAAC;QAKtB,iBAAY,GAAY,KAAK,CAAC;IA4BxC,CAAC;IAvBA,sBAAI,mDAAgB;aAGpB;YACC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAC/B,CAAC;aALD,UAAqB,CAAyB;YAC1C,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAMD,+CAAe,GAAf;QAAA,iBAcC;QAbA,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;QACjD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,sDAAsD,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACrE,IAAI,CAAC,aAAa,CAAC,aAAc,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAA,CAAC;gBAC9E,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,gBAAgB,GAAG,EAAC,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,EAAC,CAAC;gBAC9H,IAAM,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrE,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACjD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,CAAC;YACnB,CAAC,CAAC,CAAA;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,6DAA6D,EAAE,IAAI,CAAC,CAAC;QAClF,CAAC;IACF,CAAC;IAlCD;QAAC,YAAK,EAAE;;0DAAA;IACR;QAAC,YAAK,EAAE;;2DAAA;IACR;QAAC,YAAK,EAAE;;wDAAA;IACR;QAAC,YAAK,EAAE;;uDAAA;IACR;QAAC,YAAK,EAAE;;0DAAA;IACR;QAAC,YAAK,EAAE;;wDAAA;IACR;QAAC,YAAK,EAAE;;+DAAA;IACR;QAAC,YAAK,EAAE;;+DAAA;IACR;QAAC,YAAK,EAAE;;2DAAA;IAER;QAAC,gBAAS,CAAC,cAAc,CAAC;;gEAAA;IArB3B;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,gCAAgC;YAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;YAC5C,UAAU,EAAE,CAAC,uCAAmB,CAAC;SACjC,CAAC;;6BAAA;IAwCF,4BAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,6BAAqB,wBAuCjC,CAAA","file":"shared/components/panel/summary/panel-summary.component.js","sourcesContent":["import { Component, AfterViewInit, Input, ViewChild, ElementRef} from '@angular/core';\n\nimport { MATERIAL_DIRECTIVES } from '../../../../shared/libs/angular2-material';\n\n@Component({\n\tmoduleId: module.id,\n\tselector: 'jpa-panel-summary',\n\ttemplateUrl: './panel-summary.component.html',\n\tstyleUrls: ['./panel-summary.component.css'],\n\tdirectives: [MATERIAL_DIRECTIVES]\n})\nexport class PanelSummaryComponent implements AfterViewInit {\n\tprivate imageLoaded = false;\n\tprivate _currentImageSize = null;\n\tprivate _currentImageName = false;\n\t@Input() summary: string = '';\n\t@Input() expanded: boolean = false;\n\t@Input() empty: boolean = true;\n\t@Input() type: string;\n\t@Input() gallery: any;\n\t@Input() value: any;\n\t@Input() currentImage: any;\n\t@Input() valueChanged: boolean = false;\n\t@Input() editText: string;\n\n\t@ViewChild('imagePreview') _imagePreview : ElementRef;\n\n\tset currentImageSize(v: {w: number, h: number}) {\n\t    this._currentImageSize = v;\n\t}\n\tget currentImageSize() {\n\t\treturn this._currentImageSize;\n\t}\n\t    \n\n\tngAfterViewInit() {\n\t\tconsole.log('PanelSummary# AfterViewInit', this);\n\t\tif (this._imagePreview) {\n\t\t\tconsole.log('Binding to image preview to check its loaded status ', this._imagePreview);\n\t\t\t(<HTMLImageElement>this._imagePreview.nativeElement).addEventListener('load', e => {\n\t\t\t\tthis.imageLoaded = true;\n\t\t\t\tthis.currentImageSize = {w: this._imagePreview.nativeElement.naturalWidth, h: this._imagePreview.nativeElement.naturalHeight};\n\t\t\t\tconst parts = this._imagePreview.nativeElement.currentSrc.split('/');\n\t\t\t\tthis._currentImageName = parts[parts.length - 1];\n\t\t\t\tconsole.log(this);\n\t\t\t})\n\t\t} else {\n\t\t\tconsole.log('Skipping image preview check because it is does not exist. ', this);\n\t\t}\n\t}\n}\n"],"sourceRoot":"/source/"}