{"version":3,"sources":["shared/components/panel/content/panel-content.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel/content/panel-content.component.js","sourcesContent":["import {\r\n    Component,\r\n    Input,\r\n    OnInit,\r\n    AfterContentInit,\r\n    AfterViewInit,\r\n    ElementRef,\r\n    ContentChild,\r\n    ViewChild,\r\n    HostBinding,\r\n    SimpleChanges,\r\n    SimpleChange\r\n} from '@angular/core';\r\nimport { MdGridList } from '@angular2-material/grid-list';\r\nimport { MD_ICON_DIRECTIVES } from '@angular2-material/icon';\r\n\r\nimport { JpImage, ImageUpload, JpaPanelChild }  from '../../../index';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-panel-content',\r\n    templateUrl: './panel-content.component.html',\r\n    styleUrls: ['./panel-content.component.css'],\r\n    directives: [MdGridList, MD_ICON_DIRECTIVES]\r\n})\r\nexport class JpaPanelContent implements AfterContentInit, AfterViewInit, JpaPanelChild {\r\n    private _hasImage: boolean = false;\r\n    private _imageUrl: any = '';\r\n    private loading: boolean = false;\r\n\r\n    imageEl: HTMLImageElement;\r\n    imageWidth: number;\r\n    imageHeight: number;\r\n\r\n    constructor(public el: ElementRef) { }\r\n\r\n    @Input() file: File = null;\r\n    @Input() image: JpImage = null;\r\n    @Input() align: string = 'right';\r\n    @Input() label: string = '';\r\n\r\n    @HostBinding('class.left') get ifLeftClass() { return this.align === 'left'; }\r\n    @HostBinding('class.right') get ifRightClass() { return this.align === 'right'; }\r\n    @HostBinding('class.bottom') get ifBottomClass() { return this.align === 'bottom'; }\r\n\r\n    @ContentChild(MdGridList) private _gridList: MdGridList;\r\n    @ViewChild('img') private _imageEl: ElementRef;\r\n\r\n    ngAfterContentInit(): void {\r\n        this._hasImage = !!this.image;\r\n\r\n        if (this._hasImage) {\r\n            this._imageUrl = this.image.url;\r\n            this.loading = true;\r\n        }\r\n\r\n        console.info('PanelContent (' + this.align + ') Content Initialized: ', { this: this });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.imageEl = this._imageEl.nativeElement\r\n        this.imageEl.addEventListener('load', () => this.onImgLoad());\r\n\r\n        console.info('PanelContent (' + this.align + ') View Initialized: ', { this: this });\r\n        // if (this._gridList) {\r\n        //     console.log('CHECK OUT OUR SWEET LAYOUT TILES FUNCTION: ' , this._gridList['_layoutTiles']);\r\n        //     this._gridList['_layoutTiles']();\r\n        // }\r\n    }\r\n\r\n    onToggle(expanded: boolean): void {\r\n        //console.log('PanelContentChild just saw its parent toggle ', expanded);\r\n        // if (expanded) {\r\n        //     if (this._gridList) {\r\n        //         console.log(this._gridList);\r\n        //         setTimeout(() => { this._gridList['_layoutTiles']() }, 1000);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    onImgLoad() {\r\n        console.debug(this.align + ' image loaded!', {image: this.image});\r\n        this.loading = false;\r\n        this.imageWidth = this.imageEl.naturalWidth;\r\n        this.imageHeight = this.imageEl.naturalHeight;\r\n        this.imageEl.removeEventListener('load', this.onImgLoad);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        console.debug('PanelContent (' + this.align + ') changed: ', { changes: changes });\r\n        for (let prop in changes) {\r\n            let previousValue = changes[prop].previousValue;\r\n            let currentValue = changes[prop].currentValue;\r\n            let isFirstChange = changes[prop].isFirstChange();\r\n\r\n            switch(prop) {\r\n                case 'image':\r\n                    // File upload that changes the \"current\" image\r\n                    if (currentValue) {\r\n                        this._imageUrl = this.image.url;\r\n                        this._hasImage = true;\r\n                    } else {\r\n                        this._imageUrl = '';\r\n                        this._hasImage = false;\r\n                    }\r\n                    break;\r\n                case 'file':\r\n                    // File upload preview\r\n                    if (currentValue) {\r\n                        let file = currentValue;\r\n\r\n                        this.image = new ImageUpload(file);\r\n\r\n                        this.loading = true;\r\n\r\n                        this.image.load()\r\n                            .subscribe(dataUrl => {\r\n                                this._imageUrl = dataUrl;\r\n                                this._hasImage = true;\r\n                            });\r\n                    } else {\r\n                        this._imageUrl = '';\r\n                        this._hasImage = false;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}