{"version":3,"sources":["shared/components/panel/content/panel-content.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoG,eAAe,CAAC,CAAA;AACpH,0BAA2B,8BAA8B,CAAC,CAAA;AAS1D;IAII,yBAAmB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAHzB,cAAS,GAAY,KAAK,CAAC;QAC3B,mBAAc,GAAW,EAAE,CAAC;QAI3B,UAAK,GAAW,IAAI,CAAC;QACrB,UAAK,GAAW,OAAO,CAAC;IAHG,CAAC;IAOrC,kCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC;YAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC/E,CAAC;IACD,4CAAkB,GAAlB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,cAAc,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACjE,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,CAAC;IACL,CAAC;IACD,yCAAe,GAAf;QACI,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;IAM1D,CAAC;IAED,kCAAQ,GAAR,UAAS,QAAiB;QACtB,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,QAAQ,CAAC,CAAC;IAO3E,CAAC;IAlCD;QAAC,YAAK,EAAE;;kDAAA;IACR;QAAC,YAAK,EAAE;;kDAAA;IAER;QAAC,mBAAY,CAAC,sBAAU,CAAC;;sDAAA;IAhB7B;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,gCAAgC;YAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;YAC5C,UAAU,EAAE,CAAC,sBAAU,CAAC;SAC3B,CAAC;;uBAAA;IA0CF,sBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,uBAAe,kBAyC3B,CAAA","file":"shared/components/panel/content/panel-content.component.js","sourcesContent":["import { Component, Input, OnInit, AfterContentInit, AfterViewInit, ElementRef, ContentChild } from '@angular/core';\r\nimport { MdGridList } from '@angular2-material/grid-list';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'jpa-panel-content',\r\n    templateUrl: './panel-content.component.html',\r\n    styleUrls: ['./panel-content.component.css'],\r\n    directives: [MdGridList]\r\n})\r\nexport class JpaPanelContent implements OnInit, AfterViewInit {\r\n    private _hasImage: boolean = false;\r\n    private imageExtension: string = '';\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    @Input() image: string = null;\r\n    @Input() align: string = 'right';\r\n\r\n    @ContentChild(MdGridList) private _gridList: MdGridList;\r\n\r\n    ngOnInit() {\r\n        if (this.image !== null && this.image !== undefined) this._hasImage = true;\r\n    }\r\n    ngAfterContentInit() {\r\n        if (this._hasImage) {\r\n            this.imageExtension = 'image/' + this.image.split('.').pop();\r\n        }\r\n        \r\n        if (this.el.nativeElement.classList.contains('bottom')) {\r\n            this.align = 'bottom';\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        console.debug('PanelContent view initialized.', this);\r\n\r\n        // if (this._gridList) {\r\n        //     console.log('CHECK OUT OUR SWEET LAYOUT TILES FUNCTION: ' , this._gridList['_layoutTiles']);\r\n        //     this._gridList['_layoutTiles']();\r\n        // }\r\n    }\r\n\r\n    onToggle(expanded: boolean) {\r\n        console.log('PanelContentChild just saw its parent toggle ', expanded);\r\n        // if (expanded) {\r\n        //     if (this._gridList) {\r\n        //         console.log(this._gridList);\r\n        //         setTimeout(() => { this._gridList['_layoutTiles']() }, 1000);\r\n        //     }\r\n        // }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}