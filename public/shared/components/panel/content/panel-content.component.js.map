{"version":3,"sources":["shared/components/panel/content/panel-content.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAWO,eAAe,CAAC,CAAA;AACvB,0BAA2B,8BAA8B,CAAC,CAAA;AAS1D;IAII,yBAAmB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAHzB,cAAS,GAAY,KAAK,CAAC;QAC3B,mBAAc,GAAW,EAAE,CAAC;QAI3B,SAAI,GAAS,IAAI,CAAC;QAClB,UAAK,GAAW,IAAI,CAAC;QACrB,UAAK,GAAW,OAAO,CAAC;IAJI,CAAC;IAMX,sBAAI,wCAAW;aAAf,cAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;;;OAAA;IAClD,sBAAI,yCAAY;aAAhB,cAAqB,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;;;OAAA;IACpD,sBAAI,0CAAa;aAAjB,cAAsB,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAIpF,4CAAkB,GAAlB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACjE,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,GAAG,yBAAyB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,yCAAe,GAAf;IAKA,CAAC;IAED,kCAAQ,GAAR,UAAS,QAAiB;IAQ1B,CAAC;IAED,qCAAW,GAAX,UAAY,OAAsB;QAC9B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,GAAG,aAAa,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrF,CAAC;IArCD;QAAC,YAAK,EAAE;;iDAAA;IACR;QAAC,YAAK,EAAE;;kDAAA;IACR;QAAC,YAAK,EAAE;;kDAAA;IAER;QAAC,kBAAW,CAAC,YAAY,CAAC;;sDAAA;IAC1B;QAAC,kBAAW,CAAC,aAAa,CAAC;;uDAAA;IAC3B;QAAC,kBAAW,CAAC,cAAc,CAAC;;wDAAA;IAE5B;QAAC,mBAAY,CAAC,sBAAU,CAAC;;sDAAA;IArB7B;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,mBAAmB;YAC7B,WAAW,EAAE,gCAAgC;YAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;YAC5C,UAAU,EAAE,CAAC,sBAAU,CAAC;SAC3B,CAAC;;uBAAA;IA6CF,sBAAC;AAAD,CA5CA,AA4CC,IAAA;AA5CY,uBAAe,kBA4C3B,CAAA","file":"shared/components/panel/content/panel-content.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnInit,\n    AfterContentInit,\n    AfterViewInit,\n    ElementRef,\n    ContentChild,\n    HostBinding,\n    SimpleChanges,\n    SimpleChange\n} from '@angular/core';\nimport { MdGridList } from '@angular2-material/grid-list';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel-content',\n    templateUrl: './panel-content.component.html',\n    styleUrls: ['./panel-content.component.css'],\n    directives: [MdGridList]\n})\nexport class JpaPanelContent implements AfterContentInit, AfterViewInit {\n    private _hasImage: boolean = false;\n    private imageExtension: string = '';\n\n    constructor(public el: ElementRef) { }\n\n    @Input() file: File = null;\n    @Input() image: string = null;\n    @Input() align: string = 'right';\n\n    @HostBinding('class.left') get ifLeftClass() { return this.align === 'left'; }\n    @HostBinding('class.right') get ifRightClass() { return this.align === 'right'; }\n    @HostBinding('class.bottom') get ifBottomClass() { return this.align === 'bottom'; }\n\n    @ContentChild(MdGridList) private _gridList: MdGridList;\n\n    ngAfterContentInit() {\n        if (this.image) {\n            this._hasImage = true;\n            this.imageExtension = 'image/' + this.image.split('.').pop();\n        }\n        console.log('PanelContent (' + this.align + ') Content Initialized: ', { this: this });\n    }\n\n    ngAfterViewInit() {\n        // if (this._gridList) {\n        //     console.log('CHECK OUT OUR SWEET LAYOUT TILES FUNCTION: ' , this._gridList['_layoutTiles']);\n        //     this._gridList['_layoutTiles']();\n        // }\n    }\n\n    onToggle(expanded: boolean) {\n        //console.log('PanelContentChild just saw its parent toggle ', expanded);\n        // if (expanded) {\n        //     if (this._gridList) {\n        //         console.log(this._gridList);\n        //         setTimeout(() => { this._gridList['_layoutTiles']() }, 1000);\n        //     }\n        // }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        console.log('PanelContent (' + this.align + ') changed: ', { changes: changes });\n    }\n}\n"],"sourceRoot":"/source/"}