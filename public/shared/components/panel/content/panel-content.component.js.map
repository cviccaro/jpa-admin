{"version":3,"sources":["shared/components/panel/content/panel-content.component.ts"],"names":[],"mappings":"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","file":"shared/components/panel/content/panel-content.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    AfterContentInit,\n    AfterViewInit,\n    ElementRef,\n    ContentChild,\n    ViewChild,\n    HostBinding,\n    SimpleChanges,\n    SimpleChange\n} from '@angular/core';\nimport { DND_DIRECTIVES } from 'ng2-dnd/ng2-dnd';\nimport { MATERIAL_DIRECTIVES } from '../../../../shared/libs/angular2-material';\n\nimport {\n    JpImage,\n    ImageUpload,\n    JpaPanelChild,\n    JpaModal\n} from '../../../index';\nimport { ChipComponent } from '../../chip/chip.component';\nimport { CONTEXT_MENU_DIRECTIVES, JpaContextMenu } from '../../context-menu/index';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-panel-content',\n    templateUrl: './panel-content.component.html',\n    styleUrls: ['./panel-content.component.css'],\n    directives: [MATERIAL_DIRECTIVES, DND_DIRECTIVES, ChipComponent, CONTEXT_MENU_DIRECTIVES]\n})\nexport class JpaPanelContent implements AfterContentInit, AfterViewInit, JpaPanelChild {\n    constructor(public el: ElementRef, public menu: JpaContextMenu) { }\n\n    private _hasImage: boolean = false;\n    private _imageUrl: any = '';\n    private loading: boolean = false;\n\n    hasOptions: boolean = false;\n\n    imageEl: HTMLImageElement;\n    imageWidth: number;\n    imageHeight: number;\n\n    @Input() file: File = null;\n    @Input() image: JpImage = null;\n    @Input() align: string = 'right';\n    @Input() label: string = '';\n    @Input() options: any[] = [];\n\n    @Output() onRemoveImage = new EventEmitter();\n\n    @HostBinding('class.left') get ifLeftClass() { return this.align === 'left'; }\n    @HostBinding('class.right') get ifRightClass() { return this.align === 'right'; }\n    @HostBinding('class.bottom') get ifBottomClass() { return this.align === 'bottom'; }\n\n    @ViewChild('img') private _imageEl: ElementRef;\n\n    ngAfterContentInit(): void {\n        this._hasImage = !!this.image;\n\n        this.hasOptions = !!this.options.length;\n\n        if (this._hasImage) {\n            this._imageUrl = this.image.url;\n            this.loading = true;\n        }\n\n        //console.info('PanelContent (' + this.align + ') Content Initialized: ', { this: this });\n    }\n\n    ngAfterViewInit(): void {\n        this.imageEl = this._imageEl.nativeElement\n        this.imageEl.addEventListener('load', () => this.onImgLoad());\n\n        //console.info('PanelContent (' + this.align + ') View Initialized: ', { this: this });\n    }\n\n    onToggle(expanded: boolean): void {\n        ////console.log('PanelContentChild just saw its parent toggle ', expanded);\n    }\n\n    addToMultiSelect(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        //console.log('AddToMultiSelect', this);\n    }\n\n    removeImage(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        //console.log('removeImage', this);\n\n        this._hasImage = false;\n        this.image = null;\n        // this._imageUrl = undefined;\n\n        this.menu.close();\n        this.onRemoveImage.emit(e);\n    }\n\n    onImgLoad() {\n        ////console.debug(this.align + ' image loaded!', {image: this.image});\n        this.loading = false;\n        this.imageWidth = this.imageEl.naturalWidth;\n        this.imageHeight = this.imageEl.naturalHeight;\n        this.imageEl.removeEventListener('load', this.onImgLoad);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        ////console.debug('PanelContent (' + this.align + ') changed: ', { changes: changes });\n        for (let prop in changes) {\n            let previousValue = changes[prop].previousValue;\n            let currentValue = changes[prop].currentValue;\n            let isFirstChange = changes[prop].isFirstChange();\n\n            switch(prop) {\n                case 'image':\n                    // File upload that changes the \"current\" image\n                    if (currentValue) {\n                        this._imageUrl = this.image.url;\n                        this._hasImage = true;\n                    } else {\n                        this._imageUrl = '';\n                        this._hasImage = false;\n                    }\n                    break;\n                case 'file':\n                    // File upload preview\n                    if (currentValue) {\n                        let file = currentValue;\n\n                        this.image = new ImageUpload(file);\n\n                        this.loading = true;\n\n                        this.image.load()\n                            .subscribe(dataUrl => {\n                                this._imageUrl = dataUrl;\n                                this._hasImage = true;\n                            });\n                    } else {\n                        this._imageUrl = '';\n                        this._hasImage = false;\n                    }\n                    break;\n            }\n        }\n    }\n}\n"],"sourceRoot":"/source/"}