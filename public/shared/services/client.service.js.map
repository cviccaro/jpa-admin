{"version":3,"sources":["shared/services/client.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAsC,eAAe,CAAC,CAAA;AACtD,QAAO,uBAAuB,CAAC,CAAA;AAK/B;IAGC,uBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEE,2BAAG,GAAH,UAAI,MAAe;QAAf,sBAAe,GAAf,WAAe;QACf,IAAI,KAAK,GAAG,IAAI,sBAAe,EAAE,CAAC;QAClC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAM,KAAK,GAAW,MAAM,CAAC,GAAG,CAAC,CAAC;YAClC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;aAClD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChC,CAAC;IAEJ,+BAAO,GAAP;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC;aACtC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1B,CAAC;IAEE,6BAAK,GAAL,UAAM,CAAW;QACb,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,8BAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IA9BL;QAAC,iBAAU,EAAE;;qBAAA;IA+Bb,oBAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,qBAAa,gBA8BzB,CAAA","file":"shared/services/client.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, URLSearchParams } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { JpClient } from '../models/client';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\tprivate _cached: string[];\r\n\r\n\tconstructor(public http: Http) {\r\n\t\tthis.http = http;\r\n\t}\r\n\r\n    all(params: {} = {}) {\r\n        let query = new URLSearchParams();\r\n        for (var key in params) {\r\n            const param: string = params[key];\r\n            query.set(key, param);\r\n        }\r\n\r\n        return this.http.get('/clients/paged', {search: query})\r\n            .map(res => res.json());\r\n    }\r\n\r\n\toptions() {\r\n\t\treturn this.http.get('/options/clients')\r\n\t\t\t.map(res => res.json());\r\n\t}\r\n\r\n    cache(v: string[]) {\r\n        this._cached = v;\r\n    }\r\n\r\n    cached() : string[] {\r\n        return this._cached;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}