{"version":3,"sources":["shared/services/client.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAsC,eAAe,CAAC,CAAA;AACtD,QAAO,uBAAuB,CAAC,CAAA;AAK/B;IAGC,uBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,+BAAO,GAAP;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC;aACtC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1B,CAAC;IAEE,6BAAK,GAAL,UAAM,CAAW;QACb,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,8BAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAnBL;QAAC,iBAAU,EAAE;;qBAAA;IAoBb,oBAAC;AAAD,CAnBA,AAmBC,IAAA;AAnBY,qBAAa,gBAmBzB,CAAA","file":"shared/services/client.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { JpClient } from '../models/client';\n\n@Injectable()\nexport class ClientService {\n\tprivate _cached: string[];\n\n\tconstructor(public http: Http) {\n\t\tthis.http = http;\n\t}\n\n\toptions() {\n\t\treturn this.http.get('/options/clients')\n\t\t\t.map(res => res.json());\n\t}\n\n    cache(v: string[]) {\n        this._cached = v;\n    }\n\n    cached() : string[] {\n        return this._cached;\n    }\n}\n"],"sourceRoot":"/source/"}