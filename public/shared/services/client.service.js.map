{"version":3,"sources":["shared/services/client.service.ts"],"names":[],"mappings":"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","file":"shared/services/client.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport { JpClient } from '../models/client';\n\n@Injectable()\nexport class ClientService {\n\tprivate _cached: string[];\n\n\tconstructor(public http: Http) {\n\t\tthis.http = http;\n\t}\n\n    all(params: {} = {}) {\n        let query = new URLSearchParams();\n        for (var key in params) {\n            const param: string = params[key];\n            query.set(key, param);\n        }\n\n        return this.http.get('/clients/paged', {search: query})\n            .map(res => res.json());\n    }\n\n\toptions() {\n\t\treturn this.http.get('/options/clients')\n\t\t\t.map(res => res.json());\n\t}\n\n    cache(v: string[]) {\n        this._cached = v;\n    }\n\n    cached() : string[] {\n        return this._cached;\n    }\n\n    update(id, values: any[]) {\n        let form = new FormData();\n        let _form = {};\n\n        values.forEach(col => {\n            let key = col.name;\n            let value = col.value;\n\n            switch(key) {\n                case 'image':\n                    if (value !== undefined && value !== null) {\n                        form.append(key, col.value[0]);\n                        _form[key] = col.value[0];\n                    }\n                    break;\n                case 'featured':\n                    if (value !== undefined && value !== null) {\n                        form.append(key, col.value ? 1 : 0);\n                        _form[key] = col.value ? 1 : 0;\n                    }\n                    break;\n                default:\n                    if (value !== undefined && value !== null) {\n                        form.append(key, value);\n                        _form[key] = value;\n                    }\n            }\n        });\n\n        console.log('update client with data: ', {\n            values: values,\n            form: form,\n            _form: _form\n        });\n\n        return this.http.post('/clients/update/' + id, form).map(res => res.json());\n    }\n\n    create(values: any[]) {\n        let form = new FormData();\n        let _form = {};\n\n        values.forEach(col => {\n            let key = col.name;\n            let value = col.value;\n\n            switch(key) {\n                case 'image':\n                    if (value !== undefined && value !== null) {\n                        form.append(key, col.value[0]);\n                        _form[key] = col.value[0];\n                    }\n                    break;\n                case 'featured':\n                    if (value !== undefined && value !== null) {\n                        form.append(key, col.value ? 1 : 0);\n                        _form[key] = col.value ? 1 : 0;\n                    }\n                    break;\n                default:\n                    if (value !== undefined && value !== null) {\n                        form.append(key, value);\n                        _form[key] = value;\n                    }\n            }\n        });\n\n        console.log('create client with data: ', {\n            values: values,\n            form: form,\n            _form: _form\n        });\n\n        return this.http.post('/clients', form).map(res => res.json());\n    }\n\n    destroy(id: number) {\n        return this.http.delete('/clients/' + id);\n    }\n}\n"],"sourceRoot":"/source/"}