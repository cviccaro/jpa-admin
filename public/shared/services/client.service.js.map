{"version":3,"sources":["shared/services/client.service.ts"],"names":[],"mappings":"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","file":"shared/services/client.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, URLSearchParams } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { JpClient } from '../models/client';\r\n\r\n@Injectable()\r\nexport class ClientService {\r\n\tprivate _cached: string[];\r\n\r\n\tconstructor(public http: Http) {\r\n\t\tthis.http = http;\r\n\t}\r\n\r\n    all(params: {} = {}) {\r\n        let query = new URLSearchParams();\r\n        for (var key in params) {\r\n            const param: string = params[key];\r\n            query.set(key, param);\r\n        }\r\n\r\n        return this.http.get('/clients/paged', {search: query})\r\n            .map(res => res.json());\r\n    }\r\n\r\n\toptions() {\r\n\t\treturn this.http.get('/options/clients')\r\n\t\t\t.map(res => res.json());\r\n\t}\r\n\r\n    cache(v: string[]) {\r\n        this._cached = v;\r\n    }\r\n\r\n    cached() : string[] {\r\n        return this._cached;\r\n    }\r\n\r\n    update(id, values: any[]) {\r\n        let form = new FormData();\r\n        let _form = {};\r\n\r\n        values.forEach(col => {\r\n            let key = col.name;\r\n            let value = col.value;\r\n\r\n            switch(key) {\r\n                case 'image':\r\n                    if (value !== undefined && value !== null) {\r\n                        form.append(key, col.value[0]);\r\n                        _form[key] = col.value[0];\r\n                    }\r\n                    break;\r\n                case 'featured':\r\n                    if (value !== undefined && value !== null) {\r\n                        form.append(key, col.value ? 1 : 0);\r\n                        _form[key] = col.value ? 1 : 0;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (value !== undefined && value !== null) {\r\n                        form.append(key, value);\r\n                        _form[key] = value;\r\n                    }\r\n            }\r\n        });\r\n\r\n        console.log('update client with data: ', {\r\n            values: values,\r\n            form: form,\r\n            _form: _form\r\n        });\r\n\r\n        return this.http.post('/clients/update/' + id, form).map(res => res.json());\r\n    }\r\n\r\n    create(values: any[]) {\r\n        let form = new FormData();\r\n        let _form = {};\r\n\r\n        values.forEach(col => {\r\n            let key = col.name;\r\n            let value = col.value;\r\n\r\n            switch(key) {\r\n                case 'image':\r\n                    if (value !== undefined && value !== null) {\r\n                        form.append(key, col.value[0]);\r\n                        _form[key] = col.value[0];\r\n                    }\r\n                    break;\r\n                case 'featured':\r\n                    if (value !== undefined && value !== null) {\r\n                        form.append(key, col.value ? 1 : 0);\r\n                        _form[key] = col.value ? 1 : 0;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (value !== undefined && value !== null) {\r\n                        form.append(key, value);\r\n                        _form[key] = value;\r\n                    }\r\n            }\r\n        });\r\n\r\n        console.log('create client with data: ', {\r\n            values: values,\r\n            form: form,\r\n            _form: _form\r\n        });\r\n\r\n        return this.http.post('/clients', form).map(res => res.json());\r\n    }\r\n\r\n    destroy(id: number) {\r\n        return this.http.delete('/clients/' + id);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}