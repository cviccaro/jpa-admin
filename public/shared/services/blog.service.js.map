{"version":3,"sources":["shared/services/blog.service.ts"],"names":[],"mappings":"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","file":"shared/services/blog.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, URLSearchParams } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { XhrService } from './xhr';\r\n\r\n@Injectable()\r\nexport class BlogService {\r\n\r\n\tconstructor(public http: Http, public xhr: XhrService) {\r\n\t\tthis.http = http;\r\n\t}\r\n\r\n\tall(params: {} = {}) {\r\n\t\tlet query = new URLSearchParams();\r\n\r\n\t\tfor (var key in params) {\r\n\t\t\tconst param: string = params[key];\r\n\t\t\tquery.set(key, param);\r\n\t\t}\r\n\r\n        this.xhr.started();\r\n\r\n\t    return this.http.get('/blogs/paged', {search: query})\r\n\t        .map(res => {\r\n                this.xhr.finished();\r\n                return res.json();\r\n            });\r\n\t}\r\n\r\n\tfind(id: number, cached?: boolean) {\r\n        this.xhr.started();\r\n\r\n        return this.http.get(`/blogs/${id}`)\r\n            .map(res => {\r\n                this.xhr.finished();\r\n                return res.json()\r\n            });\r\n\t}\r\n\r\n    destroy(id: number) {\r\n        this.xhr.started();\r\n\r\n        return this.http.delete(`/blogs/${id}`)\r\n            .map(res => {\r\n                this.xhr.finished();\r\n                return res.json()\r\n            });\r\n    }\r\n\r\n    create(attributes) {\r\n        let form = this.createFormData(attributes);\r\n\r\n        this.xhr.started();\r\n\r\n        return this.http.post('/blogs', form)\r\n            .map(res => {\r\n                this.xhr.finished();\r\n                return res.json()\r\n            });\r\n    }\r\n\r\n    update(id, attributes) {\r\n        let form = this.createFormData(attributes);\r\n\r\n        this.xhr.started();\r\n\r\n        return this.http.post(`/blogs/update/${id}`, form)\r\n            .map(res => {\r\n                this.xhr.finished();\r\n                return res.json()\r\n            });\r\n    }\r\n\r\n    private createFormData(attributes) {\r\n        let form = new FormData();\r\n\r\n        for (let key in attributes) {\r\n            let val = attributes[key];\r\n\r\n            switch(key) {\r\n                case 'images':\r\n                    break;\r\n                case 'image':\r\n                    if (val === '') {\r\n                        form.append(key, val);\r\n                    } else if (!!val && val._file) {\r\n                        form.append(key, val._file);\r\n                    }\r\n                    break;\r\n                case 'divisions':\r\n                case 'tags':\r\n                    val.forEach((item,i) => {\r\n                        for (let k in item) {\r\n                            form.append(`${key}[${i}][${k}]`, item[k]);\r\n                        }\r\n                    });\r\n                    break;\r\n                default:\r\n                    if (val !== undefined && val !== null) form.append(key, val);\r\n            }\r\n        }\r\n\r\n        return form;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}