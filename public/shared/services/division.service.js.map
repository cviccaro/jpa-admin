{"version":3,"sources":["shared/services/division.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAsC,eAAe,CAAC,CAAA;AACtD,QAAO,uBAAuB,CAAC,CAAA;AAK/B;IAGC,yBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,6BAAG,GAAH,UAAI,MAAe;QAAf,sBAAe,GAAf,WAAe;QACf,IAAI,KAAK,GAAG,IAAI,sBAAe,EAAE,CAAC;QAClC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAM,KAAK,GAAW,MAAM,CAAC,GAAG,CAAC,CAAC;YAClC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;aACpD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChC,CAAC;IAED,iCAAO,GAAP;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC;aACxC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1B,CAAC;IAEE,+BAAK,GAAL,UAAM,CAAW;QACb,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,gCAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEJ,8BAAI,GAAJ,UAAK,EAAU;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,EAAE,CAAC;aACnC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnC,CAAC;IAED,gCAAM,GAAN,UAAO,EAAE,EAAE,UAAU;QACjB,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YAC/B,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;YAC1B,MAAM,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,KAAK,OAAO;oBACR,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBACtB,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;oBACjB,KAAK,CAAC;gBACV;oBACI,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;wBACpC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;wBACtB,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;oBACrB,CAAC;YACT,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,CAAC,KAAK,CAAC,2DAA2D,EAAE,KAAK,CAAC,CAAC;QAClF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,EAAE,IAAI,CAAC;aAC1C,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChC,CAAC;IA1DF;QAAC,iBAAU,EAAE;;uBAAA;IA2Db,sBAAC;AAAD,CA1DA,AA0DC,IAAA;AA1DY,uBAAe,kBA0D3B,CAAA","file":"shared/services/division.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, URLSearchParams } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { Division } from '../models/division';\r\n\r\n@Injectable()\r\nexport class DivisionService {\r\n\tprivate _cached: string[];\r\n\r\n\tconstructor(public http: Http) {\r\n\t\tthis.http = http;\r\n\t}\r\n\r\n\tall(params: {} = {}) {\r\n\t    let query = new URLSearchParams();\r\n\t    for (var key in params) {\r\n\t        const param: string = params[key];\r\n\t        query.set(key, param);\r\n\t    }\r\n\r\n\t    return this.http.get('/divisions/paged', {search: query})\r\n\t        .map(res => res.json());\r\n\t}\r\n\r\n\toptions() {\r\n\t\treturn this.http.get('/options/divisions')\r\n\t\t\t.map(res => res.json());\r\n\t}\r\n\r\n    cache(v: string[]) {\r\n        this._cached = v;\r\n    }\r\n\r\n    cached() : string[] {\r\n        return this._cached;\r\n    }\r\n\r\n\tfind(id: number) {\r\n        return this.http.get('/divisions/' + id)\r\n            .map(res => res.json());\r\n\t}\r\n\r\n\tupdate(id, attributes) {\r\n\t    let form = new FormData();\r\n\t    let _form = {};\r\n\t    Object.keys(attributes).forEach(key => {\r\n\t        let val = attributes[key];\r\n\t        switch(key) {\r\n\t            case 'image':\r\n\t                form.append(key, val);\r\n\t                _form[key] = val;\r\n\t                break;\r\n\t            default:\r\n\t                if (val !== undefined && val !== null) {\r\n\t                    form.append(key, val);\r\n\t                    _form[key] = val;\r\n\t                }\r\n\t        }\r\n\t    });\r\n\r\n\t    console.debug('DivisionService is sending POST update request with form ', _form);\r\n\t    return this.http.post('/divisions/' + id, form)\r\n\t        .map(res => res.json());\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}