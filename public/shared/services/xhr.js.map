{"version":3,"sources":["shared/services/xhr.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAiD,eAAe,CAAC,CAAA;AAGjE;IAAA;QACI,aAAQ,GAAG,EAAE,CAAC;QACd,UAAK,GAAG,CAAC,CAAC;QAEA,UAAK,GAAG,IAAI,mBAAY,EAAE,CAAC;QAC3B,SAAI,GAAG,IAAI,mBAAY,EAAE,CAAC;IAaxC,CAAC;IAXG,4BAAO,GAAP,UAAQ,MAAO;QAEX,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,6BAAQ,GAAR,UAAS,MAAO;QACZ,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;IAbD;QAAC,aAAM,EAAE;;6CAAA;IACT;QAAC,aAAM,EAAE;;4CAAA;IANb;QAAC,iBAAU,EAAE;;kBAAA;IAmBb,iBAAC;AAAD,CAlBA,AAkBC,IAAA;AAlBY,kBAAU,aAkBtB,CAAA","file":"shared/services/xhr.js","sourcesContent":["import { Injectable, Output, EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class XhrService {\n    requests = [];\n    count = 0;\n\n    @Output() start = new EventEmitter();\n    @Output() done = new EventEmitter();\n\n    started(config?) {\n        //this.requests.push(config);\n        this.count++;\n        this.start.emit(config);\n    }\n\n    finished(config?) {\n        if (--this.count === 0) {\n            this.done.emit(config);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}