{"version":3,"sources":["shared/models/jp-file.ts"],"names":[],"mappings":"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","file":"shared/models/jp-file.js","sourcesContent":["import { Observable } from 'rxjs/Rx';\r\n\r\nexport interface JpFile {\r\n    alias?: string;\r\n    alt?: string;\r\n    created_at?: any;\r\n    extension?: string;\r\n    filename?: string;\r\n    id?: any;\r\n    idx?: number,\r\n    isNew?: boolean;\r\n    last_modified?: any;\r\n    mimetype?: string;\r\n    path?: string;\r\n    size?: number;\r\n    updated_at?: any;\r\n    title?: string;\r\n    url?: string;\r\n\r\n    _file?: File;\r\n    webkitRelativePath?: any;\r\n\r\n    date?(): any;\r\n    load?(imageEl?: HTMLImageElement) : Observable<any>;\r\n    map?(mapFn: (key: string, val: any) => any): any;\r\n}\r\n\r\nexport class ManagedFile implements JpFile {\r\n    alias: string;\r\n    alt: string;\r\n    created_at: any;\r\n    extension: string;\r\n    filename: string;\r\n    id: any;\r\n    idx: number;\r\n    isNew: boolean;\r\n    last_modified: any;\r\n    mimetype: string;\r\n    path: string;\r\n    size: number;\r\n    updated_at: any;\r\n    title: string;\r\n    url: string;\r\n\r\n    _file: File;\r\n    webkitRelativePath: string;\r\n\r\n    constructor(attributes: JpFile, idx: number) {\r\n        Object.assign(this, attributes);\r\n\r\n        this.idx = idx;\r\n\r\n        if (attributes._file) {\r\n            // Fill in managed file from File object\r\n            let file = attributes._file;\r\n            this.filename = file.name;\r\n            this.size = file.size;\r\n            this.mimetype = file.type;\r\n            this.extension = file.name.split('.').pop();\r\n            this.created_at = this.last_modified = file.lastModifiedDate;\r\n\r\n            if ( file['webkitRelativePath'] ) {\r\n                this.webkitRelativePath = file['webkitRelativePath'];\r\n            }\r\n        }\r\n        console.warn('ManagedFile constructed ...', this);\r\n    }\r\n\r\n    date() {\r\n        return this.created_at || this.last_modified;\r\n    }\r\n\r\n    filesize(units: string = 'kb') {\r\n        let divisor = 10;\r\n\r\n        switch(units) {\r\n            case 'mb':\r\n                divisor = 100;\r\n                break;\r\n        }\r\n\r\n        return Math.round(this.size / divisor) / 100;\r\n    }\r\n\r\n    map(mapFn: (key: string, val: any) => any) {\r\n        let keys = Object.keys(this);\r\n\r\n        keys.forEach(key => mapFn.apply(this, [key, this[key]]));\r\n    }\r\n}\r\n\r\nexport class ManagedImage extends ManagedFile {\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(attributes: JpFile, idx: number) {\r\n        super(attributes, idx);\r\n        console.warn('ManagedImage constructed ...', this);\r\n    }\r\n\r\n    read() : Observable<any> {\r\n        let file = this._file;\r\n\r\n        console.info('ManagedImage # read file: start', file);\r\n        const filename = file.name;\r\n\r\n        return Observable.create(observer => {\r\n            console.debug('ManagedImage # read file: working', file);\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = readerEvt => {\r\n                console.debug('ManagedImage # read file: complete');\r\n\r\n                observer.next(reader.result);\r\n            };\r\n\r\n            setTimeout(() => reader.readAsDataURL(file), 50);\r\n        });\r\n    }\r\n\r\n    load(imageEl: HTMLImageElement) : Observable<any> {\r\n        console.debug('ManagedImage.load start');\r\n        return Observable.create(observer => {\r\n            console.debug('ManagedImage.load subscription start');\r\n            imageEl.onload = (e) => {\r\n                console.debug('ManagedImage.load on load returned ', e);\r\n                observer.next({width: imageEl.naturalWidth, height: imageEl.naturalHeight});\r\n            }\r\n        })\r\n    }\r\n\r\n    watchForDimensions(imageEl: HTMLImageElement) {\r\n        this.load(imageEl).subscribe(e => {\r\n            this.width = e.width;\r\n            this.height = e.height;\r\n            console.debug('ManagedImage.load subscription done', this);\r\n        })\r\n    }\r\n\r\n    megapixels() {\r\n        return Math.round((this.width * this.height) / 10000) / 100;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}