{"version":3,"sources":["shared/models/jp-file.ts"],"names":[],"mappings":";;;;;;AAAA,mBAA2B,SAAS,CAAC,CAAA;AA2BrC;IAiBI,qBAAY,UAAkB,EAAE,GAAW;QACvC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAEhC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,yBAAG,GAAH,UAAI,KAAqC;QAAzC,iBAIC;QAHG,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,KAAI,EAAE,CAAC,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;IAC7D,CAAC;IACL,kBAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,mBAAW,cA6BvB,CAAA;AAED;IAAkC,gCAAW;IAIzC,sBAAY,UAAkB,EAAE,GAAW;QACvC,kBAAM,UAAU,EAAE,GAAG,CAAC,CAAC;QACvB,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,yCAAkB,GAAlB,UAAmB,OAAyB;QAA5C,iBAMC;QALG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAA,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YACvB,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAI,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAA;IACN,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAyB;QAC1B,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACzC,MAAM,CAAC,eAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC7B,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YACtD,OAAO,CAAC,MAAM,GAAG,UAAC,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,CAAC,CAAC,CAAC;gBACxD,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,aAAa,EAAC,CAAC,CAAC;YAChF,CAAC,CAAA;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IACL,mBAAC;AAAD,CA3BA,AA2BC,CA3BiC,WAAW,GA2B5C;AA3BY,oBAAY,eA2BxB,CAAA","file":"shared/models/jp-file.js","sourcesContent":["import { Observable } from 'rxjs/Rx';\r\n\r\nexport interface JpFile {\r\n    alias?: string;\r\n    alt?: string;\r\n    created_at?: any;\r\n    extension?: string;\r\n    filename?: string;\r\n    id?: any;\r\n    idx?: number,\r\n    isNew?: boolean;\r\n    last_modified?: any;\r\n    mimetype?: string;\r\n    path?: string;\r\n    size?: number;\r\n    updated_at?: any;\r\n    title?: string;\r\n    url: string;\r\n\r\n    _file?: File;\r\n    webkitRelativePath?: any;\r\n\r\n    map(mapFn: (key: string, val: any) => any): any;\r\n\r\n    load?(imageEl?: HTMLImageElement) : Observable<any>;\r\n}\r\n\r\nexport class ManagedFile implements JpFile {\r\n    alias: string;\r\n    alt: string;\r\n    created_at: any;\r\n    extension: string;\r\n    filename: string;\r\n    id: any;\r\n    idx: number;\r\n    isNew: boolean;\r\n    last_modified: any;\r\n    mimetype: string;\r\n    path: string;\r\n    size: number;\r\n    updated_at: any;\r\n    title: string;\r\n    url: string;\r\n\r\n    constructor(attributes: JpFile, idx: number) {\r\n        Object.assign(this, attributes);\r\n\r\n        this.idx = idx;\r\n        console.warn('ManagedFile constructed ...', this);\r\n    }\r\n\r\n    map(mapFn: (key: string, val: any) => any) {\r\n        let keys = Object.keys(this);\r\n\r\n        keys.forEach(key => mapFn.apply(this, [key, this[key]]));\r\n    }\r\n}\r\n\r\nexport class ManagedImage extends ManagedFile {\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(attributes: JpFile, idx: number) {\r\n        super(attributes, idx);\r\n        console.warn('ManagedImage constructed ...', this);\r\n    }\r\n\r\n    watchForDimensions(imageEl: HTMLImageElement) {\r\n        this.load(imageEl).subscribe(e => {\r\n            this.width = e.width;\r\n            this.height = e.height;\r\n            console.debug('ManagedImage.load subscription done', this);\r\n        })\r\n    }\r\n\r\n    load(imageEl: HTMLImageElement) : Observable<any> {\r\n        console.debug('ManagedImage.load start');\r\n        return Observable.create(observer => {\r\n            console.debug('ManagedImage.load subscription start');\r\n            imageEl.onload = (e) => {\r\n                console.debug('ManagedImage.load on load returned ', e);\r\n                observer.next({width: imageEl.naturalWidth, height: imageEl.naturalHeight});\r\n            }\r\n        })\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}