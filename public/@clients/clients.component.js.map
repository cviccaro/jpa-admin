{"version":3,"sources":["@clients/clients.component.ts"],"names":[],"mappings":"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","file":"@clients/clients.component.js","sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\nimport { CacheService, JpClient, JpaContextMenu, CONTEXT_MENU_DIRECTIVES, JpaModal, ModalAction, ClientService, TooltipDirective, LoggerService } from '../shared/index';\n\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-clients',\n    templateUrl: './clients.component.html',\n    styleUrls: ['./clients.component.css'],\n    directives: [ MATERIAL_DIRECTIVES, CONTEXT_MENU_DIRECTIVES, TooltipDirective ]\n})\nexport class ClientsComponent implements AfterViewInit {\n    public state: any;\n    public clients: JpClient[];\n    private subs: Subscription[];\n\n    constructor(\n        private service: ClientService,\n        private cache: CacheService,\n        private modal: JpaModal,\n        private toaster: ToasterService,\n        private menu: JpaContextMenu,\n        private log: LoggerService\n    ) {\n        this.state = this.cache.get('clients');\n\n        this.state.sortOptions = [\n            { name: 'Updated At', value: 'updated_at' },\n            { name: 'Created At', value: 'created_at' },\n            { name: 'Name', value: 'name' },\n            { name: 'Projects', value: 'projects' }\n        ];\n        this.state.perPageOptions = [5, 10, 15, 25, 50, 100];\n        this.state.sort = {\n            by: 'name',\n            descending: false\n        };\n        this.clients = this.state.data;\n    }\n\n    ngAfterViewInit() {\n        this.log.log('ClientsComponent View Initialized.', this);\n    }\n\n    add() {\n        this.modal.open({\n            mode: 'form',\n            inputs: [\n                { name: 'name', required: true },\n                { name: 'alias'},\n                { name: 'featured', type: 'checkbox' },\n                { name: 'image', type: 'file' }\n            ],\n            title: 'Add a client'\n        }).subscribe((action: ModalAction) => {\n            if (action.type === 'submit') {\n                let form = action.config.inputs;\n\n                this.log.log('We can now save our client with this data: ', {\n                    form: form\n                });\n                let sub = this.service.create(form)\n                    .subscribe(res => {\n                        this.toaster.pop('success', 'Success!', res.name + ' has been created.');\n                        setTimeout(() => { this.fetch() },0);\n                    })\n\n                this.subs.push(sub);\n            }\n        });\n    }\n\n    edit(client: JpClient) {\n        this.menu.close();\n        let modalConfig = {\n            mode: 'form',\n            inputs: [\n                { name: 'name', required: true, value: client.name },\n                { name: 'alias', value: client.alias },\n                { name: 'featured', type: 'checkbox', value: client.featured },\n                { name: 'image_remove', type: 'toggle', label: 'Slide to Delete Image'},\n                { name: 'image', type: 'file', label: 'Replace Image', conditions: [\n                    {\n                        target: 'image_remove',\n                        condition: (source, target) => {\n                            return target.value;\n                        },\n                        action: 'hidden'\n                    }\n                ]},\n            ],\n            formClass: 'update' + (client.image_id !== null ? ' has-image' : ''),\n            okText: 'Save',\n            title: 'Edit client ' + client.name\n        };\n\n        if (client.image_id === null) {\n            modalConfig.inputs[4]['label'] = 'Add an image';\n            modalConfig.inputs.splice(3, 1);\n        }\n\n        let sub = this.modal.open(modalConfig).subscribe((action: ModalAction) => {\n            if (action.type === 'submit') {\n                let form = action.config.inputs;\n\n                this.log.log('We can now save our client with this data: ', {\n                    form: form\n                });\n                let _sub = this.service.update(client.id, form)\n                    .subscribe(res => {\n                        this.toaster.pop('success', 'Success!', res.name + ' has been edited.');\n                        setTimeout(() => { this.fetch() },0);\n                    })\n\n                this.subs.push(_sub);\n            }\n        });\n\n        this.subs.push(sub);\n    }\n\n    remove(client: JpClient) {\n        this.menu.close();\n        let name = client.name;\n        let sub = this.modal.open({message: 'Discard client?', okText: 'Discard'})\n            .subscribe((action: ModalAction) => {\n                if (action.type === 'ok') {\n                    let _sub = this.service.destroy(client.id)\n                        .subscribe(res => {\n                            this.toaster.pop('success', 'Success!', name + ' has been obliterated.');\n                            setTimeout(() => { this.fetch() },0);\n                        })\n\n                    this.subs.push(_sub);\n                }\n            })\n\n        this.subs.push(sub);\n    }\n\n    fetch() {\n        this.service.all().subscribe(res => {\n            this.clients = res.data;\n        });\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(sub => {\n            if (sub) sub.unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"/source/"}