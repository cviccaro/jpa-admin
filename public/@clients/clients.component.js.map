{"version":3,"sources":["@clients/clients.component.ts"],"names":[],"mappings":"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","file":"@clients/clients.component.js","sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\nimport { JpaCache, JpClient, JpaContextMenu, CONTEXT_MENU_DIRECTIVES, JpaModal, ModalAction, ClientService } from '../shared/index';\n\n@Component({\n    moduleId: module.id,\n    selector: 'jpa-clients',\n    templateUrl: './clients.component.html',\n    styleUrls: ['./clients.component.css'],\n    directives: [ MATERIAL_DIRECTIVES, CONTEXT_MENU_DIRECTIVES ]\n})\nexport class ClientsComponent implements AfterViewInit {\n    public state: any;\n    public clients: JpClient[];\n\n    constructor(private service: ClientService, private cache: JpaCache, private modal: JpaModal, private toaster: ToasterService) {\n        this.state = this.cache.get('clients');\n\n        this.state.sortOptions = [\n            { name: 'Updated At', value: 'updated_at' },\n            { name: 'Created At', value: 'created_at' },\n            { name: 'Name', value: 'name' },\n            { name: 'Projects', value: 'projects' }\n        ];\n        this.state.perPageOptions = [5, 10, 15, 25, 50, 100];\n        this.state.sort = {\n            by: 'name',\n            descending: false\n        };\n        this.clients = this.state.data;\n    }\n\n    ngAfterViewInit() {\n        console.log('ClientsComponent View Initialized.', this);\n    }\n\n    add() {\n        console.log('add a client');\n        this.modal.open({\n            mode: 'form',\n            inputs: [\n                { name: 'name', required: true },\n                { name: 'alias'},\n                { name: 'featured', type: 'checkbox' },\n                { name: 'image', type: 'file' }\n            ],\n            title: 'Add a client'\n        }).subscribe((action: ModalAction) => {\n            if (action.type === 'submit') {\n                let form = action.config.inputs;\n\n                console.log('We can now save our client with this data: ', {\n                    form: form\n                });\n                this.service.create(form)\n                    .subscribe(res => {\n                        this.toaster.pop('success', 'Success!', res.name + ' has been created.');\n                        setTimeout(() => { this.fetch() },0);\n                    })\n            }\n        });\n    }\n\n    toggleFeatured(client: JpClient) {\n        console.log('toggle featured', client);\n    }\n\n    edit(client: JpClient) {\n        console.log('Edit Client', client);\n        this.modal.open({\n            mode: 'form',\n            inputs: [\n                { name: 'name', required: true, value: client.name },\n                { name: 'alias', value: client.alias },\n                { name: 'featured', type: 'checkbox', value: client.featured },\n                { name: 'image', type: 'file' },\n                { name: 'image_remove', type: 'checkbox', label: 'Delete Image' }\n            ],\n            formClass: 'update' + (client.image_id !== null ? ' has-image' : ''),\n            okText: 'Update',\n            title: 'Edit client ' + client.name\n        }).subscribe((action: ModalAction) => {\n            if (action.type === 'submit') {\n                let form = action.config.inputs;\n\n                console.log('We can now save our client with this data: ', {\n                    form: form\n                });\n                this.service.update(client.id, form)\n                    .subscribe(res => {\n                        this.toaster.pop('success', 'Success!', res.name + ' has been edited.');\n                        setTimeout(() => { this.fetch() },0);\n                    })\n            }\n        });\n    }\n\n    remove(client: JpClient) {\n        console.log('Remove  Client', client);\n        let name = client.name; \n        this.modal.open({message: 'Discard client?', okText: 'Discard'})\n            .subscribe((action: ModalAction) => {\n                if (action.type === 'ok') {\n                    this.service.destroy(client.id)\n                        .subscribe(res => {\n                            this.toaster.pop('success', 'Success!', name + ' has been obliterated.');\n                            setTimeout(() => { this.fetch() },0);\n                        })\n                }\n            })\n    }\n\n    fetch() { \n        this.service.all().subscribe(res => {\n            this.clients = res.data;\n        });\n    }\n}\n"],"sourceRoot":"/source/"}