{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0E,eAAe,CAAC,CAAA;AAC1F,qBAA+B,eAAe,CAAC,CAAA;AAC/C,uBAA0C,iBAAiB,CAAC,CAAA;AAC5D,iCAAyE,kBAAkB,CAAC,CAAA;AAC5F,kCAAwD,iCAAiC,CAAC,CAAA;AAC1F,wBAAyB,4BAA4B,CAAC,CAAA;AAGtD,sBAAwE,gBAAgB,CAAC,CAAA;AAezF;IAYI,sBAAmB,MAAc,EAAU,WAAwB,EAAU,WAA2B,EAAU,SAA2B;QAA1H,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAAU,cAAS,GAAT,SAAS,CAAkB;QAV7I,aAAQ,GAAG,KAAK,CAAC;QAET,gBAAW,GAAW,CAAC,CAAC;QACxB,cAAS,GAAW,EAAE,CAAC;QAGvB,YAAO,GAAG,IAAI,CAAC;QAKnB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,gCAAa,CAAC;YACnC,eAAe,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IAChD,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAcC;QAbG,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,UAAA,UAAU,IAAI,OAAA,KAAI,CAAC,QAAQ,GAAG,UAAU,EAA1B,CAA0B,CAAC,CAAC;QAChG,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,GAAG;YACxC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACtB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACjD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC;gBACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAClD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACxB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,2BAAI,GAAJ;QACI,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAC,WAAW,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,iCAAU,GAAV,UAAW,IAAI;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,kCAAW,GAAX;QAEI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,WAAW,EAAE,EAAf,CAAe,CAAC,CAAC;IACrD,CAAC;IAED,8BAAO,GAAP,UAAQ,GAAQ,EAAE,MAAuB;QAAvB,sBAAuB,GAAvB,cAAuB;QACrC,EAAE,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,GAAG,CAAC;QAC1C,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,mCAAY,GAAZ,UAAa,GAAW;QACpB,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,GAAG,CAAC;IACpC,CAAC;IAED,yCAAkB,GAAlB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC1B,CAAC;IACL,CAAC;IA1DD;QAAC,gBAAS,CAAC,mBAAS,CAAC;;kDAAA;IAvBzB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,SAAS;YACnB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;YAClC,aAAa,EAAE,CAAC,qBAAc,CAAC;YAC/B,SAAS,EAAE,CAAC,sCAAkB,EAAE,iCAAc,EAAE,gBAAQ,EAAE,sBAAc,CAAC;YACzE,UAAU,EAAE;gBACR,0BAAiB;gBACjB,uCAAmB;gBACnB,4CAAyB;gBACzB,wBAAgB;aACnB;SACJ,CAAC;;oBAAA;IAsEF,mBAAC;AAAD,CArEA,AAqEC,IAAA;AArEY,oBAAY,eAqExB,CAAA","file":"app.component.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { HTTP_PROVIDERS } from '@angular/http';\r\nimport { ROUTER_DIRECTIVES, Router } from '@angular/router';\r\nimport { ToasterContainerComponent, ToasterService, ToasterConfig } from 'angular2-toaster';\r\nimport { MATERIAL_DIRECTIVES, MATERIAL_PROVIDERS } from './shared/libs/angular2-material';\r\nimport { MdSidenav} from '@angular2-material/sidenav';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { AuthService, MODAL_DIRECTIVES, JpaModal, JpaContextMenu } from './shared/index';\r\n\r\n@Component({\r\n    selector: 'jpa-app',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    viewProviders: [HTTP_PROVIDERS],\r\n    providers: [MATERIAL_PROVIDERS, ToasterService, JpaModal, JpaContextMenu],\r\n    directives: [\r\n        ROUTER_DIRECTIVES,\r\n        MATERIAL_DIRECTIVES,\r\n        ToasterContainerComponent,\r\n        MODAL_DIRECTIVES\r\n    ]\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n    toasterConfig: ToasterConfig;\r\n    loggedIn = false;\r\n\r\n    private _routeDepth: number = 0;\r\n    private _routeUrl: string = '';\r\n    private subscriptions: Subscription[];\r\n\r\n    private loading = true;\r\n\r\n    @ViewChild(MdSidenav) private _sidenav: MdSidenav;\r\n\r\n    constructor(public router: Router, private authService: AuthService, private contextMenu: JpaContextMenu, private container: ViewContainerRef) {\r\n        this.contextMenu.setContainer(container);\r\n        this.toasterConfig = new ToasterConfig({\r\n            showCloseButton: true\r\n        });\r\n        this.loggedIn = this.authService.authorized;\r\n    }\r\n\r\n    ngOnInit() {\r\n        let _sub1 = this.authService.whenAuthorized.subscribe(authorized => this.loggedIn = authorized);\r\n        let _sub2 = this.router.events.subscribe(evt => {\r\n            console.warn(evt.toString());\r\n            if (evt.toString().match('^NavigationEnd')) {\r\n                this._sidenav.close();\r\n                this._routeDepth = evt.url.split('/').length - 1;\r\n                this._routeUrl = evt.url;\r\n                this.loading = false;\r\n            } else if (evt.toString().match('^NavigationStart')) {\r\n                this.loading = true;\r\n            }\r\n        });\r\n        this.subscriptions = [_sub1, _sub2];\r\n    }\r\n\r\n    back() {\r\n        let parentRoute = this._routeUrl.split('/')[1];\r\n        this.router.navigate(['/'+parentRoute]);\r\n    }\r\n\r\n    navigateTo(link) {\r\n        this.router.navigate(link);\r\n    }\r\n\r\n    logout() {\r\n        this.authService.reset();\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // clean up\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    routeIs(url: any, strict: boolean = false): boolean {\r\n        if (strict) return this._routeUrl === url;\r\n        return !!this._routeUrl.match(url);\r\n    }\r\n\r\n    routeDepthIs(num: number): boolean {\r\n        return this._routeDepth === num;\r\n    }\r\n\r\n    closeSidebarIfOpen() {\r\n        if (this._sidenav.opened) {\r\n            this._sidenav.close();\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}