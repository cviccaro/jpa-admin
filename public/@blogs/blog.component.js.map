{"version":3,"sources":["@blogs/blog.component.ts"],"names":[],"mappings":"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","file":"@blogs/blog.component.js","sourcesContent":["import { Component, HostBinding, OnInit, ViewChild, QueryList, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { ToasterService } from 'angular2-toaster';\nimport { CKEditor } from 'ng2-ckeditor';\nimport { MATERIAL_DIRECTIVES } from '../shared/libs/angular2-material';\nimport {\n    BlogService,\n    Blog,\n    DivisionService,\n    Tag,\n    TagService,\n    CacheService,\n    PANEL2_DIRECTIVES,\n    PanelFormComponent,\n    PanelFormControl,\n    PanelFormControlTextfield,\n    PanelFormControlSelect,\n    PanelFormControlTextarea,\n    PanelFormControlDragnDrop,\n    PanelFormControlFiles,\n    LoggerService\n} from '../shared/index';\n\n@Component({\n    moduleId: module.id,\n    templateUrl: './blog.component.html',\n    styleUrls: ['./blog.component.css'],\n    directives: [\n        MATERIAL_DIRECTIVES,\n        PANEL2_DIRECTIVES\n    ]\n})\nexport class BlogComponent implements OnInit, OnDestroy {\n    public divisions: { id: number, name: string }[];\n    public tags: { id: number, name: string }[];\n    public controls: PanelFormControl<any>[];\n\n    public isNew: boolean = false;\n    public ready: boolean = false;\n    public saving: boolean = false;\n\n    private _originalTitle: string;\n    private _blog: Blog = new Blog();\n    private _subscriptions: Subscription[] = [];\n\n    @HostBinding('class.new') get isNewClass() { return this.isNew; }\n\n    @ViewChild(PanelFormComponent) public _formCmp: PanelFormComponent;\n    public ckEditors: QueryList<CKEditor>;\n\n    get blog(): Blog { return this._blog; }\n    set blog(v: Blog) {\n        this._blog = v;\n        this.setup();\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private service: BlogService,\n        private cache: CacheService,\n        private toasterService: ToasterService,\n        private router: Router,\n        private log: LoggerService\n    ) { }\n\n    ngOnInit() {\n        this.tags = this.cache.get('tags');\n        this.divisions = this.cache.get('divisions');\n\n        let id = this.route.snapshot.params['id'];\n\n        if (id === 'new') {\n            this.ready = true;\n            this.isNew = true;\n            setTimeout(() => {\n              this.ckEditors = this._formCmp._ckEditors;\n            });\n        } else {\n            let sub = this.service.find(+id).subscribe(res => {\n                this.blog = res;\n                this.ready = true;\n                setTimeout(() => {\n                  this.ckEditors = this._formCmp._ckEditors;\n                });\n            });\n\n            this._subscriptions.push(sub);\n        }\n\n        this.controls = [\n          new PanelFormControlTextfield({\n            name: 'title',\n            required: true,\n            order: 3\n          }),\n          new PanelFormControlDragnDrop({\n              name: 'tags',\n              required: true,\n              options: this.tags,\n              placeholder: 'Add a tag'\n          }),\n          new PanelFormControlDragnDrop({\n              name: 'divisions',\n              required: true,\n              options: this.divisions\n          }),\n          new PanelFormControlTextarea({\n              name: 'body',\n              required: true,\n              ckeditor: true\n          }),\n          new PanelFormControlTextarea({\n              name: 'summary',\n              required: false,\n              ckeditor: true\n          }),\n          new PanelFormControlTextfield({\n            name: 'author',\n            required: false\n          }),\n          new PanelFormControlFiles({\n              name: 'image',\n              label: 'Cover Image',\n              required: false,\n              multiple: false,\n              type: 'image'\n          })\n        ];\n\n        this.log.info('BlogComponent#' + (this.isNew ? 'create' : 'edit') + ' initialized.', this);\n    }\n\n    onSubmit(model) {\n        this.saving = true;\n\n        if (this.isNew) {\n            this.log.log('Save NEW blog. ', model);\n            let sub = this.service.create(model)\n                .subscribe(res => {\n                    this.toasterService.pop('success', 'Success!', res.title + ' has been created.  Redirecting to its page.');\n                    setTimeout(() => {\n                        this.blog = res;\n                        this.log.log(\"Navigating to /blogs/\" + res.id);\n                        this.router.navigate(['/blogs', res.id]);\n                        this.reset();\n                    }, 1000);\n                }, err => {\n                    this.log.log('Error when saving blog: ', err);\n                    this.saving = false;\n                    this.toasterService.pop('error', 'Uh oh.', 'Something went wrong when saving this blog.  Sorry.  Try again later and/or alert the developer!');\n                });\n            this._subscriptions.push(sub);\n        } else {\n            this.log.log('Save UPDATED blog. ', model);\n\n            let sub = this.service.update(this.blog.id, model)\n                .subscribe(res => {\n                    this.log.log('response from update: ', res);\n                    this.blog = res;\n                    this.reset();\n                    this.toasterService.pop('success', 'Success!', res.title + ' has been saved.');\n                }, err => {\n                    this.log.log('Error when saving blog: ', err);\n                    this.saving = false;\n                    this.toasterService.pop('error', 'Uh oh.', 'Something went wrong when saving this blog.  Sorry.  Try again later and/or alert the developer!');\n                });\n\n            this._subscriptions.push(sub);\n        }\n    }\n\n    private setup() {\n        this._originalTitle = this._blog.title;\n        this.isNew = this.blog.id === undefined;\n    }\n\n    private reset(e?: Event) {\n        if (e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        this.log.info('BlogComponent.reset()', this);\n\n        this.saving = false;\n        \n        // Temporary workaround until angular2 implements\n        // a proper form reset\n        this.ready = false;\n        if (this.ckEditors.length) {\n          this._formCmp._ckEditors.forEach(editor => editor.instance.destroy());\n        }\n\n        setTimeout(() => { \n          this.ready = true; \n          setTimeout(() => {\n            this.ckEditors = this._formCmp._ckEditors;\n          });\n        });\n    }\n\n    /**\n     * Cleanup just before Angular destroys the directive/component. Unsubscribe \n     * observables and detach event handlers to avoid memory leaks.\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach(sub => {\n            if (sub) sub.unsubscribe();\n        });\n    }\n}\n"],"sourceRoot":"/source/"}